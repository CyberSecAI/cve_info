{
  "cveId": "CVE-2022-35948",
  "version": "1.0.0",
  "timestamp": "2024-11-03T18:37:50.907685+00:00",
  "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example ``` import { request } from undici const unsanitizedContentTypeInput = application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1 await request(http//localhost3000, { method GET, headers { content-type unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call 1) `http//localhost3000/` 2) `http//localhost3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
  "keyphrases": {
    "rootcause": "unsanitized input",
    "weakness": "CRLF injection",
    "impact": "send multiple requests",
    "vector": "unsanitized input as request headers",
    "attacker": "",
    "product": "undici",
    "version": "5.8.0",
    "component": "content-type header"
  },
  "mitreTechnicalImpacts": [
    "Modify data"
  ]
}