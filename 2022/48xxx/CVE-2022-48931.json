{
    "cveId": "CVE-2022-48931",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved configfs fix a race in configfs_{,un}register_subsystem() When configfs_register_subsystem() or configfs_unregister_subsystem() is executing link_group() or unlink_group(), it is possible that two processes add or delete list concurrently. Some unfortunate interleavings of them can cause kernel panic. One of cases is A --> B --> C --> D A prev = prev | | next->prev = prev prev->next = next | | // prev == B | prev->next = next Fix this by adding mutex when calling link_group() or unlink_group(), but parent configfs_subsystem is NULL when config_item is root. So I create a mutex configfs_subsystem_mutex.",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "",
        "impact": "kernel panic",
        "vector": "interleavings in configfs_{,un}register_subsystem()",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "configfs"
    }
}
