{
    "cveId": "CVE-2022-48848",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved tracing/osnoise Do not unregister events twice Nicolas reported that using # trace-cmd record -e all -M 10 -p osnoise --poll Resulted in the following kernel warning ------------[ cut here ]------------ WARNING CPU 0 PID 1217 at kernel/tracepoint.c404 tracepoint_probe_unregister+0x280/0x370 [...] CPU 0 PID 1217 Comm trace-cmd Not tainted 5.17.0-rc6-next-20220307-nico+ #19 RIP 0010tracepoint_probe_unregister+0x280/0x370 [...] CR2 00007ff919b29497 CR3 0000000109da4005 CR4 0000000000170ef0 Call Trace osnoise_workload_stop+0x36/0x90 tracing_set_tracer+0x108/0x260 tracing_set_trace_write+0x94/0xd0 ? __check_object_size.part.0+0x10a/0x150 ? selinux_file_permission+0x104/0x150 vfs_write+0xb5/0x290 ksys_write+0x5f/0xe0 do_syscall_64+0x3b/0x90 entry_SYSCALL_64_after_hwframe+0x44/0xae RIP 00330x7ff919a18127 [...] ---[ end trace 0000000000000000 ]--- The warning complains about an attempt to unregister an unregistered tracepoint. This happens on trace-cmd because it first stops tracing, and then switches the tracer to nop. Which is equivalent to # cd /sys/kernel/tracing/ # echo osnoise > current_tracer # echo 0 > tracing_on # echo nop > current_tracer The osnoise tracer stops the workload when no trace instance is actually collecting data. This can be caused both by disabling tracing or disabling the tracer itself. To avoid unregistering events"
}
