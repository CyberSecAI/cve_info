{
    "cveId": "CVE-2022-48840",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved iavf Fix hang during reboot/shutdown Recent commit 974578017fc1 (iavf Add waiting so the port is initialized in remove) adds a wait-loop at the beginning of iavf_remove() to ensure that port initialization is finished prior unregistering net device. This causes a regression in reboot/shutdown scenario because in this case callback iavf_shutdown() is called and this callback detaches the device, makes it down if it is running and sets its state to __IAVF_REMOVE. Later shutdown callback of associated PF driver (e.g. ice_shutdown) is called. That callback calls among other things sriov_disable() that calls indirectly iavf_remove() (see stack trace below). As the adapter state is already __IAVF_REMOVE then the mentioned loop is end-less and shutdown process hangs. The patch fixes this by checking adapters state at the beginning of iavf_remove() and skips the rest of the function if the adapter is already in remove state (shutdown is in progress). Reproducer 1. Create VF on PF driven by ice or i40e driver 2. Ensure that the VF is bound to iavf driver 3. Reboot [52625.981294] sysrq SysRq Show Blocked State [52625.988377] taskreboot stateD stack 0 pid17359 ppid 1 f2 [52625.996732] Call Trace [52625.999187] __schedule+0x2d1/0x830 [52626.007400] schedule+0x35/0xa0 [52626.010545] schedule_hrtimeout_range_clock+0x83/0x100 [52626.020046] usleep_range+0x5b/0x80 [52626.023540] iavf_",
    "keyphrases": {
        "rootcause": "wait-loop in iavf_remove() that is always reached during shutdown",
        "weakness": "",
        "impact": "hang during reboot/shutdown",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "iavf"
    }
}
