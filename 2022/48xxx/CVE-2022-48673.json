{
    "cveId": "CVE-2022-48673",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net/smc Fix possible access to freed memory in link clear After modifying the QP to the Error state, all RX WR would be completed with WC in IB_WC_WR_FLUSH_ERR status. Current implementation does not wait for it is done, but destroy the QP and free the link group directly. So there is a risk that accessing the freed memory in tasklet context. Here is a crash example BUG unable to handle page fault for address ffffffff8f220860 #PF supervisor write access in kernel mode #PF error_code(0x0002) - not-present page PGD f7300e067 P4D f7300e067 PUD f7300f063 PMD 8c4e45063 PTE 800ffff08c9df060 Oops 0002 [#1] SMP PTI CPU 1 PID 0 Comm swapper/1 Kdump loaded Tainted G S OE 5.10.0-0607+ #23 Hardware name Inspur NF5280M4/YZMB-00689-101, BIOS 4.1.20 07/09/2018 RIP 0010native_queued_spin_lock_slowpath+0x176/0x1b0 Code f3 90 48 8b 32 48 85 f6 74 f6 eb d5 c1 ee 12 83 e0 03 83 ee 01 48 c1 e0 05 48 63 f6 48 05 00 c8 02 00 48 03 04 f5 00 09 98 8e 89 10 8b 42 08 85 c0 75 09 f3 90 8b 42 08 85 c0 74 f7 48 8b 32 RSP 0018ffffb3b6c001ebd8 EFLAGS 00010086 RAX ffffffff8f220860 RBX 0000000000000246 RCX 0000000000080000 RDX ffff91db1f86c800 RSI 000000000000173c RDI ffff91db62bace00 RBP ffff91db62bacc00 R08 0000000000000000 R09 c00000010000028b R10 0000000000055198 R11 ffffb3b6c001ea58 R12 ffff91db80e05010 R13 000000000000000a R14 0000000000000006 R15 0000000000000040 FS",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "",
        "impact": "access to freed memory",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net/smc"
    }
}
