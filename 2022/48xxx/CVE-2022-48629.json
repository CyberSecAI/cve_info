{
    "cveId": "CVE-2022-48629",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved crypto qcom-rng - ensure buffer for generate is completely filled The generate function in struct rng_alg expects that the destination buffer is completely filled if the function returns 0. qcom_rng_read() can run into a situation where the buffer is partially filled with randomness and the remaining part of the buffer is zeroed since qcom_rng_generate() doesnt check the return value. This issue can be reproduced by running the following from libkcapi kcapi-rng -b 9000000 > OUTFILE The generated OUTFILE will have three huge sections that contain all zeros, and this is caused by the code where the test val & PRNG_STATUS_DATA_AVAIL fails. Lets fix this issue by ensuring that qcom_rng_read() always returns with a full buffer if the function returns success. Lets also have qcom_rng_generate() return the correct value. Heres some statistics from the ent project (https//www.fourmilab.ch/random/) that shows information about the quality of the generated numbers $ ent -c qcom-random-before Value Char Occurrences Fraction 0 606748 0.067416 1 33104 0.003678 2 33001 0.003667 ... 253 32883 0.003654 254 33035 0.003671 255 33239 0.003693 Total 9000000 1.000000 Entropy = 7.811590 bits per byte. Optimum compression would reduce the size of this 9000000 byte file"
}
