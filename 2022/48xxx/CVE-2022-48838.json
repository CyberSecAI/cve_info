{
    "cveId": "CVE-2022-48838",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved usb gadget Fix use-after-free bug by not setting udc->dev.driver The syzbot fuzzer found a use-after-free bug BUG KASAN use-after-free in dev_uevent+0x712/0x780 drivers/base/core.c2320 Read of size 8 at addr ffff88802b934098 by task udevd/3689 CPU 2 PID 3689 Comm udevd Not tainted 5.17.0-rc4-syzkaller-00229-g4f12b742eb2b #0 Hardware name QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014 Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c106 print_address_description.constprop.0.cold+0x8d/0x303 mm/kasan/report.c255 __kasan_report mm/kasan/report.c442 [inline] kasan_report.cold+0x83/0xdf mm/kasan/report.c459 dev_uevent+0x712/0x780 drivers/base/core.c2320 uevent_show+0x1b8/0x380 drivers/base/core.c2391 dev_attr_show+0x4b/0x90 drivers/base/core.c2094 Although the bug manifested in the driver core, the real cause was a race with the gadget core. dev_uevent() does if (dev->driver) add_uevent_var(env, DRIVER=%s, dev->driver->name) and between the test and the dereference of dev->driver, the gadget core sets dev->driver to NULL. The race wouldnt occur if the gadget core registered its devices on a real bus, using the standard synchronization techniques of the driver core. However, its not necessary to make such a large change in order to fix this bug all we need to do is make sure that udc->dev.driver is always",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "5.17.0-rc4-syzkaller-00229-g4f12b742eb2b",
        "component": "usb gadget"
    }
}
