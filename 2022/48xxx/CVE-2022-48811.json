{
  "cveId": "CVE-2022-48811",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved ibmvnic dont release napi in __ibmvnic_open() If __ibmvnic_open() encounters an error such as when setting link state, it calls release_resources() which frees the napi structures needlessly. Instead, have __ibmvnic_open() only clean up the work it did so far (i.e. disable napi and irqs) and leave the rest to the callers. If caller of __ibmvnic_open() is ibmvnic_open(), it should release the resources immediately. If the caller is do_reset() or do_hard_reset(), they will release the resources on the next reset. This fixes following crash that occurred when running the drmgr command several times to add/remove a vnic interface [102056] ibmvnic 30000003 env3 Disabling rx_scrq[6] irq [102056] ibmvnic 30000003 env3 Disabling rx_scrq[7] irq [102056] ibmvnic 30000003 env3 Replenished 8 pools Kernel attempted to read user page (10) - exploit attempt? (uid 0) BUG Kernel NULL pointer dereference on read at 0x00000010 Faulting instruction address 0xc000000000a3c840 Oops Kernel access of bad area, sig 11 [#1] LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries ... CPU 9 PID 102056 Comm kworker/92 Kdump loaded Not tainted 5.16.0-rc5-autotest-g6441998e2e37 #1 Workqueue events_long __ibmvnic_reset [ibmvnic] NIP c000000000a3c840 LR c0080000029b5378 CTR c000000000a3c820 REGS c0000000548e37e0 TRAP 0300 Not tainted (5.16.0-rc5-autotest-g6441998e2e37) MSR 8000000000009033 <SF,EE,ME,IR,DR,RI",
  "keyphrases": {
    "rootcause": "BUG in __ibmvnic_open() function",
    "weakness": "improper memory management",
    "impact": [
      "NULL pointer dereference",
      "Oops"
    ],
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "5.16.0-rc5-autotest-g6441998e2e37",
    "component": "ibmvnic driver"
  },
  "mitreTechnicalImpacts": []
}