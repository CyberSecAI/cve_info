{
    "cveId": "CVE-2022-48805",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net usb ax88179_178a Fix out-of-bounds accesses in RX fixup ax88179_rx_fixup() contains several out-of-bounds accesses that can be triggered by a malicious (or defective) USB device, in particular - The metadata array (hdr_off..hdr_off+2*pkt_cnt) can be out of bounds, causing OOB reads and (on big-endian systems) OOB endianness flips. - A packet can overlap the metadata array, causing a later OOB endianness flip to corrupt data used by a cloned SKB that has already been handed off into the network stack. - A packet SKB can be constructed whose tail is far beyond its end, causing out-of-bounds heap data to be considered part of the SKBs data. I have tested that this can be used by a malicious USB device to send a bogus ICMPv6 Echo Request and receive an ICMPv6 Echo Reply in response that contains random kernel heap data. Its probably also possible to get OOB writes from this on a little-endian system somehow - maybe by triggering skb_cow() via IP options processing -, but I havent tested that.",
    "keyphrases": {
        "rootcause": "out-of-bounds accesses",
        "weakness": "",
        "impact": [
            "OOB reads",
            "OOB endianness flips",
            "corrupt data"
        ],
        "vector": "malicious (or defective) USB device",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net usb ax88179_178a Fix"
    }
}
