{
    "cveId": "CVE-2022-48801",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved iio buffer Fix file related error handling in IIO_BUFFER_GET_FD_IOCTL If we fail to copy the just created file descriptor to userland, we try to clean up by putting back fd and freeing ib. The code uses put_unused_fd() for the former which is wrong, as the file descriptor was already published by fd_install() which gets called internally by anon_inode_getfd(). This makes the error handling code leaving a half cleaned up file descriptor table around and a partially destructed file object, allowing userland to play use-after-free tricks on us, by abusing the still usable fd and making the code operate on a dangling file->private_data pointer. Instead of leaving the kernel in a partially corrupted state, dont attempt to explicitly clean up and leave this to the process exit path thatll release any still valid fds, including the one created by the previous call to anon_inode_getfd(). Simply return -EFAULT to indicate the error.",
    "keyphrases": {
        "rootcause": "improper error handling",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "IIO_BUFFER_GET_FD_IOCTL"
    }
}
