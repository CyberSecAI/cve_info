{
    "cveId": "CVE-2022-48800",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved mm vmscan remove deadlock due to throttling failing to make progress A soft lockup bug in kcompactd was reported in a private bugzilla with the following visible in dmesg watchdog BUG soft lockup - CPU#33 stuck for 26s! [kcompactd0479] watchdog BUG soft lockup - CPU#33 stuck for 52s! [kcompactd0479] watchdog BUG soft lockup - CPU#33 stuck for 78s! [kcompactd0479] watchdog BUG soft lockup - CPU#33 stuck for 104s! [kcompactd0479] The machine had 256G of RAM with no swap and an earlier failed allocation indicated that node 0 where kcompactd was run was potentially unreclaimable Node 0 active_anon29355112kB inactive_anon2913528kB active_file0kB inactive_file0kB unevictable64kB isolated(anon)0kB isolated(file)0kB mapped8kB dirty0kB writeback0kB shmem26780kB shmem_thp 0kB shmem_pmdmapped 0kB anon_thp 23480320kB writeback_tmp0kB kernel_stack2272kB pagetables24500kB all_unreclaimable? yes Vlastimil Babka investigated a crash dump and found that a task migrating pages was trying to drain PCP lists PID 52922 TASK ffff969f820e5000 CPU 19 COMMAND kworker/u1283 Call Trace __schedule schedule schedule_timeout wait_for_completion __flush_work __drain_all_pages __alloc_pages_slowpath.constprop.114 __alloc_pages alloc_migration_target migrate_pages migrate_to_node do_migrate_pages",
    "keyphrases": {
        "rootcause": "soft lockup bug in kcompactd",
        "weakness": "",
        "impact": "deadlock",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "mm vmscan"
    }
}
