{
    "cveId": "CVE-2022-50091",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved locking/csd_lock Change csdlock_debug from early_param to __setup The csdlock_debug kernel-boot parameter is parsed by the early_param() function csdlock_debug(). If set, csdlock_debug() invokes static_branch_enable() to enable csd_lock_wait feature, which triggers a panic on arm64 for kernels built with CONFIG_SPARSEMEM=y and CONFIG_SPARSEMEM_VMEMMAP=n. With CONFIG_SPARSEMEM_VMEMMAP=n, __nr_to_section is called in static_key_enable() and returns NULL, resulting in a NULL dereference because mem_section is initialized only later in sparse_init(). This is also a problem for powerpc because early_param() functions are invoked earlier than jump_label_init(), also resulting in static_key_enable() failures. These failures cause the warning static key xxx used before call to jump_label_init(). Thus, early_param is too early for csd_lock_wait to run static_branch_enable(), so changes it to __setup to fix these.",
    "keyphrases": {
        "component": "locking/csd_lock",
        "rootcause": "",
        "vector": "",
        "weakness": "NULL dereference",
        "product": "Linux kernel",
        "impact": "panic, static_key_enable() failures",
        "attacker": "",
        "version": ""
    }
}
