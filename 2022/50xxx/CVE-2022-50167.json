{
    "cveId": "CVE-2022-50167",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved bpf fix potential 32-bit overflow when accessing ARRAY map element If BPF array map is bigger than 4GB, element pointer calculation can overflow because both index and elem_size are u32. Fix this everywhere by forcing 64-bit multiplication. Extract this formula into separate small helper and use it consistently in various places. Speculative-preventing formula utilizing index_mask trick is left as is, but explicit u64 casts are added in both places.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "bpf fix potential 32-bit overflow",
        "impact": "overflow",
        "vector": "element pointer calculation",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
