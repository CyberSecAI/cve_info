{
  "cveId": "CVE-2022-31018",
  "version": "1.0.0",
  "timestamp": "2024-12-15T20:24:27.876763+00:00",
  "description": "Play Framework is a web framework for Java and Scala. A denial of service vulnerability has been discovered in verions 2.8.3 through 2.8.15 of Plays forms library, in both the Scala and Java APIs. This can occur when using either the `Form#bindFromRequest` method on a JSON request body or the `Form#bind` method directly on a JSON value. If the JSON data being bound to the form contains a deeply-nested JSON object or array, the form binding implementation may consume all available heap space and cause an `OutOfMemoryError`. If executing on the default dispatcher and `akka.jvm-exit-on-fatal-error` is enabledas it is by defaultthen this can crash the application process. `Form.bindFromRequest` is vulnerable when using any body parser that produces a type of `AnyContent` or `JsValue` in Scala, or one that can produce a `JsonNode` in Java. This includes Plays default body parser. This vulnerability been patched in version 2.8.16. There is now a global limit on the depth of a JSON object that can be parsed, which can be configured by the user if necessary. As a workaround, applications that do not need to parse a request body of type `application/json` can switch from the default body parser to another body parser that supports only the specific type of body they expect.",
  "keyphrases": {
    "rootcause": "",
    "weakness": "",
    "impact": [
      "Out of Memory Error",
      "crash the application",
      "denial of service"
    ],
    "vector": "deeply nested JSON object or array",
    "attacker": "",
    "product": "Play Framework",
    "version": "2.8.3 through 2.8.15",
    "component": "forms library"
  },
  "mitreTechnicalImpacts": []
}