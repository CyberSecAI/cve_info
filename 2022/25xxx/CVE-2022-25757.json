{
  "cveId": "CVE-2022-25757",
  "version": "1.0.0",
  "timestamp": "2024-11-03T18:37:50.907685+00:00",
  "description": "In Apache APISIX before 2.13.0, when decoding JSON with duplicate keys, lua-cjson will choose the last occurred value as the result. By passing a JSON with a duplicate key, the attacker can bypass the body_schema validation in the request-validation plugin. For example, `{string_payloadbad,string_payloadgood}` can be used to hide the bad input. Systems satisfy three conditions below are affected by this attack 1. use body_schema validation in the request-validation plugin 2. upstream application uses a special JSON library that chooses the first occurred value, like jsoniter or gojay 3. upstream application does not validate the input anymore. The fix in APISIX is to re-encode the validated JSON input back into the request body at the side of APISIX. Improper Input Validation vulnerability in __COMPONENT__ of Apache APISIX allows an attacker to __IMPACT__. This issue affects Apache APISIX Apache APISIX version 2.12.1 and prior versions.",
  "keyphrases": {
    "rootcause": [
      "Input Validation vulnerability",
      "improper input validation"
    ],
    "weakness": "JSON with duplicate keys",
    "impact": "bypass body_schema validation",
    "vector": "",
    "attacker": "attacker",
    "product": "Apache APISIX",
    "version": "before 2.13.0",
    "component": "request-validation plugin"
  },
  "mitreTechnicalImpacts": [
    "Bypass protection mechanism"
  ]
}