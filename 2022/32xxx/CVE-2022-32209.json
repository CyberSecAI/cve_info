{
    "cveId": "CVE-2022-32209",
    "version": "1.0.0",
    "timestamp": "2024-12-17T08:36:27.567979+00:00",
    "description": "# Possible XSS Vulnerability in RailsHtmlSanitizerThere is a possible XSS vulnerability with certain configurations of RailsHtmlSanitizer.This vulnerability has been assigned the CVE identifier CVE-2022-32209.Versions Affected ALLNot affected NONEFixed Versions v1.4.3## ImpactA possible XSS vulnerability with certain configurations of RailsHtmlSanitizer may allow an attacker to inject content if the application developer has overridden the sanitizers allowed tags to allow both `select` and `style` elements.Code is only impacted if allowed tags are being overridden. This may be done via application configuration```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [select, style]```see https//guides.rubyonrails.org/configuring.html#configuring-action-viewOr it may be done with a `tags` option to the Action View helper `sanitize```````see https//api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitizeOr it may be done with RailsHtmlSafeListSanitizer directly```ruby# class-level optionRailsHtmlSafeListSanitizer.allowed_tags = [select, style]```or```ruby# instance-level optionRailsHtmlSafeListSanitizer.new.sanitize(@article.body, tags [select, style])```All users overriding the allowed tags by any of the above mechanisms to include both select and style should either upgrade or use one of the workarounds immediately.## ReleasesThe FIXED releases are available at the normal locations.## WorkaroundsRemove either `select` or `style` from the overridden allowed tags.## CreditsThis vulnerability was responsibly reported by [windshock](https//hackerone.com/windshock?type=user).",
    "keyphrases": {
        "rootcause": "improper input sanitization",
        "weakness": "cross-site scripting",
        "impact": "inject content",
        "vector": "",
        "attacker": "attacker",
        "product": "RailsHtmlSanitizer",
        "version": "",
        "component": ""
    }
}
