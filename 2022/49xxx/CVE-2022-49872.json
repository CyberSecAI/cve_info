{
    "cveId": "CVE-2022-49872",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net gso fix panic on frag_list with mixed head alloc types Since commit 3dcbdb134f32 (net gso Fix skb_segment splat when splitting gso_size mangled skb having linear-headed frag_list), it is allowed to change gso_size of a GRO packet. However, that commit assumes that checking the first list_skb member suffices i.e if either of the list_skb members have non head_frag head, then the first one has too. It turns out this assumption does not hold. Weve seen BUG_ON being hit in skb_segment when skbs on the frag_list had differing head_frag with the vmxnet3 driver. This happens because __netdev_alloc_skb and __napi_alloc_skb can return a skb that is page backed or kmalloced depending on the requested size. As the result, the last small skb in the GRO packet can be kmalloced. There are three different locations where this can be fixed (1) We could check head_frag in GRO and not allow GROing skbs with different head_frag. However, that would lead to performance regression on normal forward paths with unmodified gso_size, where !head_frag in the last packet is not a problem. (2) Set a flag in bpf_skb_net_grow and bpf_skb_net_shrink indicating that NETIF_F_SG is undesirable. That would need to eat a bit in sk_buff. Furthermore, that flag can be unset when all skbs on the frag_list are page backed. To retain good performance, bpf_skb_net_grow/shrink would have to walk the frag_list. (3) Walk the frag_list in skb_segment when determining whether NETIF_F_SG should be cleared. This of course slows things down. This patch implements (3). To limit the performance impact in skb_segment, the list is walked only for skbs with SKB_GSO_DODGY set that have gso_size changed. Normal paths thus will not hit it. We could check only the last skb but since we need to walk the whole list anyway, lets stay on the safe side.",
    "keyphrases": {
        "rootcause": "assumption that checking the first list_skb member suffices",
        "weakness": "",
        "impact": "panic on frag_list with mixed head alloc types",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net gso"
    }
}
