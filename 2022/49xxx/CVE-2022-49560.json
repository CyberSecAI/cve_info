{
    "cveId": "CVE-2022-49560",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved exfat check if cluster num is valid Syzbot reported slab-out-of-bounds read in exfat_clear_bitmap. This was triggered by reproducer calling truncute with size 0, which causes the following trace BUG KASAN slab-out-of-bounds in exfat_clear_bitmap+0x147/0x490 fs/exfat/balloc.c174 Read of size 8 at addr ffff888115aa9508 by task syz-executor251/365 Call Trace __dump_stack lib/dump_stack.c77 [inline] dump_stack_lvl+0x1e2/0x24b lib/dump_stack.c118 print_address_description+0x81/0x3c0 mm/kasan/report.c233 __kasan_report mm/kasan/report.c419 [inline] kasan_report+0x1a4/0x1f0 mm/kasan/report.c436 __asan_report_load8_noabort+0x14/0x20 mm/kasan/report_generic.c309 exfat_clear_bitmap+0x147/0x490 fs/exfat/balloc.c174 exfat_free_cluster+0x25a/0x4a0 fs/exfat/fatent.c181 __exfat_truncate+0x99e/0xe00 fs/exfat/file.c217 exfat_truncate+0x11b/0x4f0 fs/exfat/file.c243 exfat_setattr+0xa03/0xd40 fs/exfat/file.c339 notify_change+0xb76/0xe10 fs/attr.c336 do_truncate+0x1ea/0x2d0 fs/open.c65 Move the is_valid_cluster() helper from fatent.c to a common header to make it reusable in other *.c files. And add is_valid_cluster() to validate if cluster number is within valid range in exfat_clear_bitmap() and exfat_set_bitmap().",
    "keyphrases": {
        "rootcause": "",
        "weakness": "slab-out-of-bounds read",
        "impact": "",
        "vector": "reproducer calling truncute with size 0",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "exfat_clear_bitmap"
    }
}
