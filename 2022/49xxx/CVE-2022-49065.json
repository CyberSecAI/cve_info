{
    "cveId": "CVE-2022-49065",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved SUNRPC Fix the svc_deferred_event trace class Fix a NULL deref crash that occurs when an svc_rqst is deferred while the sunrpc tracing subsystem is enabled. svc_revisit() sets dr->xprt to NULL, so it cant be relied upon in the tracepoint to provide the remotes address. Unfortunately we cant revert the svc_deferred_class hunk in commit ece200ddd54b (sunrpc Save remote presentation address in svc_xprt for trace events) because there is now a specific check of event format specifiers for unsafe dereferences. The warning that check emits is event svc_defer_recv has unsafe dereference of argument 1 A %pISpc format specifier with a struct sockaddr * is indeed flagged by this check. Instead, take the brute-force approach used by the svcrdma_qp_error tracepoint. Convert the draddr field into a presentation address in the TP_fast_assign() arm of the trace event, and store that as a string. This fix can be backported to -stable kernels. In the meantime, commit c6ced22997ad (tracing Update print fmt check to handle new __get_sockaddr() macro) is now in v5.18, so this wonky fix can be replaced with __sockaddr() and friends properly during the v5.19 merge window.",
    "keyphrases": {
        "rootcause": "NULL dereference",
        "weakness": "",
        "impact": "crash",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "SUNRPC"
    }
}
