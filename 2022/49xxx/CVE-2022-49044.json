{
  "cveId": "CVE-2022-49044",
  "version": "1.0.0",
  "timestamp": "2025-07-04T16:12:41.853043+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved dm integrity fix memory corruption when tag_size is less than digest size It is possible to set up dm-integrity in such a way that the tag_size parameter is less than the actual digest size. In this situation, a part of the digest beyond tag_size is ignored. In this case, dm-integrity would write beyond the end of the ic->recalc_tags array and corrupt memory. The corruption happened in integrity_recalc->integrity_sector_checksum->crypto_shash_final. Fix this corruption by increasing the tags array so that it has enough padding at the end to accomodate the loop in integrity_recalc() being able to write a full digest size for the last member of the tags array.",
  "keyphrases": {
    "rootcause": "",
    "weakness": "memory corruption",
    "impact": [
      "corrupt memory",
      "integrity"
    ],
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": ""
  },
  "mitreTechnicalImpacts": []
}