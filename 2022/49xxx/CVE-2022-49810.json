{
    "cveId": "CVE-2022-49810",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netfs Fix missing xas_retry() calls in xarray iteration netfslib has a number of places in which it performs iteration of an xarray whilst being under the RCU read lock. It *should* call xas_retry() as the first thing inside of the loop and do continue if it returns true in case the xarray walker passed out a special value indicating that the walk needs to be redone from the root[*]. Fix this by adding the missing retry checks. [*] I wonder if this should be done inside xas_find(), xas_next_node() and suchlike, but Im told thats not an simple change to effect. This can cause an oops like that below. Note the faulting address - this is an internal value (|0x2) returned from xarray.",
    "keyphrases": {
        "rootcause": "missing xas_retry() calls",
        "weakness": "",
        "impact": "oops",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "netfs"
    }
}
