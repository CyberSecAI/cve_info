{
    "cveId": "CVE-2022-49443",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved list fix a data-race around ep->rdllist ep_poll() first calls ep_events_available() with no lock held and checks if ep->rdllist is empty by list_empty_careful(), which reads rdllist->prev. Thus all accesses to it need some protection to avoid store/load-tearing. Note INIT_LIST_HEAD_RCU() already has the annotation for both prev and next. Commit bf3b9f6372c4 (epoll Add busy poll support to epoll with socket fds.) added the first lockless ep_events_available(), and commit c5a282e9635e (fs/epoll reduce the scope of wq lock in epoll_wait()) made some ep_events_available() calls lockless and added single call under a lock, finally commit e59d3c64cba6 (epoll eliminate unnecessary lock for zero timeout) made the last ep_events_available() lockless. BUG KCSAN data-race in do_epoll_wait / do_epoll_wait write to 0xffff88810480c7d8 of 8 bytes by task 1802 on cpu 0 INIT_LIST_HEAD include/linux/list.h38 [inline] list_splice_init include/linux/list.h492 [inline] ep_start_scan fs/eventpoll.c622 [inline] ep_send_events fs/eventpoll.c1656 [inline] ep_poll fs/eventpoll.c1806 [inline] do_epoll_wait+0x4eb/0xf40 fs/eventpoll.c2234 do_epoll_pwait fs/eventpoll.c2268 [inline] __do_sys_epoll_pwait fs/eventpoll.c2281 [inline] __se_sys_epoll_pwait+0x12b/0x240 fs/eventpoll.c2275 __x64_sys_epoll_pwait+0x74/0x80 fs/eventpoll.c2275 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x44/0xd0 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x44/0xae read to 0xffff88810480c7d8 of 8 bytes by task 1799 on cpu 1 list_empty_careful include/linux/list.h329 [inline] ep_events_available fs/eventpoll.c381 [inline] ep_poll fs/eventpoll.c1797 [inline] do_epoll_wait+0x279/0xf40 fs/eventpoll.c2234 do_epoll_pwait fs/eventpoll.c2268 [inline] __do_sys_epoll_pwait fs/eventpoll.c2281 [inline] __se_sys_epoll_pwait+0x12b/0x240 fs/eventpoll.c2275 __x64_sys_epoll_pwait+0x74/0x80 fs/eventpoll.c2275 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x44/0xd0 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x44/0xae value changed 0xffff88810480c7d0 -> 0xffff888103c15098 Reported by Kernel Concurrency Sanitizer on CPU 1 PID 1799 Comm syz-fuzzer Tainted G W 5.17.0-rc7-syzkaller-dirty #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011",
    "keyphrases": {
        "rootcause": "data-race",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "5.17.0-rc7-syzkaller-dirty",
        "component": "do_epoll_wait / do_epoll_wait"
    }
}
