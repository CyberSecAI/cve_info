{
    "cveId": "CVE-2022-49219",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved vfio/pci fix memory leak during D3hot to D0 transition If vfio_pci_core_deviceneeds_pm_restore is set (PCI device does not have No_Soft_Reset bit set in its PMCSR config register), then the current PCI state will be saved locally in vfio_pci_core_devicepm_save during D0->D3hot transition and same will be restored back during D3hot->D0 transition. For saving the PCI state locally, pci_store_saved_state() is being used and the pci_load_and_free_saved_state() will free the allocated memory. But for reset related IOCTLs, vfio driver calls PCI reset-related APIs which will internally change the PCI power state back to D0. So, when the guest resumes, then it will get the current state as D0 and it will skip the call to vfio_pci_set_power_state() for changing the power state to D0 explicitly. In this case, the memory pointed by pm_save will never be freed. In a malicious sequence, the state changing to D3hot followed by VFIO_DEVICE_RESET/VFIO_DEVICE_PCI_HOT_RESET can be run in a loop and it can cause an OOM situation. This patch frees the earlier allocated memory first before overwriting pm_save to prevent the mentioned memory leak.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "memory leak",
        "impact": "OOM situation",
        "vector": "D3hot followed by VFIO_DEVICE_RESET/VFIO_DEVICE_PCI_HOT_RESET can be run in a loop",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "vfio/pci"
    }
}
