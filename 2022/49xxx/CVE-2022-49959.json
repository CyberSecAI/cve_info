{
    "cveId": "CVE-2022-49959",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved openvswitch fix memory leak at failed datapath creation ovs_dp_cmd_new()->ovs_dp_change()->ovs_dp_set_upcall_portids() allocates array via kmalloc. If for some reason new_vport() fails during ovs_dp_cmd_new() dp->upcall_portids must be freed. Add missing kfree. Kmemleak example unreferenced object 0xffff88800c382500 (size 64) comm dump_state, pid 323, jiffies 4294955418 (age 104.347s) hex dump (first 32 bytes) 5e c2 79 e4 1f 7a 38 c7 09 21 38 0c 80 88 ff ff ^.y..z8..!8..... 03 00 00 00 0a 00 00 00 14 00 00 00 28 00 00 00 ............(... backtrace [] ovs_dp_set_upcall_portids+0x38/0xa0 [] ovs_dp_change+0x63/0xe0 [] ovs_dp_cmd_new+0x1f0/0x380 [] genl_family_rcv_msg_doit+0xea/0x150 [] genl_rcv_msg+0xdc/0x1e0 [] netlink_rcv_skb+0x50/0x100 [] genl_rcv+0x24/0x40 [] netlink_unicast+0x23e/0x360 [] netlink_sendmsg+0x24e/0x4b0 [] sock_sendmsg+0x62/0x70 [] ____sys_sendmsg+0x230/0x270 [] ___sys_sendmsg+0x88/0xd0 [] __sys_sendmsg+0x59/0xa0 [] do_syscall_64+0x3b/0x90 [] entry_SYSCALL_64_after_hwframe+0x63/0xcd",
    "keyphrases": {
        "rootcause": "",
        "weakness": "memory leak",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "openvswitch"
    }
}
