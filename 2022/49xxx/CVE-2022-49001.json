{
    "cveId": "CVE-2022-49001",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved riscv fix race when vmap stack overflow Currently, when detecting vmap stack overflow, riscv firstly switches to the so called shadow stack, then use this shadow stack to call the get_overflow_stack() to get the overflow stack. However, theres a race here if two or more harts use the same shadow stack at the same time. To solve this race, we introduce spin_shadow_stack atomic var, which will be swap between its own address and 0 in atomic way, when the var is set, it means the shadow_stack is being used when the var is cleared, it means the shadow_stack isnt being used. [Palmer Add AQ to the swap, and also some comments.]",
    "keyphrases": {
        "rootcause": "",
        "weakness": "race condition",
        "impact": "",
        "vector": "vmap stack overflow",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "riscv fix"
    }
}
