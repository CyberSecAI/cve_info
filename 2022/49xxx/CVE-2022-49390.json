{
    "cveId": "CVE-2022-49390",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved macsec fix UAF bug for real_dev Create a new macsec device but not get reference to real_dev. That can not ensure that real_dev is freed after macsec. That will trigger the UAF bug for real_dev as following ================================================================== BUG KASAN use-after-free in macsec_get_iflink+0x5f/0x70 drivers/net/macsec.c3662 Call Trace ... macsec_get_iflink+0x5f/0x70 drivers/net/macsec.c3662 dev_get_iflink+0x73/0xe0 net/core/dev.c637 default_operstate net/core/link_watch.c42 [inline] rfc2863_policy+0x233/0x2d0 net/core/link_watch.c54 linkwatch_do_dev+0x2a/0x150 net/core/link_watch.c161 Allocated by task 22209 ... alloc_netdev_mqs+0x98/0x1100 net/core/dev.c10549 rtnl_create_link+0x9d7/0xc00 net/core/rtnetlink.c3235 veth_newlink+0x20e/0xa90 drivers/net/veth.c1748 Freed by task 8 ... kfree+0xd6/0x4d0 mm/slub.c4552 kvfree+0x42/0x50 mm/util.c615 device_release+0x9f/0x240 drivers/base/core.c2229 kobject_cleanup lib/kobject.c673 [inline] kobject_release lib/kobject.c704 [inline] kref_put include/linux/kref.h65 [inline] kobject_put+0x1c8/0x540 lib/kobject.c721 netdev_run_todo+0x72e/0x10b0 net/core/dev.c10327 After commit faab39f63c1f (net allow out-of-order netdev unregistration) and commit e5f80fcf869a (ipv6 give an IPv6 dev to blackhole_netdev), we can add dev_hold_track() in macsec_dev_init() and dev_put_track() in macsec_free_netdev() to fix the problem.",
    "keyphrases": {
        "rootcause": "use-after-free bug",
        "weakness": "UAF",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "macsec"
    }
}
