{
    "cveId": "CVE-2022-49425",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved f2fs fix dereference of stale list iterator after loop body The list iterator variable will be a bogus pointer if no break was hit. Dereferencing it (cur->page in this case) could load an out-of-bounds/undefined value making it unsafe to use that in the comparision to determine if the specific element was found. Since cur->page *can* be out-ouf-bounds it cannot be guaranteed that by chance (or intention of an attacker) it matches the value of page even though the correct element was not found. This is fixed by using a separate list iterator variable for the loop and only setting the original variable if a suitable element was found. Then determing if the element was found is simply checking if the variable is set.",
    "keyphrases": {
        "rootcause": "dereference of stale list iterator after loop body",
        "weakness": "",
        "impact": "out-of-bounds/undefined value",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "f2fs"
    }
}
