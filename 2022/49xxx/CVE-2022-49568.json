{
    "cveId": "CVE-2022-49568",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved KVM Dont null dereference ops->destroy A KVM device cleanup happens in either of two callbacks 1) destroy() which is called when the VM is being destroyed 2) release() which is called when a device fd is closed. Most KVM devices use 1) but Book3ss interrupt controller KVM devices (XICS, XIVE, XIVE-native) use 2) as they need to close and reopen during the machine execution. The error handling in kvm_ioctl_create_device() assumes destroy() is always defined which leads to NULL dereference as discovered by Syzkaller. This adds a checks for destroy!=NULL and adds a missing release(). This is not changing kvm_destroy_devices() as devices with defined release() should have been removed from the KVM devices list by then.",
    "keyphrases": {
        "component": "",
        "rootcause": "null dereference, undefined destroy callback",
        "vector": "",
        "weakness": "null dereference",
        "product": "Linux kernel",
        "impact": "",
        "attacker": "",
        "version": ""
    }
}
