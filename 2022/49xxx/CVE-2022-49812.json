{
    "cveId": "CVE-2022-49812",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved bridge switchdev Fix memory leaks when changing VLAN protocol The bridge driver can offload VLANs to the underlying hardware either via switchdev or the 8021q driver. When the former is used, the VLAN is marked in the bridge driver with the BR_VLFLAG_ADDED_BY_SWITCHDEV private flag. To avoid the memory leaks mentioned in the cited commit, the bridge driver will try to delete a VLAN via the 8021q driver if the VLAN is not marked with the previously mentioned flag. When the VLAN protocol of the bridge changes, switchdev drivers are notified via the SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL attribute, but the 8021q driver is also called to add the existing VLANs with the new protocol and delete them with the old protocol. In case the VLANs were offloaded via switchdev, the above behavior is both redundant and buggy. Redundant because the VLANs are already programmed in hardware and drivers that support VLAN protocol change (currently only mlx5) change the protocol upon the switchdev attribute notification. Buggy because the 8021q driver is called despite these VLANs being marked with BR_VLFLAG_ADDED_BY_SWITCHDEV. This leads to memory leaks [1] when the VLANs are deleted. Fix by not calling the 8021q driver for VLANs that were already programmed via switchdev. [1] unreferenced object 0xffff8881f6771200 (size 256) comm ip, pid 446855, jiffies 4298238841 (age 55.240s) hex dump (first 32 bytes) 00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace [] vlan_vid_add+0x437/0x750 [] __br_vlan_set_proto+0x289/0x920 [] br_changelink+0x3d6/0x13f0 [] __rtnl_newlink+0x8ae/0x14c0 [] rtnl_newlink+0x5f/0x90 [] rtnetlink_rcv_msg+0x336/0xa00 [] netlink_rcv_skb+0x11d/0x340 [] netlink_unicast+0x438/0x710 [] netlink_sendmsg+0x788/0xc40 [] sock_sendmsg+0xb0/0xe0 [] ____sys_sendmsg+0x4ff/0x6d0 [] ___sys_sendmsg+0x12e/0x1b0 [] __sys_sendmsg+0xab/0x130 [] do_syscall_64+0x3d/0x90 [] entry_SYSCALL_64_after_hwframe+0x46/0xb0",
    "keyphrases": {
        "component": "bridge switchdev",
        "rootcause": "",
        "vector": "deleting VLANs",
        "weakness": "memory leaks, unreferenced object",
        "product": "Linux kernel",
        "impact": "memory leaks",
        "attacker": "",
        "version": ""
    }
}
