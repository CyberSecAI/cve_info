{
    "cveId": "CVE-2022-49507",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved regulator da9121 Fix uninit-value in da9121_assign_chip_model() KASAN report slab-out-of-bounds in __regmap_init as follows BUG KASAN slab-out-of-bounds in __regmap_init drivers/base/regmap/regmap.c841 Read of size 1 at addr ffff88803678cdf1 by task xrun/9137 CPU 0 PID 9137 Comm xrun Tainted G W 5.18.0-rc2 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014 Call Trace dump_stack_lvl+0xe8/0x15a lib/dump_stack.c88 print_report.cold+0xcd/0x69b mm/kasan/report.c313 kasan_report+0x8e/0xc0 mm/kasan/report.c491 __regmap_init+0x4540/0x4ba0 drivers/base/regmap/regmap.c841 __devm_regmap_init+0x7a/0x100 drivers/base/regmap/regmap.c1266 __devm_regmap_init_i2c+0x65/0x80 drivers/base/regmap/regmap-i2c.c394 da9121_i2c_probe+0x386/0x6d1 drivers/regulator/da9121-regulator.c1039 i2c_device_probe+0x959/0xac0 drivers/i2c/i2c-core-base.c563 This happend when da9121 device is probe by da9121_i2c_id, but with invalid dts. Thus, chip->subvariant_id is set to -EINVAL, and later da9121_assign_chip_model() will access regmap without init it. Fix it by return -EINVAL from da9121_assign_chip_model() if chip->subvariant_id is invalid.",
    "keyphrases": {
        "rootcause": "access regmap without init",
        "weakness": "slab-out-of-bounds",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "5.18.0-rc2",
        "component": "regulator da9121"
    }
}
