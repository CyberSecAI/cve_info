{
    "cveId": "CVE-2022-49203",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved drm/amd/display Fix double free during GPU reset on DC streams [Why] The issue only occurs during the GPU reset code path. We first backup the current state prior to commiting 0 streams internally from DM to DC. This state backup contains valid link encoder assignments. DC will clear the link encoder assignments as part of current state (but not the backup, since it was a copied before the commit) and free the extra stream reference it held. DC requires that the link encoder assignments remain cleared/invalid prior to commiting. Since the backup still has valid assignments we call the interface post reset to clear them. This routine also releases the extra reference that the link encoder interface held - resulting in a double free (and eventually a NULL pointer dereference). [How] Well have to do a full DC commit anyway after GPU reset because the stream count previously went to 0. We dont need to retain the assignment that we had backed up, so just copy off of the now clean current state assignment after the reset has occcurred with the new link_enc_cfg_copy() interface.",
    "keyphrases": {
        "component": "drm/amd/display",
        "rootcause": "double free, NULL pointer dereference",
        "vector": "",
        "weakness": "double free",
        "product": "Linux kernel",
        "impact": "",
        "attacker": "",
        "version": ""
    }
}
