{
  "cveId": "CVE-2022-49171",
  "version": "1.0.0",
  "timestamp": "2025-07-04T16:12:41.853043+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved ext4 dont BUG if someone dirty pages without asking ext4 first [un]pin_user_pages_remote is dirtying pages without properly warning the file system in advance. A related race was noted by Jan Kara in 2018[1] however, more recently instead of it being a very hard-to-hit race, it could be reliably triggered by process_vm_writev(2) which was discovered by Syzbot[2]. This is technically a bug in mm/gup.c, but arguably ext4 is fragile in that if some other kernel subsystem dirty pages without properly notifying the file system using page_mkwrite(), ext4 will BUG, while other file systems will not BUG (although data will still be lost). So instead of crashing with a BUG, issue a warning (since there may be potential data loss) and just mark the page as clean to avoid unprivileged denial of service attacks until the problem can be properly fixed. More discussion and background can be found in the thread starting at [2]. [1] https//lore.kernel.org/linux-mm/20180103100430.GE4911@quack2.suse.cz [2] https//lore.kernel.org/r/Yg0m6IjcNmfaSokM@google.com",
  "keyphrases": {
    "rootcause": "dirty pages without properly warning the file system in advance",
    "weakness": "",
    "impact": [
      "denial of service attacks",
      "data loss",
      "BUG"
    ],
    "vector": "process_vm_writev(2)",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "ext4"
  },
  "mitreTechnicalImpacts": []
}