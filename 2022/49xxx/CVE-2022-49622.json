{
    "cveId": "CVE-2022-49622",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netfilter nf_tables avoid skb access on nf_stolen When verdict is NF_STOLEN, the skb might have been freed. When tracing is enabled, this can result in a use-after-free 1. access to skb->nf_trace 2. access to skb->mark 3. computation of trace id 4. dump of packet payload To avoid 1, keep a cached copy of skb->nf_trace in the trace state struct. Refresh this copy whenever verdict is != STOLEN. Avoid 2 by skipping skb->mark access if verdict is STOLEN. 3 is avoided by precomputing the trace id. Only dump the packet when verdict is not STOLEN.",
    "keyphrases": {
        "component": "netfilter nf_tables",
        "rootcause": "",
        "vector": "",
        "weakness": "use-after-free",
        "product": "Linux kernel",
        "impact": "access to skb->nf_trace, access to skb->mark, computation of trace id, dump of packet payload",
        "attacker": "",
        "version": ""
    }
}
