{
    "cveId": "CVE-2022-49257",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved watch_queue Fix NULL dereference in error cleanup In watch_queue_set_size(), the error cleanup code doesnt take account of the fact that __free_page() cant handle a NULL pointer when trying to free up buffer pages that did get allocated. Fix this by only calling __free_page() on the pages actually allocated. Without the fix, this can lead to something like the following BUG KASAN null-ptr-deref in __free_pages+0x1f/0x1b0 mm/page_alloc.c5473 Read of size 4 at addr 0000000000000034 by task syz-executor168/3599 ... Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c106 __kasan_report mm/kasan/report.c446 [inline] kasan_report.cold+0x66/0xdf mm/kasan/report.c459 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0x13d/0x180 mm/kasan/generic.c189 instrument_atomic_read include/linux/instrumented.h71 [inline] atomic_read include/linux/atomic/atomic-instrumented.h27 [inline] page_ref_count include/linux/page_ref.h67 [inline] put_page_testzero include/linux/mm.h717 [inline] __free_pages+0x1f/0x1b0 mm/page_alloc.c5473 watch_queue_set_size+0x499/0x630 kernel/watch_queue.c275 pipe_ioctl+0xac/0x2b0 fs/pipe.c632 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c874 [inline] __se_sys_ioctl fs/ioctl.c860 [inline] __x64_sys_ioctl+0x193/0x200 fs/ioctl.c860 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x44/0xae",
    "keyphrases": {
        "rootcause": "NULL dereference",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "watch_queue_set_size()"
    }
}
