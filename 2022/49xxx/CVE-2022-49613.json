{
    "cveId": "CVE-2022-49613",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved serial 8250 Fix PM usage_count for console handover When console is enabled, univ8250_console_setup() calls serial8250_console_setup() before .dev is set to uart_port. Therefore, it will not call pm_runtime_get_sync(). Later, when the actual driver is going to take over univ8250_console_exit() is called. As .dev is already set, serial8250_console_exit() makes pm_runtime_put_sync() call with usage count being zero triggering PM usage count warning (extra debug for univ8250_console_setup(), univ8250_console_exit(), and serial8250_register_ports()) [ 0.068987] univ8250_console_setup ttyS0 nodev [ 0.499670] printk console [ttyS0] enabled [ 0.717955] printk console [ttyS0] printing thread started [ 1.960163] serial8250_register_ports assigned dev for ttyS0 [ 1.976830] printk console [ttyS0] disabled [ 1.976888] printk console [ttyS0] printing thread stopped [ 1.977073] univ8250_console_exit ttyS0 usage0 [ 1.977075] serial8250 serial8250 Runtime PM usage count underflow! [ 1.977429] dw-apb-uart.6 ttyS0 at MMIO 0x4010006000 (irq = 33, base_baud = 115200) is a 16550A [ 1.977812] univ8250_console_setup ttyS0 usage2 [ 1.978167] printk console [ttyS0] printing thread started [ 1.978203] printk console [ttyS0] enabled To fix the issue, call pm_runtime_get_sync() in serial8250_register_ports() as soon as .dev is set for an uart_port if it has console enabled. This problem became apparent only recently because 82586a721595 (PM runtime Avoid device usage count underflows) added the warning printout. I confirmed this problem also occurs with v5.18 (w/o the warning printout, obviously).",
    "keyphrases": {
        "rootcause": "",
        "weakness": "PM usage count underflow",
        "impact": "Runtime PM usage count underflow",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
