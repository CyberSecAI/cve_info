{
    "cveId": "CVE-2022-49433",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved RDMA/hfi1 Prevent use of lock before it is initialized If there is a failure during probe of hfi1 before the sdma_map_lock is initialized, the call to hfi1_free_devdata() will attempt to use a lock that has not been initialized. If the locking correctness validator is on then an INFO message and stack trace resembling the following may be seen INFO trying to register non-static key. The code is fine but needs lockdep annotation, or maybe you didnt initialize this object before use? turning off the locking correctness validator. Call Trace register_lock_class+0x11b/0x880 __lock_acquire+0xf3/0x7930 lock_acquire+0xff/0x2d0 _raw_spin_lock_irq+0x46/0x60 sdma_clean+0x42a/0x660 [hfi1] hfi1_free_devdata+0x3a7/0x420 [hfi1] init_one+0x867/0x11a0 [hfi1] pci_device_probe+0x40e/0x8d0 The use of sdma_map_lock in sdma_clean() is for freeing the sdma_map memory, and sdma_map is not allocated/initialized until after sdma_map_lock has been initialized. This code only needs to be run if sdma_map is not NULL, and so checking for that condition will avoid trying to use the lock before it is initialized.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "use of lock before it is initialized",
        "impact": "INFO message and stack trace",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "RDMA/hfi1"
    }
}
