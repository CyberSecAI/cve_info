{
    "cveId": "CVE-2022-49153",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved wireguard socket free skb in send6 when ipv6 is disabled I got a memory leak report unreferenced object 0xffff8881191fc040 (size 232) comm kworker/u170, pid 23193, jiffies 4295238848 (age 3464.870s) hex dump (first 32 bytes) 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace [] slab_post_alloc_hook+0x84/0x3b0 [] kmem_cache_alloc_node+0x167/0x340 [] __alloc_skb+0x1db/0x200 [] wg_socket_send_buffer_to_peer+0x3d/0xc0 [] wg_packet_send_handshake_initiation+0xfa/0x110 [] wg_packet_handshake_send_worker+0x21/0x30 [] process_one_work+0x2e8/0x770 [] worker_thread+0x4a/0x4b0 [] kthread+0x120/0x160 [] ret_from_fork+0x1f/0x30 In function wg_socket_send_buffer_as_reply_to_skb() or wg_socket_send_ buffer_to_peer(), the semantics of send6() is required to free skb. But when CONFIG_IPV6 is disable, kfree_skb() is missing. This patch adds it to fix this bug.",
    "keyphrases": {
        "rootcause": "kfree_skb() missing",
        "weakness": "",
        "impact": "memory leak",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "wg_socket_send6"
    }
}
