{
    "cveId": "CVE-2022-49049",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved mm/secretmem fix panic when growing a memfd_secret When one tries to grow an existing memfd_secret with ftruncate, one gets a panic [1]. For example, doing the following reliably induces the panic fd = memfd_secret() ftruncate(fd, 10) ptr = mmap(NULL, 10, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0) strcpy(ptr, 123456789) munmap(ptr, 10) ftruncate(fd, 20) The basic reason for this is, when we grow with ftruncate, we call down into simple_setattr, and then truncate_inode_pages_range, and eventually we try to zero part of the memory. The normal truncation code does this via the direct map (i.e., it calls page_address() and hands that to memset()). For memfd_secret though, we specifically dont map our pages via the direct map (i.e. we call set_direct_map_invalid_noflush() on every fault). So the address returned by page_address() isnt useful, and when we try to memset() with it we panic. This patch avoids the panic by implementing a custom setattr for memfd_secret, which detects resizes specifically (setting the size for the first time works just fine, since there are no existing pages to try to zero), and rejects them with EINVAL. One could argue growing should be supported, but I think that will require a significantly more lengthy change. So, I propose a minimal fix for the benefit of stable kernels, and then perhaps to extend memfd_secret to support growing in a separate patch. [1] BUG unable to handle page fault for address ffffa0a889277028 #PF supervisor write access in kernel mode #PF error_code(0x0002) - not-present page PGD afa01067 P4D afa01067 PUD 83f909067 PMD 83f8bf067 PTE 800ffffef6d88060 Oops 0002",
    "keyphrases": {
        "rootcause": "memfd_secret not mapping pages via direct map",
        "weakness": "",
        "impact": "panic",
        "vector": "grow existing memfd_secret with ftruncate",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
