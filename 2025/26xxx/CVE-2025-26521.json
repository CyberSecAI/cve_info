{
    "cveId": "CVE-2025-26521",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "When an Apache CloudStack user-account creates a CKS-based Kubernetes cluster in a project, the API key and the secret key of the kubeadmin user of the caller account are used to create the secret config in the CKS-based Kubernetes cluster. A member of the project who can access the CKS-based Kubernetes cluster, can also access the API key and secret key of the kubeadmin user of the CKS clusters creators account. An attacker whos a member of the project can exploit this to impersonate and perform privileged actions that can result in complete compromise of the confidentiality, integrity, and availability of resources owned by the creators account. CKS users are recommended to upgrade to version 4.19.3.0 or 4.20.1.0, which fixes this issue.Updating Existing Kubernetes Clusters in ProjectsA service account should be created for each project to provide limited access specifically for Kubernetes cluster providers and autoscaling. Follow the steps below to create a new service account, update the secret inside the cluster, and regenerate existing API and service keys1. Create a New Service AccountCreate a new account using the role Project Kubernetes Service Role with the following details Account Name kubeadmin- First Name Kubernetes Last Name Service User Account Type 0 (Normal User) Role ID 2. Add the Service Account to the ProjectAdd this account to the project where the Kubernetes cluster(s) are hosted. 3. Generate API and Secret KeysGenerate API Key and Secret Key for the default user of this account. 4. Update the CloudStack Secret in the Kubernetes ClusterCreate a temporary file `/tmp/cloud-config` with the following data api-url = # For example /client/api api-key = secret-key = project-id = Delete the existing secret using kubectl and Kubernetes cluster config ./kubectl --kubeconfig kube.conf -n kube-system delete secret cloudstack-secret Create a new secret using kubectl and Kubernetes cluster config ./kubectl --kubeconfig kube.conf -n kube-system create secret generic cloudstack-secret --from-file=/tmp/cloud-config Remove the temporary file rm /tmp/cloud-config5. Regenerate API and Secret KeysRegenerate the API and secret keys for the original user account that was used to create the Kubernetes cluster.",
    "keyphrases": {
        "rootcause": "API key and secret key of kubeadmin user are used to create the secret config",
        "weakness": "",
        "impact": "impersonate and perform privileged actions",
        "vector": "accessing the CKS-based Kubernetes cluster",
        "attacker": "",
        "product": "Apache CloudStack",
        "version": "",
        "component": ""
    }
}
