{
    "cveId": "CVE-2025-21916",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved usb atm cxacru fix a flaw in existing endpoint checks Syzbot once again identified a flaw in usb endpoint checking, see [1]. This time the issue stems from a commit authored by me (2eabb655a968 (usb atm cxacru fix endpoint checking in cxacru_bind())). While using usb_find_common_endpoints() may usually be enough to discard devices with wrong endpoints, in this case one needs more than just finding and identifying the sufficient number of endpoints of correct types - one needs to check the endpoints address as well. Since cxacru_bind() fills URBs with CXACRU_EP_CMD address in mind, switch the endpoint verification approach to usb_check_XXX_endpoints() instead to fix incomplete ep testing. [1] Syzbot report usb 5-1 BOGUS urb xfer, pipe 3 != type 1 WARNING CPU 0 PID 1378 at drivers/usb/core/urb.c504 usb_submit_urb+0xc4e/0x18c0 drivers/usb/core/urb.c503 ... RIP 0010usb_submit_urb+0xc4e/0x18c0 drivers/usb/core/urb.c503 ... Call Trace cxacru_cm+0x3c8/0xe50 drivers/usb/atm/cxacru.c649 cxacru_card_status drivers/usb/atm/cxacru.c760 [inline] cxacru_bind+0xcf9/0x1150 drivers/usb/atm/cxacru.c1223 usbatm_usb_probe+0x314/0x1d30 drivers/usb/atm/usbatm.c1058 cxacru_usb_probe+0x184/0x220 drivers/usb/atm/cxacru.c1377 usb_probe_interface+0x641/0xbb0 drivers/usb/core/driver.c396 really_probe+0x2b9/0xad0 drivers/base/dd.c658 __driver_probe_device+0x1a2/0x390 drivers/base/dd.c800 driver_probe_device+0x50/0x430 drivers/base/dd.c830 ...",
    "keyphrases": {
        "rootcause": "incomplete endpoint testing",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "usb atm cxacru"
    }
}
