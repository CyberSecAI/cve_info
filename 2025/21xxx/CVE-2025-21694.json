{
    "cveId": "CVE-2025-21694",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved fs/proc fix softlockup in __read_vmcore (part 2) Since commit 5cbcb62dddf5 (fs/proc fix softlockup in __read_vmcore) the number of softlockups in __read_vmcore at kdump time have gone down, but they still happen sometimes. In a memory constrained environment like the kdump image, a softlockup is not just a harmless message, but it can interfere with things like RCU freeing memory, causing the crashdump to get stuck. The second loop in __read_vmcore has a lot more opportunities for natural sleep points, like scheduling out while waiting for a data write to happen, but apparently that is not always enough. Add a cond_resched() to the second loop in __read_vmcore to (hopefully) get rid of the softlockups.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "softlockup",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "fs/proc fix softlockup in __read_vmcore"
    }
}
