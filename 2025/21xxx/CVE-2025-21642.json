{
  "cveId": "CVE-2025-21642",
  "version": "1.0.0",
  "timestamp": "2025-07-04T16:12:41.853043+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved mptcp sysctl sched avoid using current->nsproxy Using the net structure via current is not recommended for different reasons. First, if the goal is to use it to read or write per-netns data, this is inconsistent with how the generic sysctl entries are doing directly by only using pointers set to the table entry, e.g. table->data. Linked to that, the per-netns data should always be obtained from the table linked to the netns it had been created for, which may not coincide with the readers or writers netns. Another reason is that access to current->nsproxy->netns can oops if attempted when current->nsproxy had been dropped when the current task is exiting. This is what syzbot found, when using acct(2) Oops general protection fault, probably for non-canonical address 0xdffffc0000000005 0000",
  "keyphrases": {
    "rootcause": "",
    "weakness": "",
    "impact": [
      "general protection fault",
      "oops"
    ],
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "mptcp sysctl sched"
  },
  "mitreTechnicalImpacts": []
}