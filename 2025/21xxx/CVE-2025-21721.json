{
    "cveId": "CVE-2025-21721",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved nilfs2 handle errors that nilfs_prepare_chunk() may return Patch series nilfs2 fix issues with rename operations. This series fixes BUG_ON check failures reported by syzbot around rename operations, and a minor behavioral issue where the mtime of a child directory changes when it is renamed instead of moved. This patch (of 2) The directory manipulation routines nilfs_set_link() and nilfs_delete_entry() rewrite the directory entry in the folio/page previously read by nilfs_find_entry(), so error handling is omitted on the assumption that nilfs_prepare_chunk(), which prepares the buffer for rewriting, will always succeed for these. And if an error is returned, it triggers the legacy BUG_ON() checks in each routine. This assumption is wrong, as proven by syzbot the buffer layer called by nilfs_prepare_chunk() may call nilfs_get_block() if necessary, which may fail due to metadata corruption or other reasons. This has been there all along, but improved sanity checks and error handling may have made it more reproducible in fuzzing tests. Fix this issue by adding missing error paths in nilfs_set_link(), nilfs_delete_entry(), and their caller nilfs_rename().",
    "keyphrases": {
        "component": "nilfs2",
        "rootcause": "BUG_ON check failures",
        "vector": "",
        "weakness": "omitted error handling",
        "product": "Linux kernel",
        "impact": "BUG_ON, renaming, rename operations",
        "attacker": "",
        "version": ""
    }
}
