{
    "cveId": "CVE-2025-21893",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved keys Fix UAF in key_put() Once a keys reference count has been reduced to 0, the garbage collector thread may destroy it at any time and so key_put() is not allowed to touch the key after that point. The most key_put() is normally allowed to do is to touch key_gc_work as thats a static global variable. However, in an effort to speed up the reclamation of quota, this is now done in key_put() once the keys usage is reduced to 0 - but now the code is looking at the key after the deadline, which is forbidden. Fix this by using a flag to indicate that a key can be gcd now rather than looking at the keys refcount in the garbage collector.",
    "keyphrases": {
        "rootcause": "use after free",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "key_put()"
    }
}
