{
    "cveId": "CVE-2025-21652",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved ipvlan Fix use-after-free in ipvlan_get_iflink(). syzbot presented an use-after-free report [0] regarding ipvlan and linkwatch. ipvlan does not hold a refcnt of the lower device unlike vlan and macvlan. If the linkwatch work is triggered for the ipvlan dev, the lower dev might have already been freed, resulting in UAF of ipvlan->phy_dev in ipvlan_get_iflink(). We can delay the lower dev unregistration like vlan and macvlan by holding the lower devs refcnt in dev->netdev_ops->ndo_init() and releasing it in dev->priv_destructor(). Jakub pointed out calling .ndo_XXX after unregister_netdevice() has returned is error prone and suggested [1] addressing this UAF in the core by taking commit 750e51603395 (net avoid potential UAF in default_operstate()) further. Lets assume unregistering devices DOWN and use RCU protection in default_operstate() not to race with the device unregistration. [0] BUG KASAN slab-use-after-free in ipvlan_get_iflink+0x84/0x88 drivers/net/ipvlan/ipvlan_main.c353 Read of size 4 at addr ffff0000d768c0e0 by task kworker/u835/6944 CPU 0 UID 0 PID 6944 Comm kworker/u835 Not tainted 6.13.0-rc2-g9bc5c9515b48 #12 4c3cb9e8b4565456f6a355f312ff91f4f29b3c47 Hardware name linux,dummy-virt (DT) Workqueue events_unbound linkwatch_event Call trace show_stack+0x38/0x50 arch/arm64/kernel/stacktrace.c484 (C) __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0xbc/0x108 lib/dump_stack.c120 print_address_description mm/kasan/report.c378 [inline] print_report+0x16c/0x6f0 mm/kasan/report.c489 kasan_report+0xc0/0x120 mm/kasan/report.c602 __asan_report_load4_noabort+0x20/0x30 mm/kasan/report_generic.c380 ipvlan_get_iflink+0x84/0x88 drivers/net/ipvlan/ipvlan_main.c353 dev_get_iflink+0x7c/0xd8 net/core/dev.c674 default_operstate net/core/link_watch.c45 [inline] rfc2863_policy+0x144/0x360 net/core/link_watch.c72 linkwatch_do_dev+0x60/0x228 net/core/link_watch.c175 __linkwatch_run_queue+0x2f4/0x5b8 net/core/link_watch.c239 linkwatch_event+0x64/0xa8 net/core/link_watch.c282 process_one_work+0x700/0x1398 kernel/workqueue.c3229 process_scheduled_works kernel/workqueue.c3310 [inline] worker_thread+0x8c4/0xe10 kernel/workqueue.c3391 kthread+0x2b0/0x360 kernel/kthread.c389 ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S862 Allocated by task 9303 kasan_save_stack mm/kasan/common.c47 [inline] kasan_save_track+0x30/0x68 mm/kasan/common.c68 kasan_save_alloc_info+0x44/0x58 mm/kasan/generic.c568 poison_kmalloc_redzone mm/kasan/common.c377 [inline] __kasan_kmalloc+0x84/0xa0 mm/kasan/common.c394 kasan_kmalloc include/linux/kasan.h260 [inline] __do_kmalloc_node mm/slub.c4283 [inline] __kmalloc_node_noprof+0x2a0/0x560 mm/slub.c4289 __kvmalloc_node_noprof+0x9c/0x230 mm/util.c650 alloc_netdev_mqs+0xb4/0x1118 net/core/dev.c11209 rtnl_create_link+0x2b8/0xb60 net/core/rtnetlink.c3595 rtnl_newlink_create+0x19c/0x868 net/core/rtnetlink.c3771 __rtnl_newlink net/core/rtnetlink.c3896 [inline] rtnl_newlink+0x122c/0x15c0 net/core/rtnetlink.c4011 rtnetlink_rcv_msg+0x61c/0x918 net/core/rtnetlink.c6901 netlink_rcv_skb+0x1dc/0x398 net/netlink/af_netlink.c2542 rtnetlink_rcv+0x34/0x50 net/core/rtnetlink.c6928 netlink_unicast_kernel net/netlink/af_netlink.c1321 [inline] netlink_unicast+0x618/0x838 net/netlink/af_netlink.c1347 netlink_sendmsg+0x5fc/0x8b0 net/netlink/af_netlink.c1891 sock_sendmsg_nosec net/socket.c711 [inline] __sock_sendmsg net/socket.c726 [inline] __sys_sendto+0x2ec/0x438 net/socket.c2197 __do_sys_sendto net/socket.c2204 [inline] __se_sys_sendto net/socket.c2200 [inline] __arm64_sys_sendto+0xe4/0x110 net/socket.c2200 __invoke_syscall arch/arm64/kernel/syscall.c35 [inline] invoke_syscall+0x90/0x278 arch/arm64/kernel/syscall.c49 el0_svc_common+0x13c/0x250 arch/arm64/kernel/syscall.c132 do_el0_svc+0x54/0x70 arch/arm64/kernel/syscall.c151 el ---truncated---",
    "keyphrases": {
        "rootcause": "use-after-free",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.13.0-rc2-g9bc5c9515b48",
        "component": "ipvlan_get_iflink"
    }
}
