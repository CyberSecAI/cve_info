{
    "cveId": "CVE-2025-21834",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved seccomp passthrough uretprobe systemcall without filtering When attaching uretprobes to processes running inside docker, the attached process is segfaulted when encountering the retprobe. The reason is that now that uretprobe is a system call the default seccomp filters in docker block it as they only allow a specific set of known syscalls. This is true for other userspace applications which use seccomp to control their syscall surface. Since uretprobe is a kernel implementation detail system call which is not used by userspace application code directly, it is impractical and theres very little point in forcing all userspace applications to explicitly allow it in order to avoid crashing tracked processes. Pass this systemcall through seccomp without depending on configuration. Note uretprobe is currently only x86_64 and isnt expected to ever be supported in i386. [kees minimized changes for easier backporting, tweaked commit log]",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "segfault",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
