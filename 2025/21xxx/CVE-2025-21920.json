{
    "cveId": "CVE-2025-21920",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved vlan enforce underlying device type Currently, VLAN devices can be created on top of non-ethernet devices. Besides the fact that it doesnt make much sense, this also causes a bug which leaks the address of a kernel function to usermode. When creating a VLAN device, we initialize GARP (garp_init_applicant) and MRP (mrp_init_applicant) for the underlying device. As part of the initialization process, we add the multicast address of each applicant to the underlying device, by calling dev_mc_add. __dev_mc_add uses dev->addr_len to determine the length of the new multicast address. This causes an out-of-bounds read if dev->addr_len is greater than 6, since the multicast addresses provided by GARP and MRP are only 6 bytes long. This behaviour can be reproduced using the following commands ip tunnel add gretest mode ip6gre local 1 remote 2 dev lo ip l set up dev gretest ip link add link gretest name vlantest type vlan id 100 Then, the following command will display the address of garp_pdu_rcv ip maddr show | grep 0180c2000021 Fix the bug by enforcing the type of the underlying device during VLAN device initialization.",
    "keyphrases": {
        "rootcause": "out-of-bounds read",
        "weakness": "out-of-bounds read",
        "impact": "leaks the address of a kernel function to usermode",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "vlan enforce underlying device type"
    }
}
