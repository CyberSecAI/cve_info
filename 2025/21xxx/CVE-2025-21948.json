{
    "cveId": "CVE-2025-21948",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved HID appleir Fix potential NULL dereference at raw event handle Syzkaller reports a NULL pointer dereference issue in input_event(). BUG KASAN null-ptr-deref in instrument_atomic_read include/linux/instrumented.h68 [inline] BUG KASAN null-ptr-deref in _test_bit include/asm-generic/bitops/instrumented-non-atomic.h141 [inline] BUG KASAN null-ptr-deref in is_event_supported drivers/input/input.c67 [inline] BUG KASAN null-ptr-deref in input_event+0x42/0xa0 drivers/input/input.c395 Read of size 8 at addr 0000000000000028 by task syz-executor199/2949 CPU 0 UID 0 PID 2949 Comm syz-executor199 Not tainted 6.13.0-rc4-syzkaller-00076-gf097a36ef88d #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024 Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c120 kasan_report+0xd9/0x110 mm/kasan/report.c602 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0xef/0x1a0 mm/kasan/generic.c189 instrument_atomic_read include/linux/instrumented.h68 [inline] _test_bit include/asm-generic/bitops/instrumented-non-atomic.h141 [inline] is_event_supported drivers/input/input.c67 [inline] input_event+0x42/0xa0 drivers/input/input.c395 input_report_key include/linux/input.h439 [inline] key_down drivers/hid/hid-appleir.c159 [inline] appleir_raw_event+0x3e5/0x5e0 drivers/hid/hid-appleir.c232 __hid_input_report.constprop.0+0x312/0x440 drivers/hid/hid-core.c2111 hid_ctrl+0x49f/0x550 drivers/hid/usbhid/hid-core.c484 __usb_hcd_giveback_urb+0x389/0x6e0 drivers/usb/core/hcd.c1650 usb_hcd_giveback_urb+0x396/0x450 drivers/usb/core/hcd.c1734 dummy_timer+0x17f7/0x3960 drivers/usb/gadget/udc/dummy_hcd.c1993 __run_hrtimer kernel/time/hrtimer.c1739 [inline] __hrtimer_run_queues+0x20a/0xae0 kernel/time/hrtimer.c1803 hrtimer_run_softirq+0x17d/0x350 kernel/time/hrtimer.c1820 handle_softirqs+0x206/0x8d0 kernel/softirq.c561 __do_softirq kernel/softirq.c595 [inline] invoke_softirq kernel/softirq.c435 [inline] __irq_exit_rcu+0xfa/0x160 kernel/softirq.c662 irq_exit_rcu+0x9/0x30 kernel/softirq.c678 instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c1049 [inline] sysvec_apic_timer_interrupt+0x90/0xb0 arch/x86/kernel/apic/apic.c1049 asm_sysvec_apic_timer_interrupt+0x1a/0x20 arch/x86/include/asm/idtentry.h702 __mod_timer+0x8f6/0xdc0 kernel/time/timer.c1185 add_timer+0x62/0x90 kernel/time/timer.c1295 schedule_timeout+0x11f/0x280 kernel/time/sleep_timeout.c98 usbhid_wait_io+0x1c7/0x380 drivers/hid/usbhid/hid-core.c645 usbhid_init_reports+0x19f/0x390 drivers/hid/usbhid/hid-core.c784 hiddev_ioctl+0x1133/0x15b0 drivers/hid/usbhid/hiddev.c794 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c906 [inline] __se_sys_ioctl fs/ioctl.c892 [inline] __x64_sys_ioctl+0x190/0x200 fs/ioctl.c892 do_syscall_x64 arch/x86/entry/common.c52 [inline] do_syscall_64+0xcd/0x250 arch/x86/entry/common.c83 entry_SYSCALL_64_after_hwframe+0x77/0x7f This happens due to the malformed report items sent by the emulated device which results in a report, that has no fields, being added to the report list. Due to this appleir_input_configured() is never called, hidinput_connect() fails which results in the HID_CLAIMED_INPUT flag is not being set. However, it does not make appleir_probe() fail and lets the event callback to be called without the associated input device. Thus, add a check for the HID_CLAIMED_INPUT flag and leave the event hook early if the driver didnt claim any input_dev for some reason. Moreover, some other hid drivers accessing input_dev in their event callbacks do have similar checks, too. Found by Linux Verification Center (linuxtesting.org) with Syzkaller.",
    "keyphrases": {
        "rootcause": "NULL pointer dereference",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.13.0-rc4",
        "component": "input_event"
    }
}
