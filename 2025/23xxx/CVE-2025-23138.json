{
    "cveId": "CVE-2025-23138",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved watch_queue fix pipe accounting mismatch Currently, watch_queue_set_size() modifies the pipe buffers charged to user->pipe_bufs without updating the pipe->nr_accounted on the pipe itself, due to the if (!pipe_has_watch_queue()) test in pipe_resize_ring(). This means that when the pipe is ultimately freed, we decrement user->pipe_bufs by something other than what than we had charged to it, potentially leading to an underflow. This in turn can cause subsequent too_many_pipe_buffers_soft() tests to fail with -EPERM. To remedy this, explicitly account for the pipe usage in watch_queue_set_size() to match the number set via account_pipe_buffers() (Its unclear why watch_queue_set_size() does not update nr_accounted it may be due to intentional overprovisioning in watch_queue_set_size()?)",
    "keyphrases": {
        "component": "watch_queue",
        "rootcause": "accounting mismatch",
        "vector": "",
        "weakness": "",
        "product": "Linux kernel",
        "impact": "underflow, too_many_pipe_buffers_soft() tests fail with -EPERM",
        "attacker": "",
        "version": ""
    }
}
