{
    "cveId": "CVE-2025-23140",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved misc pci_endpoint_test Avoid issue of interrupts remaining after request_irq error After devm_request_irq() fails with error in pci_endpoint_test_request_irq(), the pci_endpoint_test_free_irq_vectors() is called assuming that all IRQs have been released. However, some requested IRQs remain unreleased, so there are still /proc/irq/* entries remaining, and this results in WARN() with the following message remove_proc_entry removing non-empty directory irq/30, leaking at least pci-endpoint-test.0 WARNING CPU 0 PID 202 at fs/proc/generic.c719 remove_proc_entry +0x190/0x19c To solve this issue, set the number of remaining IRQs to test->num_irqs, and release IRQs in advance by calling pci_endpoint_test_release_irq(). [kwilczynski commit log]",
    "keyphrases": {
        "rootcause": "WARN() with the following message remove_proc_entry removing non-empty directory irq/30, leaking at least pci-endpoint-test.0 WARNING CPU 0 PID 202 at fs/proc/generic.c719 remove_proc_entry +0x190/0x19c",
        "weakness": "",
        "impact": "After devm_request_irq() fails with error in pci_endpoint_test_request_irq(), the pci_endpoint_test_free_irq_vectors() is called assuming that all IRQs have been released. However, some requested IRQs remain unreleased, so there are still /proc/irq/* entries remaining.",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "misc pci_endpoint_test"
    }
}
