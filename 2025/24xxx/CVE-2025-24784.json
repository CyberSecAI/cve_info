{
    "cveId": "CVE-2025-24784",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. The policy group feature, added to by the 1.17.0 release. By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, its considered safe to allow non-admin users to create and manage these resources in the namespaces they own. Kubewarden policies can be allowed to query the Kubernetes API at evaluation time these types of policies are called context aware. Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount. The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy. The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Servers ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only Namespace, Pod, Deployment and Ingress. This vulnerability is fixed in 1.21.0.",
    "keyphrases": {
        "rootcause": "The AdmissionPolicyGroup CRD allowed the deployment of context aware policies",
        "weakness": "query the Kubernetes API at evaluation time",
        "impact": "obtain information about resources that are out of their reach",
        "vector": "",
        "attacker": "",
        "product": "kubewarden-controller",
        "version": "",
        "component": ""
    }
}
