{
    "cveId": "CVE-2025-22123",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved f2fs fix to avoid accessing uninitialized curseg syzbot reports a f2fs bug as below F2FS-fs (loop3) Stopped filesystem due to reason 7 kworker/u87 attempt to access beyond end of device BUG unable to handle page fault for address ffffed1604ea3dfa RIP 0010get_ckpt_valid_blocks fs/f2fs/segment.h361 [inline] RIP 0010has_curseg_enough_space fs/f2fs/segment.h570 [inline] RIP 0010__get_secs_required fs/f2fs/segment.h620 [inline] RIP 0010has_not_enough_free_secs fs/f2fs/segment.h633 [inline] RIP 0010has_enough_free_secs+0x575/0x1660 fs/f2fs/segment.h649 f2fs_is_checkpoint_ready fs/f2fs/segment.h671 [inline] f2fs_write_inode+0x425/0x540 fs/f2fs/inode.c791 write_inode fs/fs-writeback.c1525 [inline] __writeback_single_inode+0x708/0x10d0 fs/fs-writeback.c1745 writeback_sb_inodes+0x820/0x1360 fs/fs-writeback.c1976 wb_writeback+0x413/0xb80 fs/fs-writeback.c2156 wb_do_writeback fs/fs-writeback.c2303 [inline] wb_workfn+0x410/0x1080 fs/fs-writeback.c2343 process_one_work kernel/workqueue.c3236 [inline] process_scheduled_works+0xa66/0x1840 kernel/workqueue.c3317 worker_thread+0x870/0xd30 kernel/workqueue.c3398 kthread+0x7a9/0x920 kernel/kthread.c464 ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c148 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S244 Commit 8b10d3653735 (f2fs introduce FAULT_NO_SEGMENT) allows to trigger no free segment fault in allocator, then it will update curseg->segno to NULL_SEGNO, though, CP_ERROR_FLAG has been set, f2fs_write_inode() missed to check the flag, and access invalid curseg->segno directly in below call path, then resulting in panic - f2fs_write_inode - f2fs_is_checkpoint_ready - has_enough_free_secs - has_not_enough_free_secs - __get_secs_required - has_curseg_enough_space - get_ckpt_valid_blocks access invalid curseg->segno To avoid this issue, lets - check CP_ERROR_FLAG flag in prior to f2fs_is_checkpoint_ready() in f2fs_write_inode(). - in has_curseg_enough_space(), save curseg->segno into a temp variable, and verify its validation before use.",
    "keyphrases": {
        "component": "f2fs",
        "rootcause": "no free segment fault in allocator",
        "vector": "",
        "weakness": "access uninitialized curseg->segno",
        "product": "Linux kernel",
        "impact": "access invalid curseg->segno, panic, trigger no free segment fault",
        "attacker": "",
        "version": ""
    }
}
