{
    "cveId": "CVE-2025-22021",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netfilter socket Lookup orig tuple for IPv6 SNAT nf_sk_lookup_slow_v4 does the conntrack lookup for IPv4 packets to restore the original 5-tuple in case of SNAT, to be able to find the right socket (if any). Then socket_match() can correctly check whether the socket was transparent. However, the IPv6 counterpart (nf_sk_lookup_slow_v6) lacks this conntrack lookup, making xt_socket fail to match on the socket when the packet was SNATed. Add the same logic to nf_sk_lookup_slow_v6. IPv6 SNAT is used in Kubernetes clusters for pod-to-world packets, as pods addresses are in the fd00/8 ULA subnet and need to be replaced with the nodes external address. Cilium leverages Envoy to enforce L7 policies, and Envoy uses transparent sockets. Cilium inserts an iptables prerouting rule that matches on `-m socket --transparent` and redirects the packets to localhost, but it fails to match SNATed IPv6 packets due to that missing conntrack lookup.",
    "keyphrases": {
        "rootcause": "IPv6 counterpart (nf_sk_lookup_slow_v6) lacks this conntrack lookup",
        "weakness": "",
        "impact": "fail to match on the socket when the packet was SNATed",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "netfilter socket Lookup orig tuple for IPv6 SNAT nf_sk_lookup_slow_v4"
    }
}
