{
    "cveId": "CVE-2025-22027",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved media streamzap fix race between device disconnection and urb callback Syzkaller has reported a general protection fault at function ir_raw_event_store_with_filter(). This crash is caused by a NULL pointer dereference of dev->raw pointer, even though it is checked for NULL in the same function, which means there is a race condition. It occurs due to the incorrect order of actions in the streamzap_disconnect() function rc_unregister_device() is called before usb_kill_urb(). The dev->raw pointer is freed and set to NULL in rc_unregister_device(), and only after that usb_kill_urb() waits for in-progress requests to finish. If rc_unregister_device() is called while streamzap_callback() handler is not finished, this can lead to accessing freed resources. Thus rc_unregister_device() should be called after usb_kill_urb(). Found by Linux Verification Center (linuxtesting.org) with Syzkaller.",
    "keyphrases": {
        "component": "media streamzap",
        "rootcause": "NULL pointer dereference, race condition, race between device disconnection and urb callback",
        "vector": "",
        "weakness": "NULL pointer dereference",
        "product": "Linux kernel",
        "impact": "general protection fault, accessing freed resources",
        "attacker": "",
        "version": ""
    }
}
