{
    "cveId": "CVE-2025-38022",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved RDMA/core Fix KASAN slab-use-after-free Read in ib_register_device problem Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c120 print_address_description mm/kasan/report.c408 [inline] print_report+0xc3/0x670 mm/kasan/report.c521 kasan_report+0xe0/0x110 mm/kasan/report.c634 strlen+0x93/0xa0 lib/string.c420 __fortify_strlen include/linux/fortify-string.h268 [inline] get_kobj_path_length lib/kobject.c118 [inline] kobject_get_path+0x3f/0x2a0 lib/kobject.c158 kobject_uevent_env+0x289/0x1870 lib/kobject_uevent.c545 ib_register_device drivers/infiniband/core/device.c1472 [inline] ib_register_device+0x8cf/0xe00 drivers/infiniband/core/device.c1393 rxe_register_device+0x275/0x320 drivers/infiniband/sw/rxe/rxe_verbs.c1552 rxe_net_add+0x8e/0xe0 drivers/infiniband/sw/rxe/rxe_net.c550 rxe_newlink+0x70/0x190 drivers/infiniband/sw/rxe/rxe.c225 nldev_newlink+0x3a3/0x680 drivers/infiniband/core/nldev.c1796 rdma_nl_rcv_msg+0x387/0x6e0 drivers/infiniband/core/netlink.c195 rdma_nl_rcv_skb.constprop.0.isra.0+0x2e5/0x450 netlink_unicast_kernel net/netlink/af_netlink.c1313 [inline] netlink_unicast+0x53a/0x7f0 net/netlink/af_netlink.c1339 netlink_sendmsg+0x8d1/0xdd0 net/netlink/af_netlink.c1883 sock_sendmsg_nosec net/socket.c712 [inline] __sock_sendmsg net/socket.c727 [inline] ____sys_sendmsg+0xa95/0xc70 net/socket.c2566 ___sys_sendmsg+0x134/0x1d0 net/socket.c2620 __sys_sendmsg+0x16d/0x220 net/socket.c2652 do_syscall_x64 arch/x86/entry/syscall_64.c63 [inline] do_syscall_64+0xcd/0x260 arch/x86/entry/syscall_64.c94 entry_SYSCALL_64_after_hwframe+0x77/0x7f This problem is similar to the problem that the commit 1d6a9e7449e2 (RDMA/core Fix use-after-free when rename device name) fixes. The root cause is the function ib_device_rename() renames the name with lock. But in the function kobject_uevent(), this name is accessed without lock protection at the same time. The solution is to add the lock protection when this name is accessed in the function kobject_uevent().",
    "keyphrases": {
        "rootcause": "use-after-free",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "RDMA/core Fix KASAN slab-use-after-free Read in ib_register_device"
    }
}
