{
    "cveId": "CVE-2025-38000",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved sch_hfsc Fix qlen accounting bug when using peek in hfsc_enqueue() When enqueuing the first packet to an HFSC class, hfsc_enqueue() calls the child qdiscs peek() operation before incrementing sch->q.qlen and sch->qstats.backlog. If the child qdisc uses qdisc_peek_dequeued(), this may trigger an immediate dequeue and potential packet drop. In such cases, qdisc_tree_reduce_backlog() is called, but the HFSC qdiscs qlen and backlog have not yet been updated, leading to inconsistent queue accounting. This can leave an empty HFSC class in the active list, causing further consequences like use-after-free. This patch fixes the bug by moving the increment of sch->q.qlen and sch->qstats.backlog before the call to the child qdiscs peek() operation. This ensures that queue length and backlog are always accurate when packet drops or dequeues are triggered during the peek.",
    "keyphrases": {
        "component": "sch_hfsc qlen accounting",
        "rootcause": "",
        "vector": "",
        "weakness": "use-after-free",
        "product": "Linux kernel",
        "impact": "['dequeue', 'packet drop']",
        "attacker": "",
        "version": ""
    }
}
