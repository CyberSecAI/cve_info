{
    "cveId": "CVE-2025-38129",
    "version": "1.0.0",
    "timestamp": "2025-07-05T08:16:57.403025+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved page_pool Fix use-after-free in page_pool_recycle_in_ring syzbot reported a uaf in page_pool_recycle_in_ring BUG KASAN slab-use-after-free in lock_release+0x151/0xa30 kernel/locking/lockdep.c5862 Read of size 8 at addr ffff8880286045a0 by task syz.0.284/6943 CPU 0 UID 0 PID 6943 Comm syz.0.284 Not tainted 6.13.0-rc3-syzkaller-gdfa94ce54f41 #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024 Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x241/0x360 lib/dump_stack.c120 print_address_description mm/kasan/report.c378 [inline] print_report+0x169/0x550 mm/kasan/report.c489 kasan_report+0x143/0x180 mm/kasan/report.c602 lock_release+0x151/0xa30 kernel/locking/lockdep.c5862 __raw_spin_unlock_bh include/linux/spinlock_api_smp.h165 [inline] _raw_spin_unlock_bh+0x1b/0x40 kernel/locking/spinlock.c210 spin_unlock_bh include/linux/spinlock.h396 [inline] ptr_ring_produce_bh include/linux/ptr_ring.h164 [inline] page_pool_recycle_in_ring net/core/page_pool.c707 [inline] page_pool_put_unrefed_netmem+0x748/0xb00 net/core/page_pool.c826 page_pool_put_netmem include/net/page_pool/helpers.h323 [inline] page_pool_put_full_netmem include/net/page_pool/helpers.h353 [inline] napi_pp_put_page+0x149/0x2b0 net/core/skbuff.c1036 skb_pp_recycle net/core/skbuff.c1047 [inline] skb_free_head net/core/skbuff.c1094 [inline] skb_release_data+0x6c4/0x8a0 net/core/skbuff.c1125 skb_release_all net/core/skbuff.c1190 [inline] __kfree_skb net/core/skbuff.c1204 [inline] sk_skb_reason_drop+0x1c9/0x380 net/core/skbuff.c1242 kfree_skb_reason include/linux/skbuff.h1263 [inline] __skb_queue_purge_reason include/linux/skbuff.h3343 [inline] root cause is page_pool_recycle_in_ring ptr_ring_produce spin_lock(&r->producer_lock) WRITE_ONCE(r->queue[r->producer++], ptr) //recycle last page to pool page_pool_release page_pool_scrub page_pool_empty_ring ptr_ring_consume page_pool_return_page //release all page __page_pool_destroy free_percpu(pool->recycle_stats) free(pool) //free spin_unlock(&r->producer_lock) //pool->ring uaf read recycle_stat_inc(pool, ring) page_pool can be free while page pool recycle the last page in ring. Add producer-lock barrier to page_pool_release to prevent the page pool from being free before all pages have been recycled. recycle_stat_inc() is empty when CONFIG_PAGE_POOL_STATS is not enabled, which will trigger Wempty-body build warning. Add definition for pool stat macro to fix warning.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.13.0-rc3-syzkaller-gdfa94ce54f41",
        "component": "page_pool_recycle_in_ring"
    }
}
