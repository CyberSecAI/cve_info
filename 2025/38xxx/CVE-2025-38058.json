{
    "cveId": "CVE-2025-38058",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved __legitimize_mnt() check for MNT_SYNC_UMOUNT should be under mount_lock ... or we risk stealing final mntput from sync umount - raising mnt_count after umount(2) has verified that victim is not busy, but before it has set MNT_SYNC_UMOUNT in that case __legitimize_mnt() doesnt see that its safe to quietly undo mnt_count increment and leaves dropping the reference to caller, where itll be a full-blown mntput(). Check under mount_lock is needed leaving the current one done before taking that makes no sense - its nowhere near common enough to bother with.",
    "keyphrases": {
        "rootcause": "The __legitimize_mnt() check for MNT_SYNC_UMOUNT should be under mount_lock.",
        "weakness": "",
        "impact": "stealing final mntput from sync umount - raising mnt_count after umount(2)",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
