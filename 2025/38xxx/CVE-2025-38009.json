{
    "cveId": "CVE-2025-38009",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved wifi mt76 disable napi on driver removal A warning on driver removal started occurring after commit 9dd05df8403b (net warn if NAPI instance wasnt shut down). Disable tx napi before deleting it in mt76_dma_cleanup(). WARNING CPU 4 PID 18828 at net/core/dev.c7288 __netif_napi_del_locked+0xf0/0x100 CPU 4 UID 0 PID 18828 Comm modprobe Not tainted 6.15.0-rc4 #4 PREEMPT(lazy) Hardware name ASUS System Product Name/PRIME X670E-PRO WIFI, BIOS 3035 09/05/2024 RIP 0010__netif_napi_del_locked+0xf0/0x100 Call Trace mt76_dma_cleanup+0x54/0x2f0 [mt76] mt7921_pci_remove+0xd5/0x190 [mt7921e] pci_device_remove+0x47/0xc0 device_release_driver_internal+0x19e/0x200 driver_detach+0x48/0x90 bus_remove_driver+0x6d/0xf0 pci_unregister_driver+0x2e/0xb0 __do_sys_delete_module.isra.0+0x197/0x2e0 do_syscall_64+0x7b/0x160 entry_SYSCALL_64_after_hwframe+0x76/0x7e Tested with mt7921e but the same pattern can be actually applied to other mt76 drivers calling mt76_dma_cleanup() during removal. Tx napi is enabled in their *_dma_init() functions and only toggled off and on again inside their suspend/resume/reset paths. So it should be okay to disable tx napi in such a generic way. Found by Linux Verification Center (linuxtesting.org).",
    "keyphrases": {
        "component": "mt76 wifi driver, mt7921e driver",
        "rootcause": "",
        "vector": "",
        "weakness": "",
        "product": "Linux kernel",
        "impact": "",
        "attacker": "",
        "version": ""
    }
}
