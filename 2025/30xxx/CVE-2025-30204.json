{
    "cveId": "CVE-2025-30204",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the functions argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "incurs allocations to the tune of O(n) bytes",
        "vector": "malicious request whose Authorization header consists of Bearer followed by many period characters",
        "attacker": "",
        "product": "golang-jwt",
        "version": "3.2.0 to 5.2.2 and 4.5.2",
        "component": "parse.ParseUnverified function"
    }
}
