{
    "cveId": "CVE-2025-37987",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved pds_core Prevent possible adminq overflow/stuck condition The pds_cores adminq is protected by the adminq_lock, which prevents more than 1 command to be posted onto it at any one time. This makes it so the client drivers cannot simultaneously post adminq commands. However, the completions happen in a different context, which means multiple adminq commands can be posted sequentially and all waiting on completion. On the FW side, the backing adminq request queue is only 16 entries long and the retry mechanism and/or overflow/stuck prevention is lacking. This can cause the adminq to get stuck, so commands are no longer processed and completions are no longer sent by the FW. As an initial fix, prevent more than 16 outstanding adminq commands so theres no way to cause the adminq from getting stuck. This works because the backing adminq request queue will never have more than 16 pending adminq commands, so it will never overflow. This is done by reducing the adminq depth to 16.",
    "keyphrases": {
        "component": "pds_core",
        "rootcause": "",
        "vector": "",
        "weakness": "overflow",
        "product": "Linux kernel",
        "impact": "adminq overflow, stuck condition",
        "attacker": "",
        "version": ""
    }
}
