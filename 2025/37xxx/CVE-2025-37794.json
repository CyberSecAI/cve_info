{
  "cveId": "CVE-2025-37794",
  "version": "1.0.0",
  "timestamp": "2025-07-04T16:12:41.853043+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved wifi mac80211 Purge vif txq in ieee80211_do_stop() After ieee80211_do_stop() SKB from vifs txq could still be processed. Indeed another concurrent vif schedule_and_wake_txq call could cause those packets to be dequeued (see ieee80211_handle_wake_tx_queue()) without checking the sdata current state. Because vif.drv_priv is now cleared in this function, this could lead to driver crash. For example in ath12k, ahvif is store in vif.drv_priv. Thus if ath12k_mac_op_tx() is called after ieee80211_do_stop(), ahvif->ah can be NULL, leading the ath12k_warn(ahvif->ah,...) call in this function to trigger the NULL deref below. Unable to handle kernel paging request at virtual address dfffffc000000001 KASAN null-ptr-deref in range [0x0000000000000008-0x000000000000000f] batman_adv bat0 Interface deactivated brbh1337 Mem abort info ESR = 0x0000000096000004 EC = 0x25 DABT (current EL), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 FSC = 0x04 level 0 translation fault Data abort info ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000 CM = 0, WnR = 0, TnD = 0, TagAccess = 0 GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0 [dfffffc000000001] address between user and kernel address ranges Internal error Oops 0000000096000004",
  "keyphrases": {
    "rootcause": "",
    "weakness": [
      "NULL dereference",
      "null-ptr-deref"
    ],
    "impact": [
      "driver crash",
      "Oops"
    ],
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "wifi mac80211"
  },
  "mitreTechnicalImpacts": []
}