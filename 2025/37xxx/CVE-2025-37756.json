{
    "cveId": "CVE-2025-37756",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net tls explicitly disallow disconnect syzbot discovered that it can disconnect a TLS socket and then run into all sort of unexpected corner cases. I have a vague recollection of Eric pointing this out to us a long time ago. Supporting disconnect is really hard, for one thing if offload is enabled wed need to wait for all packets to be _acked_. Disconnect is not commonly used, disallow it. The immediate problem syzbot run into is the warning in the strp, but thats just the easiest bug to trigger WARNING CPU 0 PID 5834 at net/tls/tls_strp.c486 tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c486 RIP 0010tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c486 Call Trace tls_rx_rec_wait+0x280/0xa60 net/tls/tls_sw.c1363 tls_sw_recvmsg+0x85c/0x1c30 net/tls/tls_sw.c2043 inet6_recvmsg+0x2c9/0x730 net/ipv6/af_inet6.c678 sock_recvmsg_nosec net/socket.c1023 [inline] sock_recvmsg+0x109/0x280 net/socket.c1045 __sys_recvfrom+0x202/0x380 net/socket.c2237",
    "keyphrases": {
        "rootcause": "disconnect is not commonly used",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net tls"
    }
}
