{
    "cveId": "CVE-2025-37898",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved powerpc64/ftrace fix module loading without patchable function entries get_stubs_size assumes that there must always be at least one patchable function entry, which is not always the case (modules that export data but no code), otherwise it returns -ENOEXEC and thus the section header sh_size is set to that value. During module_memory_alloc() the size is passed to execmem_alloc() after being page-aligned and thus set to zero which will cause it to fail the allocation (and thus module loading) as __vmalloc_node_range() checks for zero-sized allocs and returns null [ 115.466896] module_64 cast_common doesnt contain __patchable_function_entries. [ 115.469189] ------------[ cut here ]------------ [ 115.469496] WARNING CPU 0 PID 274 at mm/vmalloc.c3778 __vmalloc_node_range_noprof+0x8b4/0x8f0 ... [ 115.478574] ---[ end trace 0000000000000000 ]--- [ 115.479545] execmem unable to allocate memory Fix this by removing the check completely, since it is anyway not helpful to propagate this as an error upwards.",
    "keyphrases": {
        "component": "",
        "rootcause": "Linux kernel, powerpc64/ftrace fix module loading, improper module loading",
        "vector": "",
        "weakness": "",
        "product": "",
        "impact": "set sh_size to -ENOEXEC",
        "attacker": "",
        "version": ""
    }
}
