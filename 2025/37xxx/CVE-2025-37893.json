{
    "cveId": "CVE-2025-37893",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved LoongArch BPF Fix off-by-one error in build_prologue() Vincent reported that running BPF progs with tailcalls on LoongArch causes kernel hard lockup. Debugging the issues shows that the JITed image missing a jirl instruction at the end of the epilogue. There are two passes in JIT compiling, the first pass set the flags and the second pass generates JIT code based on those flags. With BPF progs mixing bpf2bpf and tailcalls, build_prologue() generates N insns in the first pass and then generates N+1 insns in the second pass. This makes epilogue_offset off by one and we will jump to some unexpected insn and cause lockup. Fix this by inserting a nop insn.",
    "keyphrases": {
        "component": "",
        "rootcause": "off-by-one error, missing a jirl instruction at the end of the epilogue",
        "vector": "",
        "weakness": "",
        "product": "Linux kernel",
        "impact": "kernel hard lockup, lockup",
        "attacker": "",
        "version": ""
    }
}
