{
    "cveId": "CVE-2024-40979",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved wifi ath12k fix kernel crash during resume Currently during resume, QMI target memory is not properly handled, resulting in kernel crash in case DMA remap is not supported BUG Bad page state in process kworker/u1654 pfn36e80 page refcount1 mapcount0 mapping0000000000000000 index0x0 pfn0x36e80 page dumped because nonzero _refcount Call Trace bad_page free_page_is_bad_report __free_pages_ok __free_pages dma_direct_free dma_free_attrs ath12k_qmi_free_target_mem_chunk ath12k_qmi_msg_mem_request_cb The reason is Once ath12k module is loaded, firmware sends memory request to host. In case DMA remap not supported, ath12k refuses the first request due to failure in allocating with large segment size ath12k_pci 00000400.0 qmi firmware request memory request ath12k_pci 00000400.0 qmi mem seg type 1 size 7077888 ath12k_pci 00000400.0 qmi mem seg type 4 size 8454144 ath12k_pci 00000400.0 qmi dma allocation failed (7077888 B type 1), will try later with small size ath12k_pci 00000400.0 qmi delays mem_request 2 ath12k_pci 00000400.0 qmi firmware request memory request Later firmware comes back with more but small segments and allocation succeeds ath12k_pci 00000400.0 qmi mem seg type 1 size 524288 ath12k_pci 00000400.0 qmi mem seg type 1 size 524288 ath12k_pci 00000400.0 qmi mem seg type 1 size 524288 ath12k_pci 00000400.0 qmi mem seg type 1 size 524288 ath12k_",
    "keyphrases": {
        "rootcause": "Bad page state",
        "weakness": "",
        "impact": "kernel crash",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
