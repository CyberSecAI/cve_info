{
  "cveId": "CVE-2024-40948",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved mm/page_table_check fix crash on ZONE_DEVICE Not all pages may apply to pgtable check. One example is ZONE_DEVICE pages they map PFNs directly, and they dont allocate page_ext at all even if theres struct page around. One may reference devm_memremap_pages(). When both ZONE_DEVICE and page-table-check enabled, then try to map some dax memories, one can trigger kernel bug constantly now when the kernel was trying to inject some pfn maps on the dax device kernel BUG at mm/page_table_check.c55! While its pretty legal to use set_pxx_at() for ZONE_DEVICE pages for page fault resolutions, skip all the checks if page_ext doesnt even exist in pgtable checker, which applies to ZONE_DEVICE but maybe more.",
  "keyphrases": {
    "rootcause": "improper handling of ZONE_DEVICE pages in pgtable checker",
    "weakness": "",
    "impact": [
      "kernel bug",
      "kernel crash"
    ],
    "vector": "mapping dax memories",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "mm/page_table_check"
  },
  "mitreTechnicalImpacts": []
}