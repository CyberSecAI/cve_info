{
    "cveId": "CVE-2024-40906",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net/mlx5 Always stop health timer during driver removal Currently, if teardown_hca fails to execute during driver removal, mlx5 does not stop the health timer. Afterwards, mlx5 continue with driver teardown. This may lead to a UAF bug, which results in page fault Oops[1], since the health timer invokes after resources were freed. Hence, stop the health monitor even if teardown_hca fails. [1] mlx5_core 00001800.0 E-Switch Unload vfs mode(LEGACY), nvfs(0), necvfs(0), active vports(0) mlx5_core 00001800.0 E-Switch Disable mode(LEGACY), nvfs(0), necvfs(0), active vports(0) mlx5_core 00001800.0 E-Switch Disable mode(LEGACY), nvfs(0), necvfs(0), active vports(0) mlx5_core 00001800.0 E-Switch cleanup mlx5_core 00001800.0 wait_func1155(pid 1967079) TEARDOWN_HCA(0x103) timeout. Will cause a leak of a command resource mlx5_core 00001800.0 mlx5_function_close1288(pid 1967079) tear_down_hca failed, skip cleanup BUG unable to handle page fault for address ffffa26487064230 PGD 100c00067 P4D 100c00067 PUD 100e5a067 PMD 105ed7067 PTE 0 Oops 0000 [#1] PREEMPT SMP PTI CPU 0 PID 0 Comm swapper/0 Tainted G OE ------- --- 6.7.0-68.fc38.x86_64 #1 Hardware name Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0013.121520200651 12/15/2020 RIP 0010ioread32be+0x34/0x60 RSP 0018ffffa26480003e58 EFLAGS 00010292 RAX ffffa26487064200 RBX ffff9042d08161a0 RCX ff",
    "keyphrases": {
        "rootcause": "improper resource management",
        "weakness": "use-after-free",
        "impact": "page fault Oops",
        "vector": "teardown_hca failure during driver removal",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net/mlx5"
    }
}
