{
    "cveId": "CVE-2024-40943",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedocfs2 fix races between hole punching and AIO+DIOAfter commit ocfs2 return real error code in ocfs2_dio_wr_get_block,fstests/generic/300 become from always failed to sometimes failed========================================================================[ 473.293420 ] run fstests generic/300[ 475.296983 ] JBD2 Ignoring recovery information on journal[ 475.302473 ] ocfs2 Mounting device (253,1) on (node local, slot 0) with ordered data mode.[ 494.290998 ] OCFS2 ERROR (device dm-1) ocfs2_change_extent_flag Owner 5668 has an extent at cpos 78723 which can no longer be found[ 494.291609 ] On-disk corruption discovered. Please run fsck.ocfs2 once the filesystem is unmounted.[ 494.292018 ] OCFS2 File system is now read-only.[ 494.292224 ] (kworker/1911,2628,19)ocfs2_mark_extent_written5272 ERROR status = -30[ 494.292602 ] (kworker/1911,2628,19)ocfs2_dio_end_io_write2374 ERROR status = -3fio io_u error on file /mnt/scratch/racer Read-only file system write offset=460849152, buflen=131072=========================================================================In __blockdev_direct_IO, ocfs2_dio_wr_get_block is called to add unwrittenextents to a list. extents are also inserted into extent tree inocfs2_write_begin_nolock. Then another thread call fallocate to puch ahole at one of the unwritten extent. The extent at cpos was removed byocfs2_remove_extent(). At end io worker thread, ocfs2_search_extent_listfound there is no such extent at the cpos. T1 T2 T3 inode lock ... insert extents ... inode unlockocfs2_fallocate __ocfs2_change_file_space inode lock lock ip_alloc_sem ocfs2_remove_inode_range inode ocfs2_remove_btree_range ocfs2_remove_extent ^---remove the extent at cpos 78723 ... unlock ip_alloc_sem inode unlock ocfs2_dio_end_io ocfs2_dio_end_io_write lock ip_alloc_sem ocfs2_mark_extent_written ocfs2_change_extent_flag ocfs2_search_extent_list ^---failed to find extent ... unlock ip_alloc_semIn most filesystems, fallocate is not compatible with racing with AIO+DIO,so fix it by adding to wait for all dio before fallocate/punch_hole likeext4.",
    "keyphrases": {
        "rootcause": "Race condition between hole punching (fallocate) and AIO/DIO operations on OCFS2 filesystem.",
        "weakness": "Lack of synchronization between operations that modify file extents, leading to inconsistencies in the extent tree.",
        "impact": "File system corruption and read-only state due to inconsistent metadata, as DIO operations expect extents that were removed by hole punching.",
        "vector": "Concurrent execution of hole punching via fallocate with AIO/DIO write operations",
        "attacker": "Not applicable. This is due to a flaw in the kernel code itself and can be triggered by the system itself.",
        "product": "Linux Kernel",
        "version": "Not specified in the text",
        "component": "OCFS2 filesystem"
    }
}
