{
    "cveId": "CVE-2024-40958",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvednetns Make get_net_ns() handle zero refcount netSyzkaller hit a warningrefcount_t addition on 0 use-after-free.WARNING CPU 3 PID 7890 at lib/refcount.c25 refcount_warn_saturate+0xdf/0x1d0Modules linked inCPU 3 PID 7890 Comm tun Not tainted 6.10.0-rc3-00100-gcaa4f9578aba-dirty #310Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014RIP 0010refcount_warn_saturate+0xdf/0x1d0Code 41 49 04 31 ff 89 de e8 9f 1e cd fe 84 db 75 9c e8 76 26 cd fe c6 05 b6 41 49 04 01 90 48 c7 c7 b8 8e 25 86 e8 d2 05 b5 fe 90 0b 90 90 e9 79 ff ff ff e8 53 26 cd fe 0f b6 1RSP 0018ffff8881067b7da0 EFLAGS 00010286RAX 0000000000000000 RBX 0000000000000000 RCX ffffffff811c72acRDX ffff8881026a2140 RSI ffffffff811c72b5 RDI 0000000000000001RBP ffff8881067b7db0 R08 0000000000000000 R09 205b5d3730353139R10 0000000000000000 R11 205d303938375420 R12 ffff8881086500c4R13 ffff8881086500c4 R14 ffff8881086500b0 R15 ffff888108650040FS 00007f5b2961a4c0(0000) GSffff88823bd00000(0000) knlGS0000000000000000CS 0010 DS 0000 ES 0000 CR0 0000000080050033CR2 000055d7ed36fd18 CR3 00000001482f6000 CR4 00000000000006f0DR0 0000000000000000 DR1 0000000000000000 DR2 0000000000000000DR3 0000000000000000 DR6 00000000fffe0ff0 DR7 0000000000000400Call Trace ? show_regs+0xa3/0xc0 ? __warn+0xa5/0x1c0 ? refcount_warn_saturate+0xdf/0x1d0 ? report_bug+0x1fc/0x2d0 ? refcount_warn_saturate+0xdf/0x1d0 ? handle_bug+0xa1/0x110 ? exc_invalid_op+0x3c/0xb0 ? asm_exc_invalid_op+0x1f/0x30 ? __warn_printk+0xcc/0x140 ? __warn_printk+0xd5/0x140 ? refcount_warn_saturate+0xdf/0x1d0 get_net_ns+0xa4/0xc0 ? __pfx_get_net_ns+0x10/0x10 open_related_ns+0x5a/0x130 __tun_chr_ioctl+0x1616/0x2370 ? __sanitizer_cov_trace_switch+0x58/0xa0 ? __sanitizer_cov_trace_const_cmp2+0x1c/0x30 ? __pfx_tun_chr_ioctl+0x10/0x10 tun_chr_ioctl+0x2f/0x40 __x64_sys_ioctl+0x11b/0x160 x64_sys_call+0x1211/0x20d0 do_syscall_64+0x9e/0x1d0 entry_SYSCALL_64_after_hwframe+0x77/0x7fRIP 00330x7f5b28f165d7Code b3 66 90 48 8b 05 b1 48 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 3d 01 f0 ff ff 73 01 c3 48 8b 0d 81 48 2d 00 8RSP 002b00007ffc2b59c5e8 EFLAGS 00000246 ORIG_RAX 0000000000000010RAX ffffffffffffffda RBX 0000000000000000 RCX 00007f5b28f165d7RDX 0000000000000000 RSI 00000000000054e3 RDI 0000000000000003RBP 00007ffc2b59c650 R08 00007f5b291ed8c0 R09 00007f5b2961a4c0R10 0000000029690010 R11 0000000000000246 R12 0000000000400730R13 00007ffc2b59cf40 R14 0000000000000000 R15 0000000000000000 Kernel panic - not syncing kernel panic_on_warn set ...This is trigger as below ns0 ns1tun_set_iff() //dev is tun0 tun->dev = dev//ip link set tun0 netns ns1 put_net() //ref is 0__tun_chr_ioctl() //TUNGETDEVNETNS net = dev_net(tun->dev) open_related_ns(&net->ns, get_net_ns) //ns1 get_net_ns() get_net() //addition on 0Use maybe_get_net() in get_net_ns in case nets ref is zero to fix this",
    "keyphrases": {
        "rootcause": "Use-after-free in network namespace reference counting.",
        "weakness": "The `get_net_ns()` function does not handle cases where the network namespace reference count is zero, leading to a use-after-free vulnerability when trying to increment the refcount on the already freed netns.",
        "impact": "Kernel panic and potential denial of service.",
        "vector": "The vulnerability is triggered by manipulating network namespaces using `ip link set` command and interacting with tun devices via ioctl, specifically when setting the namespace for a tun device then trying to access it after releasing the reference.",
        "attacker": "Local attacker with the ability to create network namespaces and manipulate tun devices.",
        "product": "Linux Kernel",
        "version": "6.10.0-rc3",
        "component": "netns"
    }
}
