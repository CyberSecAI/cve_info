{
    "cveId": "CVE-2024-40980",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved drop_monitor replace spin_lock by raw_spin_lock trace_drop_common() is called with preemption disabled, and it acquires a spin_lock. This is problematic for RT kernels because spin_locks are sleeping locks in this configuration, which causes the following splat BUG sleeping function called from invalid context at kernel/locking/spinlock_rt.c48 in_atomic() 1, irqs_disabled() 1, non_block 0, pid 449, name rcuc/47 preempt_count 1, expected 0 RCU nest depth 2, expected 2 5 locks held by rcuc/47/449 #0 ff1100086ec30a60 ((softirq_ctrl.lock)){+.+.}-{22}, at __local_bh_disable_ip+0x105/0x210 #1 ffffffffb394a280 (rcu_read_lock){....}-{12}, at rt_spin_lock+0xbf/0x130 #2 ffffffffb394a280 (rcu_read_lock){....}-{12}, at __local_bh_disable_ip+0x11c/0x210 #3 ffffffffb394a160 (rcu_callback){....}-{00}, at rcu_do_batch+0x360/0xc70 #4 ff1100086ee07520 (&data->lock){+.+.}-{22}, at trace_drop_common.constprop.0+0xb5/0x290 irq event stamp 139909 hardirqs last enabled at (139908) [] _raw_spin_unlock_irqrestore+0x63/0x80 hardirqs last disabled at (139909) [] trace_drop_common.constprop.0+0x26d/0x290 softirqs last enabled at (139892) [] __local_bh_enable_ip+0x103/0x170 softirqs last disabled at (139898) [] rcu_cpu_kthread+0x93/0x1f0 Preemption disabled at [] rt_mutex_slowunlock+0xab/0x2e0 CPU 47 PID"
}
