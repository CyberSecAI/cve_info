{
    "cveId": "CVE-2024-53135",
    "version": "1.0.0",
    "timestamp": "2024-12-17T08:36:27.567979+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved KVM VMX Bury Intel PT virtualization (guest/host mode) behind CONFIG_BROKEN Hide KVMs pt_mode module param behind CONFIG_BROKEN, i.e. disable support for virtualizing Intel PT via guest/host mode unless BROKEN=y. There are myriad bugs in the implementation, some of which are fatal to the guest, and others which put the stability and health of the host at risk. For guest fatalities, the most glaring issue is that KVM fails to ensure tracing is disabled, and *stays* disabled prior to VM-Enter, which is necessary as hardware disallows loading (the guests) RTIT_CTL if tracing is enabled (enforced via a VMX consistency check). Per the SDM If the logical processor is operating with Intel PT enabled (if IA32_RTIT_CTL.TraceEn = 1) at the time of VM entry, the load IA32_RTIT_CTL VM-entry control must be 0. On the host side, KVM doesnt validate the guest CPUID configuration provided by userspace, and even worse, uses the guest configuration to decide what MSRs to save/load at VM-Enter and VM-Exit. E.g. configuring guest CPUID to enumerate more address ranges than are supported in hardware will result in KVM trying to passthrough, save, and load non-existent MSRs, which generates a variety of WARNs, ToPA ERRORs in the host, a potential deadlock, etc.",
    "keyphrases": {
        "rootcause": "improper Intel PT virtualization configuration",
        "weakness": [
            "fails to ensure tracing is disabled",
            "doesnt validate the guest CPUID configuration"
        ],
        "impact": [
            "load IA32_RTIT_CTL VM-entry control must be 0",
            "passthrough, save, and load non-existent MSRs"
        ],
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "KVM VMX"
    }
}
