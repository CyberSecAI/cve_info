{
    "cveId": "CVE-2024-53212",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netlink fix false positive warning in extack during dumps Commit under fixes extended extack reporting to dumps. It works under normal conditions, because extack errors are usually reported during ->start() or the first ->dump(), its quite rare that the dump starts okay but fails later. If the dump does fail later, however, the input skb will already have the initiating message pulled, so checking if bad attr falls within skb->data will fail. Switch the check to using nlh, which is always valid. syzbot found a way to hit that scenario by filling up the receive queue. In this case we initiate a dump but dont call ->dump() until there is read space for an skb. WARNING CPU 1 PID 5845 at net/netlink/af_netlink.c2210 netlink_ack_tlv_fill+0x1a8/0x560 net/netlink/af_netlink.c2209 RIP 0010netlink_ack_tlv_fill+0x1a8/0x560 net/netlink/af_netlink.c2209 Call Trace netlink_dump_done+0x513/0x970 net/netlink/af_netlink.c2250 netlink_dump+0x91f/0xe10 net/netlink/af_netlink.c2351 netlink_recvmsg+0x6bb/0x11d0 net/netlink/af_netlink.c1983 sock_recvmsg_nosec net/socket.c1051 [inline] sock_recvmsg+0x22f/0x280 net/socket.c1073 __sys_recvfrom+0x246/0x3d0 net/socket.c2267 __do_sys_recvfrom net/socket.c2285 [inline] __se_sys_recvfrom net/socket.c2281 [inline] __x64_sys_recvfrom+0xde/0x100 net/socket.c2281 do_syscall_x64 arch/x86/entry/common.c52 [inline] do_syscall_64+0xf3/0x230 arch/x86/entry/common.c83 entry_SYSCALL_64_after_hwframe+0x77/0x7f RIP 00330x7ff37dd17a79",
    "keyphrases": {
        "rootcause": "",
        "weakness": "netlink fix false positive warning in extack during dumps",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "netlink"
    }
}
