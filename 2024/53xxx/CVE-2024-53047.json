{
    "cveId": "CVE-2024-53047",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved mptcp init protect sched with rcu_read_lock Enabling CONFIG_PROVE_RCU_LIST with its dependence CONFIG_RCU_EXPERT creates this splat when an MPTCP socket is created ============================= WARNING suspicious RCU usage 6.12.0-rc2+ #11 Not tainted ----------------------------- net/mptcp/sched.c44 RCU-list traversed in non-reader section!! other info that might help us debug this rcu_scheduler_active = 2, debug_locks = 1 no locks held by mptcp_connect/176. stack backtrace CPU 0 UID 0 PID 176 Comm mptcp_connect Not tainted 6.12.0-rc2+ #11 Hardware name Bochs Bochs, BIOS Bochs 01/01/2011 Call Trace dump_stack_lvl (lib/dump_stack.c123) lockdep_rcu_suspicious (kernel/locking/lockdep.c6822) mptcp_sched_find (net/mptcp/sched.c44 (discriminator 7)) mptcp_init_sock (net/mptcp/protocol.c2867 (discriminator 1)) ? sock_init_data_uid (arch/x86/include/asm/atomic.h28) inet_create.part.0.constprop.0 (net/ipv4/af_inet.c386) ? __sock_create (include/linux/rcupdate.h347 (discriminator 1)) __sock_create (net/socket.c1576) __sys_socket (net/socket.c1671) ? __pfx___sys_socket (net/socket.c1712) ? do_user_addr_fault (arch/x86/mm/fault.c1419 (discriminator 1)) __x64_sys_socket (net/socket.c1728) do_syscall_64 (arch/x86/entry/common.c52 (discriminator 1)) entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S130) Thats because when the socket is initialised, rcu_read_lock() is not used despite the explicit comment written above the declaration of mptcp_sched_find() in sched.c. Adding the missing lock/unlock avoids the warning.",
    "keyphrases": {
        "rootcause": "Missing rcu_read_lock() when accessing the RCU list in mptcp_sched_find function.",
        "weakness": "The code accesses the RCU list without holding the necessary rcu_read_lock(), leading to a potential race condition.",
        "impact": "The system can generate warnings due to suspicious RCU usage which can lead to debugging issues. Although, it does not indicate a functional failure.",
        "vector": "When an MPTCP socket is created, the code path that initializes the socket calls the mptcp_sched_find function which lacks the rcu_read_lock().",
        "attacker": "Not applicable as this is not a security vulnerability.",
        "product": "Linux Kernel",
        "version": "6.12.0-rc2+",
        "component": "MPTCP Socket Initialization (net/mptcp/sched.c and net/mptcp/protocol.c)"
    }
}
