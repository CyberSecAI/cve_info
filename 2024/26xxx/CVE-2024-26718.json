{
    "cveId": "CVE-2024-26718",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved dm-crypt, dm-verity disable tasklets Tasklets have an inherent problem with memory corruption. The function tasklet_action_common calls tasklet_trylock, then it calls the tasklet callback and then it calls tasklet_unlock. If the tasklet callback frees the structure that contains the tasklet or if it calls some code that may free it, tasklet_unlock will write into free memory. The commits 8e14f610159d and d9a02e016aaf try to fix it for dm-crypt, but it is not a sufficient fix and the data corruption can still happen [1]. There is no fix for dm-verity and dm-verity will write into free memory with every tasklet-processed bio. There will be atomic workqueues implemented in the kernel 6.9 [2]. They will have better interface and they will not suffer from the memory corruption problem. But we need something that stops the memory corruption now and that can be backported to the stable kernels. So, Im proposing this commit that disables tasklets in both dm-crypt and dm-verity. This commit doesnt remove the tasklet support, because the tasklet code will be reused when atomic workqueues will be implemented. [1] https//lore.kernel.org/all/d390d7ee-f142-44d3-822a-87949e14608b@suse.de/T/ [2] https//lore.kernel.org/lkml/20240130091300.2968534-1-tj@kernel.org/",
    "keyphrases": {
        "rootcause": "race condition in tasklet_action_common",
        "weakness": "use-after-free",
        "impact": "memory corruption",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": [
            "dm-crypt",
            "dm-verity"
        ]
    }
}
