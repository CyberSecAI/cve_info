{
    "cveId": "CVE-2024-26869",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved f2fs fix to truncate meta inode pages forcely Below race case can cause data corruption Thread AGC thread - gc_data_segment - ra_data_block - locked meta_inode page - f2fs_inplace_write_data - invalidate_mapping_pages fail to invalidate meta_inode page due to lock failure or dirty|writeback status - f2fs_submit_page_bio write last dirty data to old blkaddr - move_data_block - load old data from meta_inode page - f2fs_submit_page_write write old data to new blkaddr Because invalidate_mapping_pages() will skip invalidating page which has unclear status including locked, dirty, writeback and so on, so we need to use truncate_inode_pages_range() instead of invalidate_mapping_pages() to make sure meta_inode page will be dropped.",
    "keyphrases": {
        "rootcause": "Below race case can cause data corruption",
        "weakness": "",
        "impact": "data corruption",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "f2fs fix to truncate meta inode pages forcely"
    }
}
