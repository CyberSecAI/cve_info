{
    "cveId": "CVE-2024-26976",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved KVM Always flush async #PF workqueue when vCPU is being destroyed Always flush the per-vCPU async #PF workqueue when a vCPU is clearing its completion queue, e.g. when a VM and all its vCPUs is being destroyed. KVM must ensure that none of its workqueue callbacks is running when the last reference to the KVM _module_ is put. Gifting a reference to the associated VM prevents the workqueue callback from dereferencing freed vCPU/VM memory, but does not prevent the KVM module from being unloaded before the callback completes. Drop the misguided VM refcount gifting, as calling kvm_put_kvm() from async_pf_execute() if kvm_put_kvm() flushes the async #PF workqueue will result in deadlock. async_pf_execute() cant return until kvm_put_kvm() finishes, and kvm_put_kvm() cant return until async_pf_execute() finishes WARNING CPU 8 PID 251 at virt/kvm/kvm_main.c1435 kvm_put_kvm+0x2d/0x320 [kvm] Modules linked in vhost_net vhost vhost_iotlb tap kvm_intel kvm irqbypass CPU 8 PID 251 Comm kworker/81 Tainted G W 6.6.0-rc1-e7af8d17224a-x86/gmem-vm #119 Hardware name QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015 Workqueue events async_pf_execute [kvm] RIP 0010kvm_put_kvm+0x2d/0x320 [kvm] Call Trace async_pf_execute+0x198/0x260 [kvm] process_one_work+0x145/0x2d0 worker_thread+0x27e/0x3a0 kthread+0xba/0xe0 ret_from_fork+0x2d/0x50 ret_from_fork_asm+0x",
    "keyphrases": {
        "rootcause": "improper reference counting and synchronization",
        "weakness": "",
        "impact": "deadlock",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.6.0-rc1-e7af8d17224a-x86/gmem-vm",
        "component": "KVM module"
    }
}
