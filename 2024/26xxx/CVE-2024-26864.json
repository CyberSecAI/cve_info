{
    "cveId": "CVE-2024-26864",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved tcp Fix refcnt handling in __inet_hash_connect(). syzbot reported a warning in sk_nulls_del_node_init_rcu(). The commit 66b60b0c8c4a (dccp/tcp Unhash sk from ehash for tb2 alloc failure after check_estalblished().) tried to fix an issue that an unconnected socket occupies an ehash entry when bhash2 allocation fails. In such a case, we need to revert changes done by check_established(), which does not hold refcnt when inserting socket into ehash. So, to revert the change, we need to __sk_nulls_add_node_rcu() instead of sk_nulls_add_node_rcu(). Otherwise, sock_put() will cause refcnt underflow and leak the socket. [0] WARNING CPU 0 PID 23948 at include/net/sock.h799 sk_nulls_del_node_init_rcu+0x166/0x1a0 include/net/sock.h799 Modules linked in CPU 0 PID 23948 Comm syz-executor.2 Not tainted 6.8.0-rc6-syzkaller-00159-gc055fc00c07b #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024 RIP 0010sk_nulls_del_node_init_rcu+0x166/0x1a0 include/net/sock.h799 Code e8 7f 71 c6 f7 83 fb 02 7c 25 e8 35 6d c6 f7 4d 85 f6 0f 95 c0 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc e8 1b 6d c6 f7 90 0b 90 eb b2 e8 10 6d c6 f7 4c 89 e7 be 04 00 00 00 e8 63 e7 d2 RSP 0018ffffc900032d7848 EFLAGS 00010246 RAX ffffffff89cd0035 RBX 0000000000000001 RCX 0000000000040000 RDX ffffc90004de1000 RSI 000000000003ffff RDI 0000000000040000 RBP 1ffff1100439ac26 R08 fff"
}
