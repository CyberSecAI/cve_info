{
    "cveId": "CVE-2024-26958",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvednfs fix UAF in direct writesIn production we have been hitting the following warning consistently------------[ cut here ]------------refcount_t underflow use-after-free.WARNING CPU 17 PID 1800359 at lib/refcount.c28 refcount_warn_saturate+0x9c/0xe0Workqueue nfsiod nfs_direct_write_schedule_work [nfs]RIP 0010refcount_warn_saturate+0x9c/0xe0PKRU 55555554Call Trace ? __warn+0x9f/0x130 ? refcount_warn_saturate+0x9c/0xe0 ? report_bug+0xcc/0x150 ? handle_bug+0x3d/0x70 ? exc_invalid_op+0x16/0x40 ? asm_exc_invalid_op+0x16/0x20 ? refcount_warn_saturate+0x9c/0xe0 nfs_direct_write_schedule_work+0x237/0x250 [nfs] process_one_work+0x12f/0x4a0 worker_thread+0x14e/0x3b0 ? ZSTD_getCParams_internal+0x220/0x220 kthread+0xdc/0x120 ? __btf_name_valid+0xa0/0xa0 ret_from_fork+0x1f/0x30This is because were completing the nfs_direct_request twice in a row.The source of this is when we have our commit requests to submit, weprocess them and send them off, and then in the completion path for thecommit requests we haveif (nfs_commit_end(cinfo.mds)) nfs_direct_write_complete(dreq)However since were submitting asynchronous requests we sometimes haveone that completes before we submit the next one, so we end up callingcomplete on the nfs_direct_request twice.The only other place we use nfs_generic_commit_list() is in__nfs_commit_inode, which wraps this call in anfs_commit_begin()nfs_commit_end()Which is a common pattern for this style of completion handling, onethat is also repeated in the direct code with get_dreq()/put_dreq()calls around where we process events as well as in the completion paths.Fix this by using the same pattern for the commit requests.Before with my 200 node rocksdb stress running this warning would popevery 10ish minutes. With my patch the stress test has been running forseveral hours without popping.",
    "keyphrases": {
        "rootcause": "The nfs_direct_request was being completed twice due to asynchronous commit requests completing out of order.",
        "weakness": "Use-after-free vulnerability due to double completion of nfs_direct_request.",
        "impact": "Kernel crash due to use-after-free.",
        "vector": "Network File System (NFS) direct writes with asynchronous commit requests.",
        "attacker": "Unlikely. This vulnerability can be triggered by a system running with a specific workload and doesn't have an external attacker.",
        "product": "Linux Kernel",
        "version": "Likely present in versions prior to the fix.",
        "component": "NFS direct write implementation."
    }
}
