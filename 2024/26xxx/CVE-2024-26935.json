{
    "cveId": "CVE-2024-26935",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved scsi core Fix unremoved procfs host directory regression Commit fc663711b944 (scsi core Remove the /proc/scsi/${proc_name} directory earlier) fixed a bug related to modules loading/unloading, by adding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led to a potential duplicate call to the hostdir_rm() routine, since its also called from scsi_host_dev_release(). That triggered a regression report, which was then fixed by commit be03df3d4bfe (scsi core Fix a procfs host directory removal regression). The fix just dropped the hostdir_rm() call from dev_release(). But it happens that this proc directory is created on scsi_host_alloc(), and that function pairs with scsi_host_dev_release(), while scsi_remove_host() pairs with scsi_add_host(). In other words, it seems the reason for removing the proc directory on dev_release() was meant to cover cases in which a SCSI host structure was allocated, but the call to scsi_add_host() didnt happen. And that pattern happens to exist in some error paths, for example. Syzkaller causes that by using USB raw gadget device, erroring on usb-storage driver, at usb_stor_probe2(). By checking that path, we can see that the BadDevice label leads to a scsi_host_put() after a SCSI host allocation, but theres no call to scsi_add_host() in such path. That leads to messages like this in dmesg (and a leak of the SCSI host proc structure) usb-storage",
    "keyphrases": {
        "rootcause": "potential duplicate call to the hostdir_rm() routine",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "scsi core"
    }
}
