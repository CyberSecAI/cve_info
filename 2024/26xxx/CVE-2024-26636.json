{
  "cveId": "CVE-2024-26636",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved llc make llc_ui_sendmsg() more robust against bonding changes syzbot was able to trick llc_ui_sendmsg(), allocating an skb with no headroom, but subsequently trying to push 14 bytes of Ethernet header [1] Like some others, llc_ui_sendmsg() releases the socket lock before calling sock_alloc_send_skb(). Then it acquires it again, but does not redo all the sanity checks that were performed. This fix - Uses LL_RESERVED_SPACE() to reserve space. - Check all conditions again after socket lock is held again. - Do not account Ethernet header for mtu limitation. [1] skbuff skb_under_panic textffff800088baa334 len1514 put14 headffff0000c9c37000 dataffff0000c9c36ff2 tail0x5dc end0x6c0 devbond0 kernel BUG at net/core/skbuff.c193 ! Internal error Oops - BUG 00000000f2000800 [#1] PREEMPT SMP Modules linked in CPU 0 PID 6875 Comm syz-executor.0 Not tainted 6.7.0-rc8-syzkaller-00101-g0802e17d9aca-dirty #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023 pstate 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc skb_panic net/core/skbuff.c189 [inline] pc skb_under_panic+0x13c/0x140 net/core/skbuff.c203 lr skb_panic net/core/skbuff.c189 [inline] lr skb_under_panic+0x13c/0x140 net/core/skbuff.c203 sp ffff800096f97000 x29 ffff800096f97010 x28 ffff80008cc8d668 x27 dfff800000000000 x26 ffff0000cb970c90 x25 00000000000005dc x24 ffff",
  "keyphrases": {
    "rootcause": "improper sanity checks",
    "weakness": "",
    "impact": [
      "Oops - BUG",
      "kernel BUG"
    ],
    "vector": "allocating an skb with no headroom",
    "attacker": "syzbot",
    "product": "Linux kernel",
    "version": "",
    "component": "llc_ui_sendmsg() in net/core/skbuff.c"
  },
  "mitreTechnicalImpacts": []
}