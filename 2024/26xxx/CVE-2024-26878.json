{
    "cveId": "CVE-2024-26878",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved quota Fix potential NULL pointer dereference Below race may cause NULL pointer dereference P1P2 dquot_free_inodequota_off drop_dquot_ref remove_dquot_ref dquots = i_dquot(inode) dquots = i_dquot(inode) srcu_read_lock dquots[cnt]) != NULL (1) dquots[type] = NULL (2) spin_lock(&dquots[cnt]->dq_dqb_lock) (3) .... If dquot_free_inode(or other routines) checks inodes quota pointers (1) before quota_off sets it to NULL(2) and use it (3) after that, NULL pointer dereference will be triggered. So lets fix it by using a temporary pointer to avoid this issue.",
    "keyphrases": {
        "rootcause": "NULL pointer dereference",
        "weakness": "improper use of srcu_read_lock",
        "impact": "NULL pointer dereference",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": [
            "dquot_free_inode",
            "quota_off"
        ]
    }
}
