{
    "cveId": "CVE-2024-26953",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net esp fix bad handling of pages from page_pool When the skb is reorganized during esp_output (!esp->inline), the pages coming from the original skb fragments are supposed to be released back to the system through put_page. But if the skb fragment pages are originating from a page_pool, calling put_page on them will trigger a page_pool leak which will eventually result in a crash. This leak can be easily observed when using CONFIG_DEBUG_VM and doing ipsec + gre (non offloaded) forwarding BUG Bad page state in process ksoftirqd/16 pfn1451b6 page00000000de2b8d32 refcount0 mapcount0 mapping0000000000000000 index0x1451b6000 pfn0x1451b6 flags 0x200000000000000(node=0|zone=2) page_type 0xffffffff() raw 0200000000000000 dead000000000040 ffff88810d23c000 0000000000000000 raw 00000001451b6000 0000000000000001 00000000ffffffff 0000000000000000 page dumped because page_pool leak Modules linked in ip_gre gre mlx5_ib mlx5_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink iptable_nat nf_nat xt_addrtype br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm ib_uverbs ib_core overlay zram zsmalloc fuse [last unloaded mlx5_core] CPU 16 PID 96 Comm ksoftirqd/16 Not tainted 6.8.0-rc4+ #22 Hardware name QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014 Call Trace <TA",
    "keyphrases": {
        "rootcause": "page_pool leak",
        "weakness": "",
        "impact": "crash",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
