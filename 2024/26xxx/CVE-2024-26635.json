{
    "cveId": "CVE-2024-26635",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved llc Drop support for ETH_P_TR_802_2. syzbot reported an uninit-value bug below. [0] llc supports ETH_P_802_2 (0x0004) and used to support ETH_P_TR_802_2 (0x0011), and syzbot abused the latter to trigger the bug. write$tun(r0, &(0x7f0000000040)={@val={0x0, 0x11}, @val, @mpls={[], @llc={@snap={0xaa, 0x1, ), 90e5dd}}}}, 0x16) llc_conn_handler() initialises local variables {saddr,daddr}.mac based on skb in llc_pdu_decode_sa()/llc_pdu_decode_da() and passes them to __llc_lookup(). However, the initialisation is done only when skb->protocol is htons(ETH_P_802_2), otherwise, __llc_lookup_established() and __llc_lookup_listener() will read garbage. The missing initialisation existed prior to commit 211ed865108e (net delete all instances of special processing for token ring). It removed the part to kick out the token ring stuff but forgot to close the door allowing ETH_P_TR_802_2 packets to sneak into llc_rcv(). Lets remove llc_tr_packet_type and complete the deprecation. [0] BUG KMSAN uninit-value in __llc_lookup_established+0xe9d/0xf90 __llc_lookup_established+0xe9d/0xf90 __llc_lookup net/llc/llc_conn.c611 [inline] llc_conn_handler+0x4bd/0x1360 net/llc/llc_conn.c791 llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c206 __netif_receive_skb_one_core net/core/dev.c5527 [inline] __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c5641 netif_receive_skb_internal net/core/dev.c5727 [inline] netif_rec"
}
