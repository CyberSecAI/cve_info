{
    "cveId": "CVE-2024-26635",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedllc Drop support for ETH_P_TR_802_2.syzbot reported an uninit-value bug below. [0]llc supports ETH_P_802_2 (0x0004) and used to support ETH_P_TR_802_2(0x0011), and syzbot abused the latter to trigger the bug. write$tun(r0, &(0x7f0000000040)={@val={0x0, 0x11}, @val, @mpls={[], @llc={@snap={0xaa, 0x1, ), 90e5dd}}}}, 0x16)llc_conn_handler() initialises local variables {saddr,daddr}.macbased on skb in llc_pdu_decode_sa()/llc_pdu_decode_da() and passesthem to __llc_lookup().However, the initialisation is done only when skb->protocol ishtons(ETH_P_802_2), otherwise, __llc_lookup_established() and__llc_lookup_listener() will read garbage.The missing initialisation existed prior to commit 211ed865108e(net delete all instances of special processing for token ring).It removed the part to kick out the token ring stuff but forgot toclose the door allowing ETH_P_TR_802_2 packets to sneak into llc_rcv().Lets remove llc_tr_packet_type and complete the deprecation.[0]BUG KMSAN uninit-value in __llc_lookup_established+0xe9d/0xf90 __llc_lookup_established+0xe9d/0xf90 __llc_lookup net/llc/llc_conn.c611 [inline] llc_conn_handler+0x4bd/0x1360 net/llc/llc_conn.c791 llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c206 __netif_receive_skb_one_core net/core/dev.c5527 [inline] __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c5641 netif_receive_skb_internal net/core/dev.c5727 [inline] netif_receive_skb+0x58/0x660 net/core/dev.c5786 tun_rx_batched+0x3ee/0x980 drivers/net/tun.c1555 tun_get_user+0x53af/0x66d0 drivers/net/tun.c2002 tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c2048 call_write_iter include/linux/fs.h2020 [inline] new_sync_write fs/read_write.c491 [inline] vfs_write+0x8ef/0x1490 fs/read_write.c584 ksys_write+0x20f/0x4c0 fs/read_write.c637 __do_sys_write fs/read_write.c649 [inline] __se_sys_write fs/read_write.c646 [inline] __x64_sys_write+0x93/0xd0 fs/read_write.c646 do_syscall_x64 arch/x86/entry/common.c51 [inline] do_syscall_64+0x44/0x110 arch/x86/entry/common.c82 entry_SYSCALL_64_after_hwframe+0x63/0x6bLocal variable daddr created at llc_conn_handler+0x53/0x1360 net/llc/llc_conn.c783 llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c206CPU 1 PID 5004 Comm syz-executor994 Not tainted 6.6.0-syzkaller-14500-g1c41041124bd #0Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023",
    "keyphrases": {
        "rootcause": "The llc_conn_handler() function initializes local variables {saddr, daddr}.mac based on skb in llc_pdu_decode_sa()/llc_pdu_decode_da() only when skb->protocol is htons(ETH_P_802_2). When skb->protocol is ETH_P_TR_802_2, those variables are not initialized and read as garbage in __llc_lookup_established() and __llc_lookup_listener().",
        "weakness": "Missing initialization of local variables in llc_conn_handler() when processing ETH_P_TR_802_2 packets.",
        "impact": "Uninitialized memory read, leading to a kernel crash.",
        "vector": "Sending an ETH_P_TR_802_2 packet to the affected system.",
        "attacker": "syzbot",
        "product": "Linux Kernel",
        "version": "6.6.0-syzkaller-14500-g1c41041124bd",
        "component": "llc"
    }
}
