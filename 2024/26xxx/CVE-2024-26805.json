{
    "cveId": "CVE-2024-26805",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netlink Fix kernel-infoleak-after-free in __skb_datagram_iter syzbot reported the following uninit-value access issue [1] netlink_to_full_skb() creates a new `skb` and puts the `skb->data` passed as a 1st arg of netlink_to_full_skb() onto new `skb`. The data size is specified as `len` and passed to skb_put_data(). This `len` is based on `skb->end` that is not data offset but buffer offset. The `skb->end` contains data and tailroom. Since the tailroom is not initialized when the new `skb` created, KMSAN detects uninitialized memory area when copying the data. This patch resolved this issue by correct the len from `skb->end` to `skb->len`, which is the actual data offset. BUG KMSAN kernel-infoleak-after-free in instrument_copy_to_user include/linux/instrumented.h114 [inline] BUG KMSAN kernel-infoleak-after-free in copy_to_user_iter lib/iov_iter.c24 [inline] BUG KMSAN kernel-infoleak-after-free in iterate_ubuf include/linux/iov_iter.h29 [inline] BUG KMSAN kernel-infoleak-after-free in iterate_and_advance2 include/linux/iov_iter.h245 [inline] BUG KMSAN kernel-infoleak-after-free in iterate_and_advance include/linux/iov_iter.h271 [inline] BUG KMSAN kernel-infoleak-after-free in _copy_to_iter+0x364/0x2520 lib/iov_iter.c186 instrument_copy_to_user include/linux/instrumented.h114 [inline] copy_to_user_iter lib/iov_iter.c24 [inline] iterate_ubuf include/linux/iov_iter.h29 [inline] itera",
    "keyphrases": {
        "rootcause": "uninitialized memory area",
        "weakness": "",
        "impact": "kernel-infoleak-after-free",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "__skb_datagram_iter"
    }
}
