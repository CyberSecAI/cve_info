{
    "cveId": "CVE-2024-26733",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedarp Prevent overflow in arp_req_get().syzkaller reported an overflown write in arp_req_get(). [0]When ioctl(SIOCGARP) is issued, arp_req_get() looks up an neighbourentry and copies neigh->ha to struct arpreq.arp_ha.sa_data.The arp_ha here is struct sockaddr, not struct sockaddr_storage, sothe sa_data buffer is just 14 bytes.In the splat below, 2 bytes are overflown to the next int field,arp_flags. We initialise the field just after the memcpy(), so itsnot a problem.However, when dev->addr_len is greater than 22 (e.g. MAX_ADDR_LEN),arp_netmask is overwritten, which could be set as htonl(0xFFFFFFFFUL)in arp_ioctl() before calling arp_req_get().To avoid the overflow, lets limit the max length of memcpy().Note that commit b5f0de6df6dc (net dev Convert sa_data to flexiblearray in struct sockaddr) just silenced syzkaller.[0]memcpy detected field-spanning write (size 16) of single field r->arp_ha.sa_data at net/ipv4/arp.c1128 (size 14)WARNING CPU 0 PID 144638 at net/ipv4/arp.c1128 arp_req_get+0x411/0x4a0 net/ipv4/arp.c1128Modules linked inCPU 0 PID 144638 Comm syz-executor.4 Not tainted 6.1.74 #31Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-5 04/01/2014RIP 0010arp_req_get+0x411/0x4a0 net/ipv4/arp.c1128Code fd ff ff e8 41 42 de fb b9 0e 00 00 00 4c 89 fe 48 c7 c2 20 6d ab 87 48 c7 c7 80 6d ab 87 c6 05 25 af 72 04 01 e8 5f 8d ad fb 0b e9 6c fd ff ff e8 13 42 de fb be 03 00 00 00 4c 89 e7 e8 a6RSP 0018ffffc900050b7998 EFLAGS 00010286RAX 0000000000000000 RBX ffff88803a815000 RCX 0000000000000000RDX 0000000000000000 RSI ffffffff8641a44a RDI 0000000000000001RBP ffffc900050b7a98 R08 0000000000000001 R09 0000000000000000R10 0000000000000000 R11 203a7970636d656d R12 ffff888039c54000R13 1ffff92000a16f37 R14 ffff88803a815084 R15 0000000000000010FS 00007f172bf306c0(0000) GSffff88805aa00000(0000) knlGS0000000000000000CS 0010 DS 0000 ES 0000 CR0 0000000080050033CR2 00007f172b3569f0 CR3 0000000057f12005 CR4 0000000000770ef0DR0 0000000000000000 DR1 0000000000000000 DR2 0000000000000000DR3 0000000000000000 DR6 00000000fffe0ff0 DR7 0000000000000400PKRU 55555554Call Trace arp_ioctl+0x33f/0x4b0 net/ipv4/arp.c1261 inet_ioctl+0x314/0x3a0 net/ipv4/af_inet.c981 sock_do_ioctl+0xdf/0x260 net/socket.c1204 sock_ioctl+0x3ef/0x650 net/socket.c1321 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c870 [inline] __se_sys_ioctl fs/ioctl.c856 [inline] __x64_sys_ioctl+0x18e/0x220 fs/ioctl.c856 do_syscall_x64 arch/x86/entry/common.c51 [inline] do_syscall_64+0x37/0x90 arch/x86/entry/common.c81 entry_SYSCALL_64_after_hwframe+0x64/0xceRIP 00330x7f172b262b8dCode 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48RSP 002b00007f172bf300b8 EFLAGS 00000246 ORIG_RAX 0000000000000010RAX ffffffffffffffda RBX 00007f172b3abf80 RCX 00007f172b262b8dRDX 0000000020000000 RSI 0000000000008954 RDI 0000000000000003RBP 00007f172b2d3493 R08 0000000000000000 R09 0000000000000000R10 0000000000000000 R11 0000000000000246 R12 0000000000000000R13 000000000000000b R14 00007f172b3abf80 R15 00007f172bf10000",
    "keyphrases": {
        "rootcause": "The `memcpy` in `arp_req_get()` copies `neigh->ha` to `struct arpreq.arp_ha.sa_data` which is 14 bytes long. When `dev->addr_len` is greater than 22, it overflows into the adjacent `arp_netmask` field. ",
        "weakness": "The `sa_data` buffer in `struct sockaddr` is too small for some hardware address lengths.",
        "impact": "Overwriting of the `arp_netmask` field, potentially causing unexpected behavior or information disclosure.",
        "vector": "Issuing ioctl(SIOCGARP) with a network device where `dev->addr_len` is greater than 22.",
        "attacker": "A local user with the ability to issue ioctl calls.",
        "product": "Linux Kernel",
        "version": "6.1.74",
        "component": "net/ipv4/arp.c"
    }
}
