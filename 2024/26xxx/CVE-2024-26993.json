{
    "cveId": "CVE-2024-26993",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved fs sysfs Fix reference leak in sysfs_break_active_protection() The sysfs_break_active_protection() routine has an obvious reference leak in its error path. If the call to kernfs_find_and_get() fails then kn will be NULL, so the companion sysfs_unbreak_active_protection() routine wont get called (and would only cause an access violation by trying to dereference kn->parent if it was called). As a result, the reference to kobj acquired at the start of the function will never be released. Fix the leak by adding an explicit kobject_put() call when kn is NULL.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "reference leak",
        "impact": "access violation",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "sysfs_break_active_protection()"
    }
}
