{
    "cveId": "CVE-2024-26674",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved x86/lib Revert to _ASM_EXTABLE_UA() for {get,put}_user() fixups During memory error injection test on kernels >= v6.4, the kernel panics like below. However, this issue couldnt be reproduced on kernels {__get_user_nocheck_4+0x6/0x20} mce [Hardware Error] TSC 411a93533ed ADDR 346a8730040 MISC 86 mce [Hardware Error] PROCESSOR 0a06d0 TIME 1706000767 SOCKET 1 APIC 211 microcode 80001490 mce [Hardware Error] Run the above through mcelog --ascii mce [Hardware Error] Machine check Data load in unrecoverable area of kernel Kernel panic - not syncing Fatal local machine check The MCA code can recover from an in-kernel #MC if the fixup type is EX_TYPE_UACCESS, explicitly indicating that the kernel is attempting to access userspace memory. However, if the fixup type is EX_TYPE_DEFAULT the only thing that is raised for an in-kernel #MC is a panic. ex_handler_uaccess() would warn if users gave a non-canonical addresses (with bit 63 clear) to {get, put}_user(), which was unexpected. Therefore, commit b19b74bc99b1 (x86/mm Rework address range check in get_user() and put_user()) replaced _ASM_EXTABLE_UA() with _ASM_EXTABLE() for {get, put}_user() fixups. However, the new fixup type EX_TYPE_DEFAULT results in a panic. Commit 6014bc27561f (",
    "keyphrases": {
        "rootcause": "memory error injection test on kernels >= v6.4",
        "weakness": "",
        "impact": "kernel panic",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": ">= v6.4",
        "component": ""
    }
}
