{
    "cveId": "CVE-2024-26731",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved bpf, sockmap Fix NULL pointer dereference in sk_psock_verdict_data_ready() syzbot reported the following NULL pointer dereference issue [1] BUG kernel NULL pointer dereference, address 0000000000000000 [...] RIP 00100x0 [...] Call Trace sk_psock_verdict_data_ready+0x232/0x340 net/core/skmsg.c1230 unix_stream_sendmsg+0x9b4/0x1230 net/unix/af_unix.c2293 sock_sendmsg_nosec net/socket.c730 [inline] __sock_sendmsg+0x221/0x270 net/socket.c745 ____sys_sendmsg+0x525/0x7d0 net/socket.c2584 ___sys_sendmsg net/socket.c2638 [inline] __sys_sendmsg+0x2b0/0x3a0 net/socket.c2667 do_syscall_64+0xf9/0x240 entry_SYSCALL_64_after_hwframe+0x6f/0x77 If sk_psock_verdict_data_ready() and sk_psock_stop_verdict() are called concurrently, psock->saved_data_ready can be NULL, causing the above issue. This patch fixes this issue by calling the appropriate data ready function using the sk_psock_data_ready() helper and protecting it from concurrency with sk->sk_callback_lock.",
    "keyphrases": {
        "rootcause": "NULL pointer dereference",
        "weakness": "",
        "impact": "",
        "vector": "calling sk_psock_verdict_data_ready() and sk_psock_stop_verdict() concurrently",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "bpf, sockmap"
    }
}
