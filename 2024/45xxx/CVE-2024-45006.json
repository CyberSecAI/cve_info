{
    "cveId": "CVE-2024-45006",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved xhci Fix Panther point NULL pointer deref at full-speed re-enumeration re-enumerating full-speed devices after a failed address device command can trigger a NULL pointer dereference. Full-speed devices may need to reconfigure the endpoint 0 Max Packet Size value during enumeration. Usb core calls usb_ep0_reinit() in this case, which ends up calling xhci_configure_endpoint(). On Panther point xHC the xhci_configure_endpoint() function will additionally check and reserve bandwidth in software. Other hosts do this in hardware If xHC address device command fails then a new xhci_virt_device structure is allocated as part of re-enabling the slot, but the bandwidth table pointers are not set up properly here. This triggers the NULL pointer dereference the next time usb_ep0_reinit() is called and xhci_configure_endpoint() tries to check and reserve bandwidth [46710.713538] usb 3-1 new full-speed USB device number 5 using xhci_hcd [46710.713699] usb 3-1 Device not responding to setup address. [46710.917684] usb 3-1 Device not responding to setup address. [46711.125536] usb 3-1 device not accepting address 5, error -71 [46711.125594] BUG kernel NULL pointer dereference, address 0000000000000008 [46711.125600] #PF supervisor read access in kernel mode [46711.125603] #PF error_code(0x0000) - not-present page [46711.125606] PGD 0 P4D 0 [46711.125610] Oops Oops 0000 [#1] PREEMPT SMP PTI [46711.125615] CPU",
    "keyphrases": {
        "rootcause": "NULL pointer dereference",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "xhci Fix Panther point"
    }
}
