{
    "cveId": "CVE-2024-50303",
    "version": "1.0.0",
    "timestamp": "2024-12-17T08:36:27.567979+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved resource,kexec walk_system_ram_res_rev must retain resource flags walk_system_ram_res_rev() erroneously discards resource flags when passing the information to the callback. This causes systems with IORESOURCE_SYSRAM_DRIVER_MANAGED memory to have these resources selected during kexec to store kexec buffers if that memory happens to be at placed above normal system ram. This leads to undefined behavior after reboot. If the kexec buffer is never touched, nothing happens. If the kexec buffer is touched, it could lead to a crash (like below) or undefined behavior. Tested on a system with CXL memory expanders with driver managed memory, TPM enabled, and CONFIG_IMA_KEXEC=y. Adding printks showed the flags were being discarded and as a result the check for IORESOURCE_SYSRAM_DRIVER_MANAGED passes. find_next_iomem_res name(System RAM (kmem)) start(10000000000) end(1034fffffff) flags(83000200) locate_mem_hole_top_down start(10000000000) end(1034fffffff) flags(0) [.] BUG unable to handle page fault for address ffff89834ffff000 [.] #PF supervisor read access in kernel mode [.] #PF error_code(0x0000) - not-present page [.] PGD c04c8bf067 P4D c04c8bf067 PUD c04c8be067 PMD 0 [.] Oops 0000",
    "keyphrases": {
        "rootcause": "kexec walk_system_ram_res_rev() erroneously discards resource flags when passing the information to the callback",
        "weakness": "",
        "impact": "undefined behavior",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "kexec walk_system_ram_res_rev()"
    }
}
