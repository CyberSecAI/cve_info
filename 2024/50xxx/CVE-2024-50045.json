{
    "cveId": "CVE-2024-50045",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved netfilter br_netfilter fix panic with metadata_dst skb Fix a kernel panic in the br_netfilter module when sending untagged traffic via a VxLAN device. This happens during the check for fragmentation in br_nf_dev_queue_xmit. It is dependent on 1) the br_netfilter module being loaded 2) net.bridge.bridge-nf-call-iptables set to 1 3) a bridge with a VxLAN (single-vxlan-device) netdevice as a bridge port 4) untagged frames with size higher than the VxLAN MTU forwarded/flooded When forwarding the untagged packet to the VxLAN bridge port, before the netfilter hooks are called, br_handle_egress_vlan_tunnel is called and changes the skb_dst to the tunnel dst. The tunnel_dst is a metadata type of dst, i.e., skb_valid_dst(skb) is false, and metadata->dst.dev is NULL. Then in the br_netfilter hooks, in br_nf_dev_queue_xmit, theres a check for frames that needs to be fragmented frames with higher MTU than the VxLAN device end up calling br_nf_ip_fragment, which in turns call ip_skb_dst_mtu. The ip_dst_mtu tries to use the skb_dst(skb) as if it was a valid dst with valid dst->dev, thus the crash. This case was never supported in the first place, so drop the packet instead. PING 10.0.0.2 (10.0.0.2) from 0.0.0.0 h1-eth0 2000(2028) bytes of data. [ 176.291791] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000110 [ 176.292101] Mem abort info [ 176.292184] ESR = 0x00000000",
    "keyphrases": {
        "rootcause": "NULL pointer dereference",
        "weakness": "",
        "impact": "kernel panic",
        "vector": "sending untagged traffic via a VxLAN device",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "br_netfilter module"
    }
}
