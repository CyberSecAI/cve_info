{
    "cveId": "CVE-2024-50044",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved Bluetooth RFCOMM FIX possible deadlock in rfcomm_sk_state_change rfcomm_sk_state_change attempts to use sock_lock so it must never be called with it locked but rfcomm_sock_ioctl always attempt to lock it causing the following trace ====================================================== WARNING possible circular locking dependency detected 6.8.0-syzkaller-08951-gfe46a7dd189e #0 Not tainted ------------------------------------------------------ syz-executor386/5093 is trying to acquire lock ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{00}, at lock_sock include/net/sock.h1671 [inline] ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{00}, at rfcomm_sk_state_change+0x5b/0x310 net/bluetooth/rfcomm/sock.c73 but task is already holding lock ffff88807badfd28 (&d->lock){+.+.}-{33}, at __rfcomm_dlc_close+0x226/0x6a0 net/bluetooth/rfcomm/core.c491",
    "keyphrases": {
        "rootcause": "circular locking dependency",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.8.0-syzkaller-08951-gfe46a7dd189e",
        "component": "Bluetooth RFCOMM"
    }
}
