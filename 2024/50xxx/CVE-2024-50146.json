{
    "cveId": "CVE-2024-50146",
    "version": "1.0.0",
    "timestamp": "2024-12-18T22:42:50.929578+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net/mlx5e Dont call cleanup on profile rollback failure When profile rollback fails in mlx5e_netdev_change_profile, the netdev profile var is left set to NULL. Avoid a crash when unloading the driver by not calling profile->cleanup in such a case. This was encountered while testing, with the original trigger that the wq rescuer thread creation got interrupted (presumably due to Ctrl+C-ing modprobe), which gets converted to ENOMEM (-12) by mlx5e_priv_init, the profile rollback also fails for the same reason (signal still active) so the profile is left as NULL, leading to a crash later in _mlx5e_remove. [ 732.473932] mlx5_core 00000800.1 E-Switch Unload vfs mode(OFFLOADS), nvfs(2), necvfs(0), active vports(2) [ 734.525513] workqueue Failed to create a rescuer kthread for wq mlx5e -EINTR [ 734.557372] mlx5_core 00000800.1 mlx5e_netdev_init_profile6235(pid 6086) mlx5e_priv_init failed, err=-12 [ 734.559187] mlx5_core 00000800.1 eth3 mlx5e_netdev_change_profile new profile init failed, -12 [ 734.560153] workqueue Failed to create a rescuer kthread for wq mlx5e -EINTR [ 734.589378] mlx5_core 00000800.1 mlx5e_netdev_init_profile6235(pid 6086) mlx5e_priv_init failed, err=-12 [ 734.591136] mlx5_core 00000800.1 eth3 mlx5e_netdev_change_profile failed to rollback to orig profile, -12 [ 745.537492]",
    "keyphrases": {
        "rootcause": "netdev profile var is left set to NULL",
        "weakness": "",
        "impact": "crash",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "mlx5e_netdev_change_profile"
    }
}
