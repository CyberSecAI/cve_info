{
    "cveId": "CVE-2024-36000",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved mm/hugetlb fix missing hugetlb_lock for resv uncharge There is a recent report on UFFDIO_COPY over hugetlb https//lore.kernel.org/all/000000000000ee06de0616177560@google.com/ 350lockdep_assert_held(&hugetlb_lock) Should be an issue in hugetlb but triggered in an userfault context, where it goes into the unlikely path where two threads modifying the resv map together. Mike has a fix in that path for resv uncharge but it looks like the locking criteria was overlooked hugetlb_cgroup_uncharge_folio_rsvd() will update the cgroup pointer, so it requires to be called with the lock held.",
    "keyphrases": {
        "rootcause": "missing hugetlb_lock for resv uncharge",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "mm/hugetlb"
    }
}
