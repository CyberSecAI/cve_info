{
    "cveId": "CVE-2024-36963",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved tracefs Reset permissions on remount if permissions are options Theres an inconsistency with the way permissions are handled in tracefs. Because the permissions are generated when accessed, they default to the root inodes permission if they were never set by the user. If the user sets the permissions, then a flag is set and the permissions are saved via the inode (for tracefs files) or an internal attribute field (for eventfs). But if a remount happens that specify the permissions, all the files that were not changed by the user gets updated, but the ones that were are not. If the user were to remount the file system with a given permission, then all files and directories within that file system should be updated. This can cause security issues if a files permission was updated but the admin forgot about it. They could incorrectly think that remounting with permissions set would update all files, but miss some. For example # cd /sys/kernel/tracing # chgrp 1002 current_tracer # ls -l [..] -rw-r----- 1 root root 0 May 1 2125 buffer_size_kb -rw-r----- 1 root root 0 May 1 2125 buffer_subbuf_size_kb -r--r----- 1 root root 0 May 1 2125 buffer_total_size_kb -rw-r----- 1 root lkp 0 May 1 2125 current_tracer -rw-r----- 1 root root 0 May 1 2125 dynamic_events -r--r----- 1 root root 0 May 1 2125 dyn_ftrace_total_info -r--r----- 1 root root 0 May 1 2125 enabled_functions Where",
    "keyphrases": {
        "rootcause": "inconsistency in way permissions are handled in tracefs",
        "weakness": "",
        "impact": "security issues if a files permission was updated but the admin forgot about it",
        "vector": "tracefs remount with permissions set",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
