{
    "cveId": "CVE-2024-36891",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved maple_tree fix mas_empty_area_rev() null pointer dereference Currently the code calls mas_start() followed by mas_data_end() if the maple state is MA_START, but mas_start() may return with the maple state node == NULL. This will lead to a null pointer dereference when checking information in the NULL node, which is done in mas_data_end(). Avoid setting the offset if there is no node by waiting until after the maple state is checked for an empty or single entry state. A user could trigger the events to cause a kernel oops by unmapping all vmas to produce an empty maple tree, then mapping a vma that would cause the scenario described above.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "null pointer dereference",
        "impact": "kernel oops",
        "vector": "unmapping all vmas to produce an empty maple tree, then mapping a vma",
        "attacker": "user",
        "product": "Linux kernel",
        "version": "",
        "component": "maple_tree"
    }
}
