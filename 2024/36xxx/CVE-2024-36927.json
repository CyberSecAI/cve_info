{
  "cveId": "CVE-2024-36927",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved ipv4 Fix uninit-value access in __ip_make_skb() KMSAN reported uninit-value access in __ip_make_skb() [1]. __ip_make_skb() tests HDRINCL to know if the skb has icmphdr. However, HDRINCL can cause a race condition. If calling setsockopt(2) with IP_HDRINCL changes HDRINCL while __ip_make_skb() is running, the function will access icmphdr in the skb even if it is not included. This causes the issue reported by KMSAN. Check FLOWI_FLAG_KNOWN_NH on fl4->flowi4_flags instead of testing HDRINCL on the socket. Also, fl4->fl4_icmp_type and fl4->fl4_icmp_code are not initialized. These are union in struct flowi4 and are implicitly initialized by flowi4_init_output(), but we should not rely on specific union layout. Initialize these explicitly in raw_sendmsg(). [1] BUG KMSAN uninit-value in __ip_make_skb+0x2b74/0x2d20 net/ipv4/ip_output.c1481 __ip_make_skb+0x2b74/0x2d20 net/ipv4/ip_output.c1481 ip_finish_skb include/net/ip.h243 [inline] ip_push_pending_frames+0x4c/0x5c0 net/ipv4/ip_output.c1508 raw_sendmsg+0x2381/0x2690 net/ipv4/raw.c654 inet_sendmsg+0x27b/0x2a0 net/ipv4/af_inet.c851 sock_sendmsg_nosec net/socket.c730 [inline] __sock_sendmsg+0x274/0x3c0 net/socket.c745 __sys_sendto+0x62c/0x7b0 net/socket.c2191 __do_sys_sendto net/socket.c2203 [inline] __se_sys_sendto net/socket.c2199 [inline] __x64_sys_sendto+0x130/0x200 net/socket.c2199 do_syscall_64+0xd8/0x1f0 arch/x86/entry/common.c8",
  "keyphrases": {
    "rootcause": [
      "race condition",
      "uninitialized values"
    ],
    "weakness": "",
    "impact": "information leak",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "__ip_make_skb()"
  },
  "mitreTechnicalImpacts": []
}