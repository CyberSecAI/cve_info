{
    "cveId": "CVE-2024-36899",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved gpiolib cdev Fix use after free in lineinfo_changed_notify The use-after-free issue occurs as follows when the GPIO chip device file is being closed by invoking gpio_chrdev_release(), watched_lines is freed by bitmap_free(), but the unregistration of lineinfo_changed_nb notifier chain failed due to waiting write rwsem. Additionally, one of the GPIO chips lines is also in the release process and holds the notifier chains read rwsem. Consequently, a race condition leads to the use-after-free of watched_lines. Here is the typical stack when issue happened [free] gpio_chrdev_release() --> bitmap_free(cdev->watched_lines) blocking_notifier_chain_unregister() --> down_write(&nh->rwsem) __down_write_common() --> rwsem_down_write_slowpath() --> schedule_preempt_disabled() --> schedule() [use] st54spi_gpio_dev_release() --> gpio_free() --> gpiod_free() --> gpiod_free_commit() --> gpiod_line_state_notify() --> blocking_notifier_call_chain() --> down_read(&nh->rwsem) notifier_call_chain() --> lineinfo_changed_notify() --> test_bit(xxxx, cdev->watched_lines) <-- use after free The side effect of the use-after-free issue is that a GPIO line event i",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "use-after-free",
        "impact": "use-after-free",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "gpiolib cdev"
    }
}
