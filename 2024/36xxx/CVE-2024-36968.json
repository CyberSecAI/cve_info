{
    "cveId": "CVE-2024-36968",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved Bluetooth L2CAP Fix div-by-zero in l2cap_le_flowctl_init() l2cap_le_flowctl_init() can cause both div-by-zero and an integer overflow since hdev->le_mtu may not fall in the valid range. Move MTU from hci_dev to hci_conn to validate MTU and stop the connection process earlier if MTU is invalid. Also, add a missing validation in read_buffer_size() and make it return an error value if the validation fails. Now hci_conn_add() returns ERR_PTR() as it can fail due to the both a kzalloc failure and invalid MTU value. divide error 0000 [#1] PREEMPT SMP KASAN NOPTI CPU 0 PID 67 Comm kworker/u50 Tainted G W 6.9.0-rc5+ #20 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014 Workqueue hci0 hci_rx_work RIP 0010l2cap_le_flowctl_init+0x19e/0x3f0 net/bluetooth/l2cap_core.c547 Code e8 17 17 0c 00 66 41 89 9f 84 00 00 00 bf 01 00 00 00 41 b8 02 00 00 00 4c 89 fe 4c 89 e2 89 d9 e8 27 17 0c 00 44 89 f0 31 d2 f7 f3 89 c3 ff c3 4d 8d b7 88 00 00 00 4c 89 f0 48 c1 e8 03 42 RSP 0018ffff88810bc0f858 EFLAGS 00010246 RAX 00000000000002a0 RBX 0000000000000000 RCX dffffc0000000000 RDX 0000000000000000 RSI ffff88810bc0f7c0 RDI ffffc90002dcb66f RBP ffff88810bc0f880 R08 aa69db2dda70ff01 R09 0000ffaaaaaaaaaa R10 0084000000ffaaaa R11 0000000000000000 R12 ffff88810d65a084 R13 dffffc0000000000 R14 00000000000002a0 R15 ffff88810d65a000 FS 0000000000000000(0000)",
    "keyphrases": {
        "rootcause": "",
        "weakness": [
            "div-by-zero",
            "integer overflow"
        ],
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "Bluetooth L2CAP"
    }
}
