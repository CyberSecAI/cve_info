{
  "cveId": "CVE-2024-35827",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved io_uring/net fix overflow check in io_recvmsg_mshot_prep() The controllen variable is type size_t (unsigned long). Casting it to int could lead to an integer underflow. The check_add_overflow() function considers the type of the destination which is type int. If we add two positive values and the result cannot fit in an integer then thats counted as an overflow. However, if we cast controllen to an int and it turns negative, then negative values *can* fit into an int type so there is no overflow. Good 100 + (unsigned long)-4 = 96 <-- overflow Bad 100 + (int)-4 = 96 <-- no overflow I deleted the cast of the sizeof() as well. Thats not a bug but the cast is unnecessary.",
  "keyphrases": {
    "rootcause": "integer underflow",
    "weakness": "overflow",
    "impact": "",
    "vector": "check_add_overflow() function considers the type of the destination which is type int",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "io_uring/net fix overflow check in io_recvmsg_mshot_prep()"
  },
  "mitreTechnicalImpacts": []
}