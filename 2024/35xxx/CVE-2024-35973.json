{
    "cveId": "CVE-2024-35973",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved geneve fix header validation in geneve[6]_xmit_skb syzbot is able to trigger an uninit-value in geneve_xmit() [1] Problem While most ip tunnel helpers (like ip_tunnel_get_dsfield()) uses skb_protocol(skb, true), pskb_inet_may_pull() is only using skb->protocol. If anything else than ETH_P_IPV6 or ETH_P_IP is found in skb->protocol, pskb_inet_may_pull() does nothing at all. If a vlan tag was provided by the caller (af_packet in the syzbot case), the network header might not point to the correct location, and skb linear part could be smaller than expected. Add skb_vlan_inet_prepare() to perform a complete mac validation. Use this in geneve for the moment, I suspect we need to adopt this more broadly. v4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest - Only call __vlan_get_protocol() for vlan types. v2,v3 - Addressed Sabrina comments on v1 and v2 [1] BUG KMSAN uninit-value in geneve_xmit_skb drivers/net/geneve.c910 [inline] BUG KMSAN uninit-value in geneve_xmit+0x302d/0x5420 drivers/net/geneve.c1030 geneve_xmit_skb drivers/net/geneve.c910 [inline] geneve_xmit+0x302d/0x5420 drivers/net/geneve.c1030 __netdev_start_xmit include/linux/netdevice.h4903 [inline] netdev_start_xmit include/linux/netdevice.h4917 [inline] xmit_one net/core/dev.c3531 [inline] dev_hard_start_xmit+0x247/0xa20 net/core/dev.c3547 __dev_queue_xmit+0x348d/0x52c0 net/core/dev.c4335 dev_queue",
    "keyphrases": {
        "rootcause": "uninit-value in geneve_xmit_skb",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "geneve"
    }
}
