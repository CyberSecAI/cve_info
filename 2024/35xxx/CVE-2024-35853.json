{
    "cveId": "CVE-2024-35853",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved mlxsw spectrum_acl_tcam Fix memory leak during rehash The rehash delayed work migrates filters from one region to another. This is done by iterating over all chunks (all the filters with the same priority) in the region and in each chunk iterating over all the filters. If the migration fails, the code tries to migrate the filters back to the old region. However, the rollback itself can also fail in which case another migration will be erroneously performed. Besides the fact that this ping pong is not a very good idea, it also creates a problem. Each virtual chunk references two chunks The currently used one (vchunk->chunk) and a backup (vchunk->chunk2). During migration the first holds the chunk we want to migrate filters to and the second holds the chunk we are migrating filters from. The code currently assumes - but does not verify - that the backup chunk does not exist (NULL) if the currently used chunk does not reference the target region. This assumption breaks when we are trying to rollback a rollback, resulting in the backup chunk being overwritten and leaked [1]. Fix by not rolling back a failed rollback and add a warning to avoid future cases. [1] WARNING CPU 5 PID 1063 at lib/parman.c291 parman_destroy+0x17/0x20 Modules linked in CPU 5 PID 1063 Comm kworker/511 Tainted G W 6.9.0-rc2-custom-00784-gc6a05c468a0b #14 Hardware name Mellanox Technologies Ltd. MSN37",
    "keyphrases": {
        "rootcause": "improper assumption about backup chunk existence",
        "weakness": "memory leak",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.9.0-rc2-custom-00784-gc6a05c468a0b",
        "component": "mlxsw spectrum_acl_tcam"
    }
}
