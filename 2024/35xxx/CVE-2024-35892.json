{
    "cveId": "CVE-2024-35892",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvednet/sched fix lockdep splat in qdisc_tree_reduce_backlog()qdisc_tree_reduce_backlog() is called with the qdisc lock held,not RTNL.We must use qdisc_lookup_rcu() instead of qdisc_lookup()syzbot reportedWARNING suspicious RCU usage6.1.74-syzkaller #0 Not tainted-----------------------------net/sched/sch_api.c305 suspicious rcu_dereference_protected() usage!other info that might help us debug thisrcu_scheduler_active = 2, debug_locks = 13 locks held by udevd/1142 #0 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at rcu_lock_acquire include/linux/rcupdate.h306 [inline] #0 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at rcu_read_lock include/linux/rcupdate.h747 [inline] #0 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at net_tx_action+0x64a/0x970 net/core/dev.c5282 #1 ffff888171861108 (&sch->q.lock){+.-.}-{22}, at spin_lock include/linux/spinlock.h350 [inline] #1 ffff888171861108 (&sch->q.lock){+.-.}-{22}, at net_tx_action+0x754/0x970 net/core/dev.c5297 #2 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at rcu_lock_acquire include/linux/rcupdate.h306 [inline] #2 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at rcu_read_lock include/linux/rcupdate.h747 [inline] #2 ffffffff87c729a0 (rcu_read_lock){....}-{12}, at qdisc_tree_reduce_backlog+0x84/0x580 net/sched/sch_api.c792stack backtraceCPU 1 PID 1142 Comm udevd Not tainted 6.1.74-syzkaller #0Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024Call Trace [] __dump_stack lib/dump_stack.c88 [inline] [] dump_stack_lvl+0x1b1/0x28f lib/dump_stack.c106 [] dump_stack+0x15/0x1e lib/dump_stack.c113 [] lockdep_rcu_suspicious+0x1b9/0x260 kernel/locking/lockdep.c6592 [] qdisc_lookup+0xac/0x6f0 net/sched/sch_api.c305 [] qdisc_tree_reduce_backlog+0x243/0x580 net/sched/sch_api.c811 [] pfifo_tail_enqueue+0x32c/0x4b0 net/sched/sch_fifo.c51 [] qdisc_enqueue include/net/sch_generic.h833 [inline] [] netem_dequeue+0xeb3/0x15d0 net/sched/sch_netem.c723 [] dequeue_skb net/sched/sch_generic.c292 [inline] [] qdisc_restart net/sched/sch_generic.c397 [inline] [] __qdisc_run+0x249/0x1e60 net/sched/sch_generic.c415 [] qdisc_run+0xd6/0x260 include/net/pkt_sched.h125 [] net_tx_action+0x7c9/0x970 net/core/dev.c5313 [] __do_softirq+0x2bd/0x9bd kernel/softirq.c616 [] invoke_softirq kernel/softirq.c447 [inline] [] __irq_exit_rcu+0xca/0x230 kernel/softirq.c700 [] irq_exit_rcu+0x9/0x20 kernel/softirq.c712 [] sysvec_apic_timer_interrupt+0x42/0x90 arch/x86/kernel/apic/apic.c1107 [] asm_sysvec_apic_timer_interrupt+0x1b/0x20 arch/x86/include/asm/idtentry.h656",
    "keyphrases": {
        "rootcause": "The function qdisc_tree_reduce_backlog() was called with the qdisc lock held but not RTNL. This caused a lockdep splat when qdisc_lookup() was used instead of qdisc_lookup_rcu().",
        "weakness": "The qdisc lock was held without also holding RTNL, leading to unsafe access of qdisc data structures.",
        "impact": "A lockdep splat was reported, indicating a potential deadlock or race condition, and potentially leading to system instability.",
        "vector": "The vulnerability can be triggered by network operations that call qdisc_tree_reduce_backlog() while holding the qdisc lock, such as through enqueue/dequeue operations",
        "attacker": "An attacker could potentially trigger this vulnerability through specific network traffic patterns, leading to denial of service",
        "product": "Linux Kernel",
        "version": "6.1.74",
        "component": "net/sched"
    }
}
