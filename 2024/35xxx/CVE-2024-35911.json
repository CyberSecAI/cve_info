{
    "cveId": "CVE-2024-35911",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved ice fix memory corruption bug with suspend and rebuild The ice driver would previously panic after suspend. This is caused from the driver *only* calling the ice_vsi_free_q_vectors() function by itself, when it is suspending. Since commit b3e7b3a6ee92 (ice prevent NULL pointer deref during reload) the driver has zeroed out num_q_vectors, and only restored it in ice_vsi_cfg_def(). This further causes the ice_rebuild() function to allocate a zero length buffer, after which num_q_vectors is updated, and then the new value of num_q_vectors is used to index into the zero length buffer, which corrupts memory. The fix entails making sure all the code referencing num_q_vectors only does so after it has been reset via ice_vsi_cfg_def(). I didnt perform a full bisect, but I was able to test against 6.1.77 kernel and that ice driver works fine for suspend/resume with no panic, so sometime since then, this problem was introduced. Also clean up an un-needed init of a local variable in the function being modified. PANIC from 6.8.0-rc1 [1026674.915596] PM suspend exit [1026675.664697] ice 00001700.1 PTP reset successful [1026675.664707] ice 00001700.1 2755 msecs passed between update to cached PHC time [1026675.667660] ice 0000b100.0 PTP reset successful [1026675.675944] ice 0000b100.0 2832 msecs passed between update to cached PHC time [1026677.137733] ixgbe 00003100.0 ens787 NIC Link is Up 1",
    "keyphrases": {
        "rootcause": "zero-length buffer allocation",
        "weakness": "memory corruption",
        "impact": "panic",
        "vector": "suspending",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "ice driver"
    }
}
