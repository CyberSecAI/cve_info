{
    "cveId": "CVE-2024-27405",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved usb gadget ncm Avoid dropping datagrams of properly parsed NTBs It is observed sometimes when tethering is used over NCM with Windows 11 as host, at some instances, the gadget_giveback has one byte appended at the end of a proper NTB. When the NTB is parsed, unwrap call looks for any leftover bytes in SKB provided by u_ether and if there are any pending bytes, it treats them as a separate NTB and parses it. But in case the second NTB (as per unwrap call) is faulty/corrupt, all the datagrams that were parsed properly in the first NTB and saved in rx_list are dropped. Adding a few custom traces showed the following [002] d..1 7828.532866 dwc3_gadget_giveback ep1out req 000000003868811a length 1025/16384 zsI ==> 0 [002] d..1 7828.532867 ncm_unwrap_ntb K ncm_unwrap_ntb toprocess 1025 [002] d..1 7828.532867 ncm_unwrap_ntb K ncm_unwrap_ntb nth 1751999342 [002] d..1 7828.532868 ncm_unwrap_ntb K ncm_unwrap_ntb seq 0xce67 [002] d..1 7828.532868 ncm_unwrap_ntb K ncm_unwrap_ntb blk_len 0x400 [002] d..1 7828.532868 ncm_unwrap_ntb K ncm_unwrap_ntb ndp_len 0x10 [002] d..1 7828.532869 ncm_unwrap_ntb K Parsed NTB with 1 frames In this case, the giveback is of 1025 bytes and block length is 1024. The rest 1 byte (which is 0x00) wont be parsed resulting in drop of all datagrams in rx_list. Same is case with packets of size 2048 [002] d..1 7828.557948 dwc3_gadget_giveback ep1out r"
}
