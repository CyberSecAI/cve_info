{
    "cveId": "CVE-2024-42297",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedf2fs fix to dont dirty inode for readonly filesystemsyzbot reports f2fs bug as belowkernel BUG at fs/f2fs/inode.c933!RIP 0010f2fs_evict_inode+0x1576/0x1590 fs/f2fs/inode.c933Call Trace evict+0x2a4/0x620 fs/inode.c664 dispose_list fs/inode.c697 [inline] evict_inodes+0x5f8/0x690 fs/inode.c747 generic_shutdown_super+0x9d/0x2c0 fs/super.c675 kill_block_super+0x44/0x90 fs/super.c1667 kill_f2fs_super+0x303/0x3b0 fs/f2fs/super.c4894 deactivate_locked_super+0xc1/0x130 fs/super.c484 cleanup_mnt+0x426/0x4c0 fs/namespace.c1256 task_work_run+0x24a/0x300 kernel/task_work.c180 ptrace_notify+0x2cd/0x380 kernel/signal.c2399 ptrace_report_syscall include/linux/ptrace.h411 [inline] ptrace_report_syscall_exit include/linux/ptrace.h473 [inline] syscall_exit_work kernel/entry/common.c251 [inline] syscall_exit_to_user_mode_prepare kernel/entry/common.c278 [inline] __syscall_exit_to_user_mode_work kernel/entry/common.c283 [inline] syscall_exit_to_user_mode+0x15c/0x280 kernel/entry/common.c296 do_syscall_64+0x50/0x110 arch/x86/entry/common.c88 entry_SYSCALL_64_after_hwframe+0x63/0x6bThe root cause is- do_sys_open - f2fs_lookup - __f2fs_find_entry - f2fs_i_depth_write - f2fs_mark_inode_dirty_sync - f2fs_dirty_inode - set_inode_flag(inode, FI_DIRTY_INODE)- umount - kill_f2fs_super - kill_block_super - generic_shutdown_super - sync_filesystem sb is readonly, skip sync_filesystem() - evict_inodes - iput - f2fs_evict_inode - f2fs_bug_on(sbi, is_inode_flag_set(inode, FI_DIRTY_INODE)) trigger kernel panicWhen we try to repair i_current_depth in readonly filesystem, letsskip dirty inode to avoid panic in later f2fs_evict_inode().",
    "keyphrases": {
        "rootcause": "The f2fs filesystem attempts to mark an inode as dirty even when the filesystem is mounted as read-only, leading to a kernel panic during inode eviction.",
        "weakness": "The f2fs driver does not properly handle the case where it attempts to mark an inode as dirty on a read-only filesystem.",
        "impact": "Kernel panic, potentially leading to system crash or denial of service",
        "vector": "The vulnerability can be triggered by performing a series of operations including opening a file, and umounting the filesystem",
        "attacker": "A local attacker with the ability to trigger the specific operations, or indirectly through a system call.",
        "product": "Linux kernel",
        "version": "Affected versions of the Linux kernel containing f2fs driver.",
        "component": "f2fs filesystem driver"
    }
}
