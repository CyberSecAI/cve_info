{
    "cveId": "CVE-2024-42106",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved inet_diag Initialize pad field in struct inet_diag_req_v2 KMSAN reported uninit-value access in raw_lookup() [1]. Diag for raw sockets uses the pad field in struct inet_diag_req_v2 for the underlying protocol. This field corresponds to the sdiag_raw_protocol field in struct inet_diag_req_raw. inet_diag_get_exact_compat() converts inet_diag_req to inet_diag_req_v2, but leaves the pad field uninitialized. So the issue occurs when raw_lookup() accesses the sdiag_raw_protocol field. Fix this by initializing the pad field in inet_diag_get_exact_compat(). Also, do the same fix in inet_diag_dump_compat() to avoid the similar issue in the future. [1] BUG KMSAN uninit-value in raw_lookup net/ipv4/raw_diag.c49 [inline] BUG KMSAN uninit-value in raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c71 raw_lookup net/ipv4/raw_diag.c49 [inline] raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c71 raw_diag_dump_one+0xa1/0x660 net/ipv4/raw_diag.c99 inet_diag_cmd_exact+0x7d9/0x980 inet_diag_get_exact_compat net/ipv4/inet_diag.c1404 [inline] inet_diag_rcv_msg_compat+0x469/0x530 net/ipv4/inet_diag.c1426 sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c282 netlink_rcv_skb+0x537/0x670 net/netlink/af_netlink.c2564 sock_diag_rcv+0x35/0x40 net/core/sock_diag.c297 netlink_unicast_kernel net/netlink/af_netlink.c1335 [inline] netlink_unicast+0xe74/0x1240 net/netlink/af_netlink.c1361 netlink_sendmsg+0x10c6/0x1260 net"
}
