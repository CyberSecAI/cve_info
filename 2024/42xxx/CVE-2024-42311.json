{
    "cveId": "CVE-2024-42311",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedhfs fix to initialize fields of hfs_inode_info after hfs_alloc_inode()Syzbot reports uninitialized value access issue as belowloop0 detected capacity change from 0 to 64=====================================================BUG KMSAN uninit-value in hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c30 hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c30 d_revalidate fs/namei.c862 [inline] lookup_fast+0x89e/0x8e0 fs/namei.c1649 walk_component fs/namei.c2001 [inline] link_path_walk+0x817/0x1480 fs/namei.c2332 path_lookupat+0xd9/0x6f0 fs/namei.c2485 filename_lookup+0x22e/0x740 fs/namei.c2515 user_path_at_empty+0x8b/0x390 fs/namei.c2924 user_path_at include/linux/namei.h57 [inline] do_mount fs/namespace.c3689 [inline] __do_sys_mount fs/namespace.c3898 [inline] __se_sys_mount+0x66b/0x810 fs/namespace.c3875 __x64_sys_mount+0xe4/0x140 fs/namespace.c3875 do_syscall_x64 arch/x86/entry/common.c52 [inline] do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c83 entry_SYSCALL_64_after_hwframe+0x63/0x6bBUG KMSAN uninit-value in hfs_ext_read_extent fs/hfs/extent.c196 [inline]BUG KMSAN uninit-value in hfs_get_block+0x92d/0x1620 fs/hfs/extent.c366 hfs_ext_read_extent fs/hfs/extent.c196 [inline] hfs_get_block+0x92d/0x1620 fs/hfs/extent.c366 block_read_full_folio+0x4ff/0x11b0 fs/buffer.c2271 hfs_read_folio+0x55/0x60 fs/hfs/inode.c39 filemap_read_folio+0x148/0x4f0 mm/filemap.c2426 do_read_cache_folio+0x7c8/0xd90 mm/filemap.c3553 do_read_cache_page mm/filemap.c3595 [inline] read_cache_page+0xfb/0x2f0 mm/filemap.c3604 read_mapping_page include/linux/pagemap.h755 [inline] hfs_btree_open+0x928/0x1ae0 fs/hfs/btree.c78 hfs_mdb_get+0x260c/0x3000 fs/hfs/mdb.c204 hfs_fill_super+0x1fb1/0x2790 fs/hfs/super.c406 mount_bdev+0x628/0x920 fs/super.c1359 hfs_mount+0xcd/0xe0 fs/hfs/super.c456 legacy_get_tree+0x167/0x2e0 fs/fs_context.c610 vfs_get_tree+0xdc/0x5d0 fs/super.c1489 do_new_mount+0x7a9/0x16f0 fs/namespace.c3145 path_mount+0xf98/0x26a0 fs/namespace.c3475 do_mount fs/namespace.c3488 [inline] __do_sys_mount fs/namespace.c3697 [inline] __se_sys_mount+0x919/0x9e0 fs/namespace.c3674 __ia32_sys_mount+0x15b/0x1b0 fs/namespace.c3674 do_syscall_32_irqs_on arch/x86/entry/common.c112 [inline] __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c178 do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c203 do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c246 entry_SYSENTER_compat_after_hwframe+0x70/0x82Uninit was created at __alloc_pages+0x9a6/0xe00 mm/page_alloc.c4590 __alloc_pages_node include/linux/gfp.h238 [inline] alloc_pages_node include/linux/gfp.h261 [inline] alloc_slab_page mm/slub.c2190 [inline] allocate_slab mm/slub.c2354 [inline] new_slab+0x2d7/0x1400 mm/slub.c2407 ___slab_alloc+0x16b5/0x3970 mm/slub.c3540 __slab_alloc mm/slub.c3625 [inline] __slab_alloc_node mm/slub.c3678 [inline] slab_alloc_node mm/slub.c3850 [inline] kmem_cache_alloc_lru+0x64d/0xb30 mm/slub.c3879 alloc_inode_sb include/linux/fs.h3018 [inline] hfs_alloc_inode+0x5a/0xc0 fs/hfs/super.c165 alloc_inode+0x83/0x440 fs/inode.c260 new_inode_pseudo fs/inode.c1005 [inline] new_inode+0x38/0x4f0 fs/inode.c1031 hfs_new_inode+0x61/0x1010 fs/hfs/inode.c186 hfs_mkdir+0x54/0x250 fs/hfs/dir.c228 vfs_mkdir+0x49a/0x700 fs/namei.c4126 do_mkdirat+0x529/0x810 fs/namei.c4149 __do_sys_mkdirat fs/namei.c4164 [inline] __se_sys_mkdirat fs/namei.c4162 [inline] __x64_sys_mkdirat+0xc8/0x120 fs/namei.c4162 do_syscall_x64 arch/x86/entry/common.c52 [inline] do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c83 entry_SYSCALL_64_after_hwframe+0x63/0x6bIt missed to initialize .tz_secondswest, .cached_start and .cached_blocksfields in struct hfs_inode_info after hfs_alloc_inode(), fix it.",
    "keyphrases": {
        "rootcause": "The fields `.tz_secondswest`, `.cached_start`, and `.cached_blocks` in `struct hfs_inode_info` were not initialized after calling `hfs_alloc_inode()`. This leads to uninitialized memory being used when these fields are later accessed.",
        "weakness": "Uninitialized memory access",
        "impact": "Uninitialized values used in file system operations, leading to potential data corruption, crashes, and information leaks.",
        "vector": "Mounting a crafted HFS file system that triggers the uninitialized memory access during inode creation and related operations.",
        "attacker": "An attacker could create a malicious HFS filesystem image to trigger the vulnerability.",
        "product": "Linux Kernel",
        "version": "Not specified, but present in versions prior to the fix.",
        "component": "HFS filesystem driver"
    }
}
