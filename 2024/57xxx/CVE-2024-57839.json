{
    "cveId": "CVE-2024-57839",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved Revert readahead properly shorten readahead when falling back to do_page_cache_ra() This reverts commit 7c877586da3178974a8a94577b6045a48377ff25. Anders and Philippe have reported that recent kernels occasionally hang when used with NFS in readahead code. The problem has been bisected to 7c877586da3 (readahead properly shorten readahead when falling back to do_page_cache_ra()). The cause of the problem is that ra->size can be shrunk by read_pages() call and subsequently we end up calling do_page_cache_ra() with negative (read huge positive) number of pages. Lets revert 7c877586da3 for now until we can find a proper way how the logic in read_pages() and page_cache_ra_order() can coexist. This can lead to reduced readahead throughput due to readahead window confusion but thats better than outright hangs.",
    "keyphrases": {
        "rootcause": "Negative page numbers when falling back to do_page_cache_ra()",
        "weakness": "",
        "impact": "reduced readahead throughput",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "readahead code"
    }
}
