{
    "cveId": "CVE-2024-58085",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved tomoyo dont emit warning in tomoyo_write_control() syzbot is reporting too large allocation warning at tomoyo_write_control(), for one can write a very very long line without new line character. To fix this warning, I use __GFP_NOWARN rather than checking for KMALLOC_MAX_SIZE, for practically a valid line should be always shorter than 32KB where the too small to fail memory-allocation rule applies. One might try to write a valid line that is longer than 32KB, but such request will likely fail with -ENOMEM. Therefore, I feel that separately returning -EINVAL when a line is longer than KMALLOC_MAX_SIZE is redundant. There is no need to distinguish over-32KB and over-KMALLOC_MAX_SIZE.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "",
        "vector": "write a very very long line without new line character",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "tomoyo dont emit warning in tomoyo_write_control() syzbot is reporting too large allocation warning at tomoyo_write_control()"
    }
}
