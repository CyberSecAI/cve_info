{
    "cveId": "CVE-2024-58084",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved firmware qcom scm Fix missing read barrier in qcom_scm_get_tzmem_pool() Commit 2e4955167ec5 (firmware qcom scm Fix __scm and waitq completion variable initialization) introduced a write barrier in probe function to store global __scm variable. We all known barriers are paired (see memory-barriers.txt Note that write barriers should normally be paired with read or address-dependency barriers), therefore accessing it from concurrent contexts requires read barrier. Previous commit added such barrier in qcom_scm_is_available(), so lets use that directly. Lack of this read barrier can result in fetching stale __scm variable value, NULL, and dereferencing it. Note that barrier in qcom_scm_is_available() satisfies here the control dependency.",
    "keyphrases": {
        "rootcause": "missing read barrier",
        "weakness": "",
        "impact": "dereferencing NULL",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "firmware qcom scm"
    }
}
