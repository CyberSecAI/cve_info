{
  "cveId": "CVE-2024-5171",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "Integer overflow in libaom internal function img_alloc_helper can lead to heap buffer overflow. This function can be reached via 3 callers * Calling aom_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid. * Calling aom_img_wrap() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid. * Calling aom_img_alloc_with_border() with a large value of the d_w, d_h, align, size_align, or border parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.",
  "keyphrases": {
    "rootcause": "integer overflow",
    "weakness": [
      "Integer overflow",
      "heap buffer overflow"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "libaom",
    "version": "",
    "component": "img_alloc_helper"
  },
  "mitreTechnicalImpacts": []
}