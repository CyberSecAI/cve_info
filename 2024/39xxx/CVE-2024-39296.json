{
    "cveId": "CVE-2024-39296",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved bonding fix oops during rmmod rmmod bonding causes an oops ever since commit cc317ea3d927 (bonding remove redundant NULL check in debugfs function). Here are the relevant functions being called bonding_exit() bond_destroy_debugfs() debugfs_remove_recursive(bonding_debug_root) bonding_debug_root = NULL OOPS However, reverting the bad commit does not solve the problem completely because the original code contains a race that could cause the same oops, although it was much less likely to be triggered unintentionally CPU1 rmmod bonding bonding_exit() bond_destroy_debugfs() debugfs_remove_recursive(bonding_debug_root) CPU2 echo -bond0 > /sys/class/net/bonding_masters bond_uninit() bond_debug_unregister() if (!bonding_debug_root) CPU1 bonding_debug_root = NULL So do NOT revert the bad commit (since the removed checks were racy anyway), and instead change the order of actions taken during module removal. The same oops can also happen if there is an error during",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "",
        "impact": "oops",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "bonding module"
    }
}
