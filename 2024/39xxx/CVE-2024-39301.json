{
    "cveId": "CVE-2024-39301",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvednet/9p fix uninit-value in p9_client_rpc()Syzbot with the help of KMSAN reported the following errorBUG KMSAN uninit-value in trace_9p_client_res include/trace/events/9p.h146 [inline]BUG KMSAN uninit-value in p9_client_rpc+0x1314/0x1340 net/9p/client.c754 trace_9p_client_res include/trace/events/9p.h146 [inline] p9_client_rpc+0x1314/0x1340 net/9p/client.c754 p9_client_create+0x1551/0x1ff0 net/9p/client.c1031 v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c410 v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c122 legacy_get_tree+0x114/0x290 fs/fs_context.c662 vfs_get_tree+0xa7/0x570 fs/super.c1797 do_new_mount+0x71f/0x15e0 fs/namespace.c3352 path_mount+0x742/0x1f20 fs/namespace.c3679 do_mount fs/namespace.c3692 [inline] __do_sys_mount fs/namespace.c3898 [inline] __se_sys_mount+0x725/0x810 fs/namespace.c3875 __x64_sys_mount+0xe4/0x150 fs/namespace.c3875 do_syscall_64+0xd5/0x1f0 entry_SYSCALL_64_after_hwframe+0x6d/0x75Uninit was created at __alloc_pages+0x9d6/0xe70 mm/page_alloc.c4598 __alloc_pages_node include/linux/gfp.h238 [inline] alloc_pages_node include/linux/gfp.h261 [inline] alloc_slab_page mm/slub.c2175 [inline] allocate_slab mm/slub.c2338 [inline] new_slab+0x2de/0x1400 mm/slub.c2391 ___slab_alloc+0x1184/0x33d0 mm/slub.c3525 __slab_alloc mm/slub.c3610 [inline] __slab_alloc_node mm/slub.c3663 [inline] slab_alloc_node mm/slub.c3835 [inline] kmem_cache_alloc+0x6d3/0xbe0 mm/slub.c3852 p9_tag_alloc net/9p/client.c278 [inline] p9_client_prepare_req+0x20a/0x1770 net/9p/client.c641 p9_client_rpc+0x27e/0x1340 net/9p/client.c688 p9_client_create+0x1551/0x1ff0 net/9p/client.c1031 v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c410 v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c122 legacy_get_tree+0x114/0x290 fs/fs_context.c662 vfs_get_tree+0xa7/0x570 fs/super.c1797 do_new_mount+0x71f/0x15e0 fs/namespace.c3352 path_mount+0x742/0x1f20 fs/namespace.c3679 do_mount fs/namespace.c3692 [inline] __do_sys_mount fs/namespace.c3898 [inline] __se_sys_mount+0x725/0x810 fs/namespace.c3875 __x64_sys_mount+0xe4/0x150 fs/namespace.c3875 do_syscall_64+0xd5/0x1f0 entry_SYSCALL_64_after_hwframe+0x6d/0x75If p9_check_errors() fails early in p9_client_rpc(), req->rc.tagwill not be properly initialized. However, trace_9p_client_res()ends up trying to print it out anyway before p9_client_rpc()finishes.Fix this issue by assigning default values to p9_fcall fieldssuch as tag and (just in case KMSAN unearths something new) idduring the tag allocation stage.",
    "keyphrases": {
        "rootcause": "Uninitialized value in `p9_client_rpc` when `p9_check_errors()` fails early, leading to `trace_9p_client_res()` printing an uninitialized tag.",
        "weakness": "The tag field of the `p9_fcall` structure is not initialized in the `p9_client_rpc` function before being used by the `trace_9p_client_res` function.",
        "impact": "KMSAN reports an uninitialized value read during tracing, potentially revealing sensitive information or causing unexpected behavior during debugging.",
        "vector": "Local",
        "attacker": "Local User",
        "product": "Linux Kernel",
        "version": "Not specified in the text",
        "component": "net/9p"
    }
}
