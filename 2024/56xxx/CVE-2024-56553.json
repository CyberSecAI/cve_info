{
    "cveId": "CVE-2024-56553",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved binder fix memleak of proc->delivered_freeze If a freeze notification is cleared with BC_CLEAR_FREEZE_NOTIFICATION before calling binder_freeze_notification_done(), then it is detached from its reference (e.g. ref->freeze) but the work remains queued in proc->delivered_freeze. This leads to a memory leak when the process exits as any pending entries in proc->delivered_freeze are not freed unreferenced object 0xffff38e8cfa36180 (size 64) comm binder-util, pid 655, jiffies 4294936641 hex dump (first 32 bytes) b8 e9 9e c8 e8 38 ff ff b8 e9 9e c8 e8 38 ff ff .....8.......8.. 0b 00 00 00 00 00 00 00 3c 1f 4b 00 00 00 00 00 ........] kmemleak_alloc+0x34/0x40 [] __kmalloc_cache_noprof+0x208/0x280 [] binder_thread_write+0xdec/0x439c [] binder_ioctl+0x1b68/0x22cc [] __arm64_sys_ioctl+0x124/0x190 [] invoke_syscall+0x6c/0x254 [] el0_svc_common.constprop.0+0xac/0x230 [] do_el0_svc+0x40/0x58 [] el0_svc+0x38/0x78 [] el0t_64_sync_handler+0x120/0x12c [] el0t_64_sync+0x190/0x194 This patch fixes the leak by ensuring that any pending entries in proc->delivered_freeze are freed during binder_deferred_release().",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "memory leak",
        "vector": "clear freeze notification before calling binder_freeze_notification_done()",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "binder"
    }
}
