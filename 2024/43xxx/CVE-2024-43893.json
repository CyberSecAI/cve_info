{
    "cveId": "CVE-2024-43893",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved serial core check uartclk for zero to avoid divide by zero Calling ioctl TIOCSSERIAL with an invalid baud_base can result in uartclk being zero, which will result in a divide by zero error in uart_get_divisor(). The check for uartclk being zero in uart_set_info() needs to be done before other settings are made as subsequent calls to ioctl TIOCSSERIAL for the same port would be impacted if the uartclk check was done where uartclk gets set. Oops divide error 0000 PREEMPT SMP KASAN PTI RIP 0010uart_get_divisor (drivers/tty/serial/serial_core.c580) Call Trace serial8250_get_divisor (drivers/tty/serial/8250/8250_port.c2576 drivers/tty/serial/8250/8250_port.c2589) serial8250_do_set_termios (drivers/tty/serial/8250/8250_port.c502 drivers/tty/serial/8250/8250_port.c2741) serial8250_set_termios (drivers/tty/serial/8250/8250_port.c2862) uart_change_line_settings (./include/linux/spinlock.h376 ./include/linux/serial_core.h608 drivers/tty/serial/serial_core.c222) uart_port_startup (drivers/tty/serial/serial_core.c342) uart_startup (drivers/tty/serial/serial_core.c368) uart_set_info (drivers/tty/serial/serial_core.c1034) uart_set_info_user (drivers/tty/serial/serial_core.c1059) tty_set_serial (drivers/tty/tty_io.c2637) tty_ioctl (drivers/tty/tty_io.c2647 drivers/tty/tty_io.c2791) __x64_sys_ioctl (fs/ioctl.c52 fs/ioctl.c907 fs/ioctl.c893 fs/ioctl.c893) do_syscall_64 (a"
}
