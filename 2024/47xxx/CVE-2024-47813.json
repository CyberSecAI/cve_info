{
    "cveId": "CVE-2024-47813",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "Wasmtime is an open source runtime for WebAssembly. Under certain concurrent event orderings, a `wasmtimeEngine`s internal type registry was susceptible to double-unregistration bugs due to a race condition, leading to panics and potentially type registry corruption. That registry corruption could, following an additional and particular sequence of concurrent events, lead to violations of WebAssemblys control-flow integrity (CFI) and type safety. Users that do not use `wasmtimeEngine` across multiple threads are not affected. Users that only create new modules across threads over time are additionally not affected. Reproducing this bug requires creating and dropping multiple type instances (such as `wasmtimeFuncType` or `wasmtimeArrayType`) concurrently on multiple threads, where all types are associated with the same `wasmtimeEngine`. **Wasm guests cannot trigger this bug.** See the References section below for a list of Wasmtime types-related APIs that are affected. Wasmtime maintains an internal registry of types within a `wasmtimeEngine` and an engine is shareable across threads. Types can be created and referenced through creation of a `wasmtimeModule`, creation of `wasmtimeFuncType`, or a number of other APIs where the host creates a function (see References below). Each of these cases interacts with an engine to deduplicate type information and manage type indices that are used to implement type checks in WebAssemblys `call_indirect` function, fo",
    "keyphrases": {
        "rootcause": "race condition",
        "weakness": "double-unregistration bugs",
        "impact": "panics and potentially type registry corruption",
        "vector": "creating and dropping multiple type instances concurrently on multiple threads",
        "attacker": "",
        "product": "Wasmtime",
        "version": "",
        "component": "wasmtimeEngine's internal type registry"
    }
}
