{
    "cveId": "CVE-2024-44965",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved x86/mm Fix pti_clone_pgtable() alignment assumption Guenter reported dodgy crashes on an i386-nosmp build using GCC-11 that had the form of endless traps until entry stack exhaust and then #DF from the stack guard. It turned out that pti_clone_pgtable() had alignment assumptions on the start address, notably it hard assumes start is PMD aligned. This is true on x86_64, but very much not true on i386. These assumptions can cause the end condition to malfunction, leading to a short clone. Guess what happens when the user mapping has a short copy of the entry text? Use the correct increment form for addr to avoid alignment assumptions.",
    "keyphrases": {
        "rootcause": "alignment assumptions on the start address",
        "weakness": "",
        "impact": "short clone",
        "vector": "dodgy crashes",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "x86/mm pti_clone_pgtable()"
    }
}
