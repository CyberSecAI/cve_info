{
    "cveId": "CVE-2024-46771",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedcan bcm Remove proc entry when dev is unregistered.syzkaller reported a warning in bcm_connect() below. [0]The repro calls connect() to vxcan1, removes vxcan1, and callsconnect() with ifindex == 0.Calling connect() for a BCM socket allocates a proc entry.Then, bcm_sk(sk)->bound is set to 1 to prevent further connect().However, removing the bound device resets bcm_sk(sk)->bound to 0in bcm_notify().The 2nd connect() tries to allocate a proc entry with the samename and sets NULL to bcm_sk(sk)->bcm_proc_read, leaking theoriginal proc entry.Since the proc entry is available only for connect()ed sockets,lets clean up the entry when the bound netdev is unregistered.[0]proc_dir_entry can-bcm/2456 already registeredWARNING CPU 1 PID 394 at fs/proc/generic.c376 proc_register+0x645/0x8f0 fs/proc/generic.c375Modules linked inCPU 1 PID 394 Comm syz-executor403 Not tainted 6.10.0-rc7-g852e42cc2dd4Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014RIP 0010proc_register+0x645/0x8f0 fs/proc/generic.c375Code 00 00 00 00 00 48 85 ed 0f 85 97 02 00 00 4d 85 f6 0f 85 9f 02 00 00 48 c7 c7 9b cb cf 87 48 89 de 4c 89 fa e8 1c 6f eb fe 90 0b 90 90 48 c7 c7 98 37 99 89 e8 cb 7e 22 05 bb 00 00 00 10 48RSP 0018ffa0000000cd7c30 EFLAGS 00010246RAX 9e129be1950f0200 RBX ff1100011b51582c RCX ff1100011857cd80RDX 0000000000000000 RSI 0000000000000000 RDI 0000000000000002RBP 0000000000000000 R08 ffd400000000000f R09 ff1100013e78cac0R10 ffac800000cd7980 R11 ff1100013e12b1f0 R12 0000000000000000R13 0000000000000000 R14 0000000000000000 R15 ff1100011a99a2ecFS 00007fbd7086f740(0000) GSff1100013fd00000(0000) knlGS0000000000000000CS 0010 DS 0000 ES 0000 CR0 0000000080050033CR2 00000000200071c0 CR3 0000000118556004 CR4 0000000000771ef0DR0 0000000000000000 DR1 0000000000000000 DR2 0000000000000000DR3 0000000000000000 DR6 00000000fffe07f0 DR7 0000000000000400PKRU 55555554Call Trace proc_create_net_single+0x144/0x210 fs/proc/proc_net.c220 bcm_connect+0x472/0x840 net/can/bcm.c1673 __sys_connect_file net/socket.c2049 [inline] __sys_connect+0x5d2/0x690 net/socket.c2066 __do_sys_connect net/socket.c2076 [inline] __se_sys_connect net/socket.c2073 [inline] __x64_sys_connect+0x8f/0x100 net/socket.c2073 do_syscall_x64 arch/x86/entry/common.c52 [inline] do_syscall_64+0xd9/0x1c0 arch/x86/entry/common.c83 entry_SYSCALL_64_after_hwframe+0x4b/0x53RIP 00330x7fbd708b0e5dCode ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 9f 1b 00 f7 d8 64 89 01 48RSP 002b00007fff8cd33f08 EFLAGS 00000246 ORIG_RAX 000000000000002aRAX ffffffffffffffda RBX 0000000000000003 RCX 00007fbd708b0e5dRDX 0000000000000010 RSI 0000000020000040 RDI 0000000000000003RBP 0000000000000000 R08 0000000000000040 R09 0000000000000040R10 0000000000000040 R11 0000000000000246 R12 00007fff8cd34098R13 0000000000401280 R14 0000000000406de8 R15 00007fbd70ab9000 remove_proc_entry removing non-empty directory net/can-bcm, leaking at least 2456",
    "keyphrases": {
        "rootcause": "The proc entry for BCM sockets is not properly cleaned up when the bound netdev is unregistered, leading to a leak when a new socket tries to use the same proc entry name.",
        "weakness": "Improper resource cleanup, specifically the proc entry for BCM sockets.",
        "impact": "Resource leak, specifically proc entries, which could lead to system instability over time.",
        "vector": "By calling connect() to a CAN device, removing that device, and then calling connect() with the same ifindex.",
        "attacker": "A local attacker with the ability to create and remove network devices and open sockets, which can be done in a container or as a less privileged user",
        "product": "Linux Kernel",
        "version": "6.10.0-rc7",
        "component": "Broadcom CAN driver (bcm.c)"
    }
}
