{
    "cveId": "CVE-2024-46771",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved can bcm Remove proc entry when dev is unregistered. syzkaller reported a warning in bcm_connect() below. [0] The repro calls connect() to vxcan1, removes vxcan1, and calls connect() with ifindex == 0. Calling connect() for a BCM socket allocates a proc entry. Then, bcm_sk(sk)->bound is set to 1 to prevent further connect(). However, removing the bound device resets bcm_sk(sk)->bound to 0 in bcm_notify(). The 2nd connect() tries to allocate a proc entry with the same name and sets NULL to bcm_sk(sk)->bcm_proc_read, leaking the original proc entry. Since the proc entry is available only for connect()ed sockets, lets clean up the entry when the bound netdev is unregistered. [0] proc_dir_entry can-bcm/2456 already registered WARNING CPU 1 PID 394 at fs/proc/generic.c376 proc_register+0x645/0x8f0 fs/proc/generic.c375 Modules linked in CPU 1 PID 394 Comm syz-executor403 Not tainted 6.10.0-rc7-g852e42cc2dd4 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014 RIP 0010proc_register+0x645/0x8f0 fs/proc/generic.c375 Code 00 00 00 00 00 48 85 ed 0f 85 97 02 00 00 4d 85 f6 0f 85 9f 02 00 00 48 c7 c7 9b cb cf 87 48 89 de 4c 89 fa e8 1c 6f eb fe 90 0b 90 90 48 c7 c7 98 37 99 89 e8 cb 7e 22 05 bb 00 00 00 10 48 RSP 0018ffa0000000cd7c30 EFLAGS 00010246 RAX 9e129be1950f0200 RBX ff1100011b51582c RCX ff1100011857cd80 RDX 000000"
}
