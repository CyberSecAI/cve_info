{
    "cveId": "CVE-2024-46702",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved thunderbolt Mark XDomain as unplugged when router is removed I noticed that when we do discrete host router NVM upgrade and it gets hot-removed from the PCIe side as a result of NVM firmware authentication, if there is another host connected with enabled paths we hang in tearing them down. This is due to fact that the Thunderbolt networking driver also tries to cleanup the paths and ends up blocking in tb_disconnect_xdomain_paths() waiting for the domain lock. However, at this point we already cleaned the paths in tb_stop() so there is really no need for tb_disconnect_xdomain_paths() to do that anymore. Furthermore it already checks if the XDomain is unplugged and bails out early so take advantage of that and mark the XDomain as unplugged when we remove the parent router.",
    "keyphrases": {
        "rootcause": "improper state handling",
        "weakness": "",
        "impact": "denial of service",
        "vector": "NVM firmware authentication",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "Thunderbolt networking driver"
    }
}
