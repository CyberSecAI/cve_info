{
    "cveId": "CVE-2024-46695",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved selinux,smack dont bypass permissions check in inode_setsecctx hook Marek Gresko reports that the root user on an NFS client is able to change the security labels on files on an NFS filesystem that is exported with root squashing enabled. The end of the kerneldoc comment for __vfs_setxattr_noperm() states * This function requires the caller to lock the inodes i_mutex before it * is executed. It also assumes that the caller will make the appropriate * permission checks. nfsd_setattr() does do permissions checking via fh_verify() and nfsd_permission(), but those dont do all the same permissions checks that are done by security_inode_setxattr() and its related LSM hooks do. Since nfsd_setattr() is the only consumer of security_inode_setsecctx(), simplest solution appears to be to replace the call to __vfs_setxattr_noperm() with a call to __vfs_setxattr_locked(). This fixes the above issue and has the added benefit of causing nfsd to recall conflicting delegations on a file when a client tries to change its security label.",
    "keyphrases": {
        "rootcause": "selinux,smack dont bypass permissions check in inode_setsecctx hook",
        "weakness": "",
        "impact": "change the security labels on files on an NFS filesystem",
        "vector": "",
        "attacker": "root user on an NFS client",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
