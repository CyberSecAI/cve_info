{
    "cveId": "CVE-2024-46733",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved btrfs fix qgroup reserve leaks in cow_file_range In the buffered write path, the dirty page owns the qgroup reserve until it creates an ordered_extent. Therefore, any errors that occur before the ordered_extent is created must free that reservation, or else the space is leaked. The fstest generic/475 exercises various IO error paths, and is able to trigger errors in cow_file_range where we fail to get to allocating the ordered extent. Note that because we *do* clear delalloc, we are likely to remove the inode from the delalloc list, so the inodes/pages to not have invalidate/launder called on them in the commit abort path. This results in failures at the unmount stage of the test that look like BTRFS error (device dm-8 state EA) in cleanup_transaction2018 errno=-5 IO failure BTRFS error (device dm-8 state EA) in btrfs_replace_file_extents2416 errno=-5 IO failure BTRFS warning (device dm-8 state EA) qgroup 0/5 has unreleased space, type 0 rsv 28672 ------------[ cut here ]------------ WARNING CPU 3 PID 22588 at fs/btrfs/disk-io.c4333 close_ctree+0x222/0x4d0 [btrfs] Modules linked in btrfs blake2b_generic libcrc32c xor zstd_compress raid6_pq CPU 3 PID 22588 Comm umount Kdump loaded Tainted G W 6.10.0-rc7-gab56fde445b8 #21 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014 RIP 0010close_ctree+0x222/0x4d0 [btrfs] RSP",
    "keyphrases": {
        "rootcause": "",
        "weakness": "memory leak",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "btrfs"
    }
}
