{
    "cveId": "CVE-2024-49864",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved rxrpc Fix a race between socket set up and I/O thread creation In rxrpc_open_socket(), it sets up the socket and then sets up the I/O thread that will handle it. This is a problem, however, as theres a gap between the two phases in which a packet may come into rxrpc_encap_rcv() from the UDP packet but we oops when trying to wake the not-yet created I/O thread. As a quick fix, just make rxrpc_encap_rcv() discard the packet if theres no I/O thread yet. A better, but more intrusive fix would perhaps be to rearrange things such that the socket creation is done by the I/O thread.",
    "keyphrases": {
        "rootcause": "race between socket set up and I/O thread creation",
        "weakness": "",
        "impact": "oops when trying to wake the not-yet created I/O thread",
        "vector": "UDP packet",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "rxrpc"
    }
}
