{
    "cveId": "CVE-2024-49856",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved x86/sgx Fix deadlock in SGX NUMA node search When the current node doesnt have an EPC section configured by firmware and all other EPC sections are used up, CPU can get stuck inside the while loop that looks for an available EPC page from remote nodes indefinitely, leading to a soft lockup. Note how nid_of_current will never be equal to nid in that while loop because nid_of_current is not set in sgx_numa_mask. Also worth mentioning is that its perfectly fine for the firmware not to setup an EPC section on a node. While setting up an EPC section on each node can enhance performance, it is not a requirement for functionality. Rework the loop to start and end on *a* node that has SGX memory. This avoids the deadlock looking for the current SGX-lacking node to show up in the loop when it never will.",
    "keyphrases": {
        "rootcause": "deadlock in SGX NUMA node search",
        "weakness": "",
        "impact": "soft lockup",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "x86/sgx"
    }
}
