{
    "cveId": "CVE-2024-49854",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved block, bfq fix uaf for accessing waker_bfqq after splitting After commit 42c306ed7233 (block, bfq dont break merge chain in bfq_split_bfqq()), if the current procress is the last holder of bfqq, the bfqq can be freed after bfq_split_bfqq(). Hence recored the bfqq and then access bfqq->waker_bfqq may trigger UAF. Whats more, the waker_bfqq may in the merge chain of bfqq, hence just recored waker_bfqq is still not safe. Fix the problem by adding a helper bfq_waker_bfqq() to check if bfqq->waker_bfqq is in the merge chain, and current procress is the only holder.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "Use-After-Free",
        "impact": "",
        "vector": "accessing waker_bfqq after splitting",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "block, bfq"
    }
}
