{
    "cveId": "CVE-2024-41068",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved s390/sclp Fix sclp_init() cleanup on failure If sclp_init() fails it only partially cleans up if there are multiple failing calls to sclp_init() sclp_state_change_event will be added several times to sclp_reg_list, which results in the following warning ------------[ cut here ]------------ list_add double add new=000003ffe1598c10, prev=000003ffe1598bf0, next=000003ffe1598c10. WARNING CPU 0 PID 1 at lib/list_debug.c35 __list_add_valid_or_report+0xde/0xf8 CPU 0 PID 1 Comm swapper/0 Not tainted 6.10.0-rc3 Krnl PSW 0404c00180000000 000003ffe0d6076a (__list_add_valid_or_report+0xe2/0xf8) R0 T1 IO0 EX0 Key0 M1 W0 P0 AS3 CC0 PM0 RI0 EA3 ... Call Trace [] __list_add_valid_or_report+0xe2/0xf8 ([] __list_add_valid_or_report+0xde/0xf8) [] sclp_init+0x40e/0x450 [] do_one_initcall+0x42/0x1e0 [] do_initcalls+0x126/0x150 [] kernel_init_freeable+0x1ba/0x1f8 [] kernel_init+0x2e/0x180 [] __ret_from_fork+0x3c/0x60 [] ret_from_fork+0xa/0x30 Fix this by removing sclp_state_change_event from sclp_reg_list when sclp_init() fails.",
    "keyphrases": {
        "rootcause": "improper cleanup on failure",
        "weakness": "",
        "impact": "multiple entries for the same element",
        "vector": "multiple failing calls to sclp_init()",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.10.0-rc3",
        "component": "s390/sclp"
    }
}
