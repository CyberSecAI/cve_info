{
    "cveId": "CVE-2024-41047",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved i40e Fix XDP program unloading while removing the driver The commit 6533e558c650 (i40e Fix reset path while removing the driver) introduced a new PF state __I40E_IN_REMOVE to block modifying the XDP program while the driver is being removed. Unfortunately, such a change is useful only if the .ndo_bpf() callback was called out of the rmmod context because unloading the existing XDP program is also a part of driver removing procedure. In other words, from the rmmod context the driver is expected to unload the XDP program without reporting any errors. Otherwise, the kernel warning with callstack is printed out to dmesg. Example failing scenario 1. Load the i40e driver. 2. Load the XDP program. 3. Unload the i40e driver (using rmmod command). The example kernel warning log [ +0.004646] WARNING CPU 94 PID 10395 at net/core/dev.c9290 unregister_netdevice_many_notify+0x7a9/0x870 [...] [ +0.010959] RIP 0010unregister_netdevice_many_notify+0x7a9/0x870 [...] [ +0.002726] Call Trace [ +0.002457] [ +0.002119] ? __warn+0x80/0x120 [ +0.003245] ? unregister_netdevice_many_notify+0x7a9/0x870 [ +0.005586] ? report_bug+0x164/0x190 [ +0.003678] ? handle_bug+0x3c/0x80 [ +0.003503] ? exc_invalid_op+0x17/0x70 [ +0.003846] ? asm_exc_invalid_op+0x1a/0x20 [ +0.004200] ? unregister_netdevice_many_notify+0x7a9/0x870 [ +0.005579] ? unregister_netdevice_many_notify+0x3cc/0x870 [ +0.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "i40e driver"
    }
}
