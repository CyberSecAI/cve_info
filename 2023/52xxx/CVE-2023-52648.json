{
    "cveId": "CVE-2023-52648",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved drm/vmwgfx Unmap the surface before resetting it on a plane state Switch to a new plane state requires unreferencing of all held surfaces. In the work required for mob cursors the mapped surfaces started being cached but the variable indicating whether the surface is currently mapped was not being reset. This leads to crashes as the duplicated state, incorrectly, indicates the that surface is mapped even when no surface is present. Thats because after unreferencing the surface its perfectly possible for the plane to be backed by a bo instead of a surface. Reset the surface mapped flag when unreferencing the plane state surface to fix null derefs in cleanup. Fixes crashes in KDE KWin 6.0 on Wayland Oops 0000 [#1] PREEMPT SMP PTI CPU 4 PID 2533 Comm kwin_wayland Not tainted 6.7.0-rc3-vmwgfx #2 Hardware name VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020 RIP 0010vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx] Code 00 00 00 75 3a 48 83 c4 10 5b 5d c3 cc cc cc cc 48 8b b3 a8 00 00 00 48 c7 c7 99 90 43 c0 e8 93 c5 db ca 48 8b 83 a8 00 00 00 8b 78 28 e8 e3 f> RSP 0018ffffb6b98216fa80 EFLAGS 00010246 RAX 0000000000000000 RBX ffff969d84cdcb00 RCX 0000000000000027 RDX 0000000000000000 RSI 0000000000000001 RDI ffff969e75f21600 RBP ffff969d4143dc50 R08 0000000000000000 R09 ffffb6b98216f920 R10 0000000000000003 R11 ffff969e7feb3b10 R12 00",
    "keyphrases": {
        "rootcause": "improper state handling",
        "weakness": "",
        "impact": "null dereference",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "drm/vmwgfx"
    }
}
