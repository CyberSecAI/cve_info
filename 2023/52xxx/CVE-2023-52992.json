{
    "cveId": "CVE-2023-52992",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved bpf Skip task with pid=1 in send_signal_common() The following kernel panic can be triggered when a task with pid=1 attaches a prog that attempts to send killing signal to itself, also see [1] for more details Kernel panic - not syncing Attempted to kill init! exitcode=0x0000000b CPU 3 PID 1 Comm systemd Not tainted 6.1.0-09652-g59fe41b5255f #148 Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x100/0x178 lib/dump_stack.c106 panic+0x2c4/0x60f kernel/panic.c275 do_exit.cold+0x63/0xe4 kernel/exit.c789 do_group_exit+0xd4/0x2a0 kernel/exit.c950 get_signal+0x2460/0x2600 kernel/signal.c2858 arch_do_signal_or_restart+0x78/0x5d0 arch/x86/kernel/signal.c306 exit_to_user_mode_loop kernel/entry/common.c168 [inline] exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c203 __syscall_exit_to_user_mode_work kernel/entry/common.c285 [inline] syscall_exit_to_user_mode+0x1d/0x50 kernel/entry/common.c296 do_syscall_64+0x44/0xb0 arch/x86/entry/common.c86 entry_SYSCALL_64_after_hwframe+0x63/0xcd So skip task with pid=1 in bpf_send_signal_common() to avoid the panic. [1] https//lore.kernel.org/bpf/20221222043507.33037-1-sunhao.th@gmail.com",
    "keyphrases": {
        "component": "bpf",
        "rootcause": "",
        "vector": "",
        "weakness": "",
        "product": "Linux kernel",
        "impact": "kernel panic, kill init",
        "attacker": "",
        "version": ""
    }
}
