{
  "cveId": "CVE-2023-52851",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved IB/mlx5 Fix init stage error handling to avoid double free of same QP and UAF In the unlikely event that workqueue allocation fails and returns NULL in mlx5_mkey_cache_init(), delete the call to mlx5r_umr_resource_cleanup() (which frees the QP) in mlx5_ib_stage_post_ib_reg_umr_init(). This will avoid attempted double free of the same QP when __mlx5_ib_add() does its cleanup. Resolves a splat Syzkaller reported a UAF in ib_destroy_qp_user workqueue Failed to create a rescuer kthread for wq mkey_cache -EINTR infiniband mlx5_0 mlx5_mkey_cache_init981(pid 1642) failed to create work queue infiniband mlx5_0 mlx5_ib_stage_post_ib_reg_umr_init4075(pid 1642) mr cache init failed -12 ================================================================== BUG KASAN slab-use-after-free in ib_destroy_qp_user (drivers/infiniband/core/verbs.c2073) Read of size 8 at addr ffff88810da310a8 by task repro_upstream/1642 Call Trace kasan_report (mm/kasan/report.c590) ib_destroy_qp_user (drivers/infiniband/core/verbs.c2073) mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c198) __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c4178) mlx5r_probe (drivers/infiniband/hw/mlx5/main.c4402) ... Allocated by task 1642 __kmalloc (./include/linux/kasan.h198 mm/slab_common.c1026 mm/slab_common.c1039) create_qp (./include/lin",
  "keyphrases": {
    "rootcause": "",
    "weakness": [
      "Use-After-Free",
      "double free"
    ],
    "impact": "double free of same QP and UAF",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "mlx5_mkey_cache_init() and mlx5_ib_stage_post_ib_reg_umr_init()"
  },
  "mitreTechnicalImpacts": []
}