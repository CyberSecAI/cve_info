{
    "cveId": "CVE-2023-52618",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved block/rnbd-srv Check for unlikely string overflow Since dev_search_path can technically be as large as PATH_MAX, there was a risk of truncation when copying it and a second string into full_path since it was also PATH_MAX sized. The W=1 builds were reporting this warning drivers/block/rnbd/rnbd-srv.c In function process_msg_open.isra drivers/block/rnbd/rnbd-srv.c61651 warning %s directive output may be truncated writing up to 254 bytes into a region of size between 0 and 4095 [-Wformat-truncation=] 616 | snprintf(full_path, PATH_MAX, %s/%s, | ^~ In function rnbd_srv_get_full_path, inlined from process_msg_open.isra at drivers/block/rnbd/rnbd-srv.c72114 drivers/block/rnbd/rnbd-srv.c61617 note snprintf output between 2 and 4351 bytes into a destination of size 4096 616 | snprintf(full_path, PATH_MAX, %s/%s, | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 617 | dev_search_path, dev_name) | ~~~~~~~~~~~~~~~~~~~~~~~~~~ To fix this, unconditionally check for truncation (as was already done for the case where %SESSNAME% was present).",
    "keyphrases": {
        "rootcause": "",
        "weakness": [
            "Check for unlikely string overflow",
            "snprintf() output may be truncated"
        ],
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "block/rnbd-srv Check for unlikely string overflow"
    }
}
