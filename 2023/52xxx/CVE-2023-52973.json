{
    "cveId": "CVE-2023-52973",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved vc_screen move load of struct vc_data pointer in vcs_read() to avoid UAF After a call to console_unlock() in vcs_read() the vc_data struct can be freed by vc_deallocate(). Because of that, the struct vc_data pointer load must be done at the top of while loop in vcs_read() to avoid a UAF when vcs_size() is called. Syzkaller reported a UAF in vcs_size(). BUG KASAN use-after-free in vcs_size (drivers/tty/vt/vc_screen.c215) Read of size 4 at addr ffff8881137479a8 by task 4a005ed81e27e65/1537 CPU 0 PID 1537 Comm 4a005ed81e27e65 Not tainted 6.2.0-rc5 #1 Hardware name Red Hat KVM, BIOS 1.15.0-2.module Call Trace __asan_report_load4_noabort (mm/kasan/report_generic.c350) vcs_size (drivers/tty/vt/vc_screen.c215) vcs_read (drivers/tty/vt/vc_screen.c415) vfs_read (fs/read_write.c468 fs/read_write.c450) ... Allocated by task 1191 ... kmalloc_trace (mm/slab_common.c1069) vc_allocate (./include/linux/slab.h580 ./include/linux/slab.h720 drivers/tty/vt/vt.c1128 drivers/tty/vt/vt.c1108) con_install (drivers/tty/vt/vt.c3383) tty_init_dev (drivers/tty/tty_io.c1301 drivers/tty/tty_io.c1413 drivers/tty/tty_io.c1390) tty_open (drivers/tty/tty_io.c2080 drivers/tty/tty_io.c2126) chrdev_open (fs/char_dev.c415) do_dentry_open (fs/open.c883) vfs_open (fs/open.c1014) ... Freed by task 1548 ... kfree (mm/slab_common.c1021) vc_port_destruct (drivers/tty/vt/vt.c1094) tty_port_destructor (drivers/tty/tty_port.c296) tty_port_put (drivers/tty/tty_port.c312) vt_disallocate_all (drivers/tty/vt/vt_ioctl.c662 (discriminator 2)) vt_ioctl (drivers/tty/vt/vt_ioctl.c903) tty_ioctl (drivers/tty/tty_io.c2776) ... The buggy address belongs to the object at ffff888113747800 which belongs to the cache kmalloc-1k of size 1024 The buggy address is located 424 bytes inside of 1024-byte region [ffff888113747800, ffff888113747c00) The buggy address belongs to the physical page page00000000b3fe6c7c refcount1 mapcount0 mapping0000000000000000 index0x0 pfn0x113740 head00000000b3fe6c7c order3 compound_mapcount0 subpages_mapcount0 compound_pincount0 anon flags 0x17ffffc0010200(slab|head|node=0|zone=2|lastcpupid=0x1fffff) raw 0017ffffc0010200 ffff888100042dc0 0000000000000000 dead000000000001 raw 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000 page dumped because kasan bad access detected Memory state around the buggy address ffff888113747880 fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff888113747900 fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb > ffff888113747980 fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff888113747a00 fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff888113747a80 fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ================================================================== Disabling lock debugging due to kernel taint",
    "keyphrases": {
        "rootcause": "",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.2.0-rc5",
        "component": "vc_screen move load of struct vc_data pointer in vcs_read()"
    }
}
