{
  "cveId": "CVE-2023-52599",
  "version": "1.0.0",
  "timestamp": "2024-12-19T22:22:49.126128+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolvedjfs fix array-index-out-of-bounds in diNewExt[Syz report]UBSAN array-index-out-of-bounds in fs/jfs/jfs_imap.c23602index -878706688 is out of range for type struct iagctl[128]CPU 1 PID 5065 Comm syz-executor282 Not tainted 6.7.0-rc4-syzkaller-00009-gbee0e7762ad2 #0Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c106 ubsan_epilogue lib/ubsan.c217 [inline] __ubsan_handle_out_of_bounds+0x11c/0x150 lib/ubsan.c348 diNewExt+0x3cf3/0x4000 fs/jfs/jfs_imap.c2360 diAllocExt fs/jfs/jfs_imap.c1949 [inline] diAllocAG+0xbe8/0x1e50 fs/jfs/jfs_imap.c1666 diAlloc+0x1d3/0x1760 fs/jfs/jfs_imap.c1587 ialloc+0x8f/0x900 fs/jfs/jfs_inode.c56 jfs_mkdir+0x1c5/0xb90 fs/jfs/namei.c225 vfs_mkdir+0x2f1/0x4b0 fs/namei.c4106 do_mkdirat+0x264/0x3a0 fs/namei.c4129 __do_sys_mkdir fs/namei.c4149 [inline] __se_sys_mkdir fs/namei.c4147 [inline] __x64_sys_mkdir+0x6e/0x80 fs/namei.c4147 do_syscall_x64 arch/x86/entry/common.c51 [inline] do_syscall_64+0x45/0x110 arch/x86/entry/common.c82 entry_SYSCALL_64_after_hwframe+0x63/0x6bRIP 00330x7fcb7e6a0b57Code ff ff 77 07 31 c0 c3 0f 1f 40 00 48 c7 c2 b8 ff ff ff f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 b8 53 00 00 00 0f 05 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48RSP 002b00007ffd83023038 EFLAGS 00000286 ORIG_RAX 0000000000000053RAX ffffffffffffffda RBX 00000000ffffffff RCX 00007fcb7e6a0b57RDX 00000000000a1020 RSI 00000000000001ff RDI 0000000020000140RBP 0000000020000140 R08 0000000000000000 R09 0000000000000000R10 0000000000000000 R11 0000000000000286 R12 00007ffd830230d0R13 0000000000000000 R14 0000000000000000 R15 0000000000000000[Analysis]When the agstart is too large, it can cause agno overflow.[Fix]After obtaining agno, if the value is invalid, exit the subsequent process.Modified the test from agno > MAXAG to agno >= MAXAG based on linux-nextreport by kernel test robot (Dan Carpenter).",
  "keyphrases": {
    "rootcause": "Array index out of bounds in `diNewExt` due to large `agstart` causing `agno` overflow.",
    "weakness": [
      "Improper bounds check on `agno` before accessing the `iagctl` array.",
      "array-index-out-of-bounds",
      "overflow"
    ],
    "impact": "Kernel crash due to out-of-bounds memory access.",
    "vector": [
      "Local",
      "triggered by creating a directory (mkdir) with a crafted filesystem."
    ],
    "attacker": "Local user capable of creating directories on a JFS filesystem.",
    "product": "Linux Kernel",
    "version": "6.7.0-rc4",
    "component": "JFS filesystem"
  },
  "mitreTechnicalImpacts": []
}