{
  "cveId": "CVE-2023-52503",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved tee amdtee fix use-after-free vulnerability in amdtee_close_session There is a potential race condition in amdtee_close_session that may cause use-after-free in amdtee_open_session. For instance, if a session has refcount == 1, and one thread tries to free this session via kref_put(&sess->refcount, destroy_session) the reference count will get decremented, and the next step would be to call destroy_session(). However, if in another thread, amdtee_open_session() is called before destroy_session() has completed execution, alloc_session() may return sess that will be freed up later in destroy_session() leading to use-after-free in amdtee_open_session. To fix this issue, treat decrement of sess->refcount and removal of sess from session list in destroy_session() as a critical section, so that it is executed atomically.",
  "keyphrases": {
    "rootcause": [
      "potential race condition",
      "use-after-free vulnerability"
    ],
    "weakness": "use-after-free",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "tee amdtee fix"
  },
  "mitreTechnicalImpacts": []
}