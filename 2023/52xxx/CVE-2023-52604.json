{
    "cveId": "CVE-2023-52604",
    "version": "1.0.0",
    "timestamp": "2024-12-17T08:36:27.567979+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedFSJFSUBSANarray-index-out-of-bounds in dbAdjTreeSyzkaller reported the following issueUBSAN array-index-out-of-bounds in fs/jfs/jfs_dmap.c28676index 196694 is out of range for type s8[1365] (aka signed char[1365])CPU 1 PID 109 Comm jfsCommit Not tainted 6.6.0-rc3-syzkaller #0Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 08/04/2023Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c106 ubsan_epilogue lib/ubsan.c217 [inline] __ubsan_handle_out_of_bounds+0x11c/0x150 lib/ubsan.c348 dbAdjTree+0x474/0x4f0 fs/jfs/jfs_dmap.c2867 dbJoin+0x210/0x2d0 fs/jfs/jfs_dmap.c2834 dbFreeBits+0x4eb/0xda0 fs/jfs/jfs_dmap.c2331 dbFreeDmap fs/jfs/jfs_dmap.c2080 [inline] dbFree+0x343/0x650 fs/jfs/jfs_dmap.c402 txFreeMap+0x798/0xd50 fs/jfs/jfs_txnmgr.c2534 txUpdateMap+0x342/0x9e0 txLazyCommit fs/jfs/jfs_txnmgr.c2664 [inline] jfs_lazycommit+0x47a/0xb70 fs/jfs/jfs_txnmgr.c2732 kthread+0x2d3/0x370 kernel/kthread.c388 ret_from_fork+0x48/0x80 arch/x86/kernel/process.c147 ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S304 ================================================================================Kernel panic - not syncing UBSAN panic_on_warn set ...CPU 1 PID 109 Comm jfsCommit Not tainted 6.6.0-rc3-syzkaller #0Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 08/04/2023Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c106 panic+0x30f/0x770 kernel/panic.c340 check_panic_on_warn+0x82/0xa0 kernel/panic.c236 ubsan_epilogue lib/ubsan.c223 [inline] __ubsan_handle_out_of_bounds+0x13c/0x150 lib/ubsan.c348 dbAdjTree+0x474/0x4f0 fs/jfs/jfs_dmap.c2867 dbJoin+0x210/0x2d0 fs/jfs/jfs_dmap.c2834 dbFreeBits+0x4eb/0xda0 fs/jfs/jfs_dmap.c2331 dbFreeDmap fs/jfs/jfs_dmap.c2080 [inline] dbFree+0x343/0x650 fs/jfs/jfs_dmap.c402 txFreeMap+0x798/0xd50 fs/jfs/jfs_txnmgr.c2534 txUpdateMap+0x342/0x9e0 txLazyCommit fs/jfs/jfs_txnmgr.c2664 [inline] jfs_lazycommit+0x47a/0xb70 fs/jfs/jfs_txnmgr.c2732 kthread+0x2d3/0x370 kernel/kthread.c388 ret_from_fork+0x48/0x80 arch/x86/kernel/process.c147 ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S304 Kernel Offset disabledRebooting in 86400 seconds..The issue is caused when the value of lp becomes greater thanCTLTREESIZE which is the max size of stree. Adding a simple checksolves this issue.DaveAs the function returns a void, good error handlingwould require a more intrusive code reorganization, so I modifiedOsamas patch at use WARN_ON_ONCE for lack of a cleaner option.The patch is tested via syzbot.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "array-index-out-of-bounds",
        "impact": "panic",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.6.0-rc3-syzkaller",
        "component": "dbAdjTree in fs/jfs/jfs_dmap.c"
    }
}
