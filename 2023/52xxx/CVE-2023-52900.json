{
  "cveId": "CVE-2023-52900",
  "version": "1.0.0",
  "timestamp": "2024-12-06T11:32:07.789868+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolved nilfs2 fix general protection fault in nilfs_btree_insert() If nilfs2 reads a corrupted disk image and tries to reads a b-tree node block by calling __nilfs_btree_get_block() against an invalid virtual block address, it returns -ENOENT because conversion of the virtual block address to a disk block address fails. However, this return value is the same as the internal code that b-tree lookup routines return to indicate that the block being searched does not exist, so functions that operate on that b-tree may misbehave. When nilfs_btree_insert() receives this spurious not found code from nilfs_btree_do_lookup(), it misunderstands that the not found check was successful and continues the insert operation using incomplete lookup path data, causing the following crash general protection fault, probably for non-canonical address 0xdffffc0000000005 0000 [#1] PREEMPT SMP KASAN KASAN null-ptr-deref in range [0x0000000000000028-0x000000000000002f] ... RIP 0010nilfs_btree_get_nonroot_node fs/nilfs2/btree.c418 [inline] RIP 0010nilfs_btree_prepare_insert fs/nilfs2/btree.c1077 [inline] RIP 0010nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c1238 Code bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89 ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 80 3c 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02 ... Call Trace nilfs_bmap_do_insert",
  "keyphrases": {
    "rootcause": "",
    "weakness": "null-ptr-deref",
    "impact": [
      "crash",
      "general protection fault"
    ],
    "vector": "corrupted disk image",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "nilfs2"
  },
  "mitreTechnicalImpacts": []
}