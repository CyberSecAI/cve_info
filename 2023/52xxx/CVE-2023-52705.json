{
    "cveId": "CVE-2023-52705",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved nilfs2 fix underflow in second superblock position calculations Macro NILFS_SB2_OFFSET_BYTES, which computes the position of the second superblock, underflows when the argument device size is less than 4096 bytes. Therefore, when using this macro, it is necessary to check in advance that the device size is not less than a lower limit, or at least that underflow does not occur. The current nilfs2 implementation lacks this check, causing out-of-bound block access when mounting devices smaller than 4096 bytes I/O error, dev loop0, sector 36028797018963960 op 0x0(READ) flags 0x0 phys_seg 1 prio class 2 NILFS (loop0) unable to read secondary superblock (blocksize = 1024) In addition, when trying to resize the filesystem to a size below 4096 bytes, this underflow occurs in nilfs_resize_fs(), passing a huge number of segments to nilfs_sufile_resize(), corrupting parameters such as the number of segments in superblocks. This causes excessive loop iterations in nilfs_sufile_resize() during a subsequent resize ioctl, causing semaphore ns_segctor_sem to block for a long time and hang the writer thread INFO task segctord5067 blocked for more than 143 seconds. Not tainted 6.2.0-rc8-syzkaller-00015-gf6feea56f66d #0 echo 0 > /proc/sys/kernel/hung_task_timeout_secs disables this message. tasksegctord stateD stack23456 pid5067 ppid2 flags0x00004000 Call Trace context_sw",
    "keyphrases": {
        "rootcause": "underflow in second superblock position calculations",
        "weakness": "",
        "impact": "out-of-bound block access",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "nilfs2"
    }
}
