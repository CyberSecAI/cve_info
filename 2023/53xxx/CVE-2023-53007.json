{
    "cveId": "CVE-2023-53007",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved tracing Make sure trace_printk() can output as soon as it can be used Currently trace_printk() can be used as soon as early_trace_init() is called from start_kernel(). But if a crash happens, and ftrace_dump_on_oops is set on the kernel command line, all you get will be [ 0.456075] -0 0dN.2. 347519us Unknown type 6 [ 0.456075] -0 0dN.2. 353141us Unknown type 6 [ 0.456075] -0 0dN.2. 358684us Unknown type 6 This is because the trace_printk() event (type 6) hasnt been registered yet. That gets done via an early_initcall(), which may be early, but not early enough. Instead of registering the trace_printk() event (and other ftrace events, which are not trace events) via an early_initcall(), have them registered at the same time that trace_printk() can be used. This way, if there is a crash before early_initcall(), then the trace_printk()s will actually be useful.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "trace_printk() can output as soon as early_trace_init() is called from start_kernel()",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "tracing"
    }
}
