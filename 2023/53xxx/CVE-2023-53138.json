{
    "cveId": "CVE-2023-53138",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net caif Fix use-after-free in cfusbl_device_notify() syzbot reported use-after-free in cfusbl_device_notify() [1]. This causes a stack trace like below BUG KASAN use-after-free in cfusbl_device_notify+0x7c9/0x870 net/caif/caif_usb.c138 Read of size 8 at addr ffff88807ac4e6f0 by task kworker/u46/1214 CPU 0 PID 1214 Comm kworker/u46 Not tainted 5.19.0-rc3-syzkaller-00146-g92f20ff72066 #0 Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011 Workqueue netns cleanup_net Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0xcd/0x134 lib/dump_stack.c106 print_address_description.constprop.0.cold+0xeb/0x467 mm/kasan/report.c313 print_report mm/kasan/report.c429 [inline] kasan_report.cold+0xf4/0x1c6 mm/kasan/report.c491 cfusbl_device_notify+0x7c9/0x870 net/caif/caif_usb.c138 notifier_call_chain+0xb5/0x200 kernel/notifier.c87 call_netdevice_notifiers_info+0xb5/0x130 net/core/dev.c1945 call_netdevice_notifiers_extack net/core/dev.c1983 [inline] call_netdevice_notifiers net/core/dev.c1997 [inline] netdev_wait_allrefs_any net/core/dev.c10227 [inline] netdev_run_todo+0xbc0/0x10f0 net/core/dev.c10341 default_device_exit_batch+0x44e/0x590 net/core/dev.c11334 ops_exit_list+0x125/0x170 net/core/net_namespace.c167 cleanup_net+0x4ea/0xb00 net/core/net_namespace.c594 process_one_work+0x996/0x1610 kernel/workqueue.c2289 worker_thread+0x665/0x1080 kernel/workqueue.c2436 kthread+0x2e9/0x3a0 kernel/kthread.c376 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S302 When unregistering a net device, unregister_netdevice_many_notify() sets the devices reg_state to NETREG_UNREGISTERING, calls notifiers with NETDEV_UNREGISTER, and adds the device to the todo list. Later on, devices in the todo list are processed by netdev_run_todo(). netdev_run_todo() waits devices reference count become 1 while rebdoadcasting NETDEV_UNREGISTER notification. When cfusbl_device_notify() is called with NETDEV_UNREGISTER multiple times, the parent device might be freed. This could cause UAF. Processing NETDEV_UNREGISTER multiple times also causes inbalance of reference count for the module. This patch fixes the issue by accepting only first NETDEV_UNREGISTER notification.",
    "keyphrases": {
        "rootcause": "use-after-free",
        "weakness": "use-after-free",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "5.19.0-rc3-syzkaller-00146-g92f20ff72066",
        "component": "net caif"
    }
}
