{
    "cveId": "CVE-2023-53089",
    "version": "1.0.0",
    "timestamp": "2025-07-04T16:12:41.853043+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved ext4 fix task hung in ext4_xattr_delete_inode Syzbot reported a hung task problem ================================================================== INFO task syz-executor2325073 blocked for more than 143 seconds. Not tainted 6.2.0-rc2-syzkaller-00024-g512dee0c00ad #0 echo 0 > /proc/sys/kernel/hung_task_timeout_secs disables this message. tasksyz-exec232 stateD stack21024 pid5073 ppid5072 flags0x00004004 Call Trace context_switch kernel/sched/core.c5244 [inline] __schedule+0x995/0xe20 kernel/sched/core.c6555 schedule+0xcb/0x190 kernel/sched/core.c6631 __wait_on_freeing_inode fs/inode.c2196 [inline] find_inode_fast+0x35a/0x4c0 fs/inode.c950 iget_locked+0xb1/0x830 fs/inode.c1273 __ext4_iget+0x22e/0x3ed0 fs/ext4/inode.c4861 ext4_xattr_inode_iget+0x68/0x4e0 fs/ext4/xattr.c389 ext4_xattr_inode_dec_ref_all+0x1a7/0xe50 fs/ext4/xattr.c1148 ext4_xattr_delete_inode+0xb04/0xcd0 fs/ext4/xattr.c2880 ext4_evict_inode+0xd7c/0x10b0 fs/ext4/inode.c296 evict+0x2a4/0x620 fs/inode.c664 ext4_orphan_cleanup+0xb60/0x1340 fs/ext4/orphan.c474 __ext4_fill_super fs/ext4/super.c5516 [inline] ext4_fill_super+0x81cd/0x8700 fs/ext4/super.c5644 get_tree_bdev+0x400/0x620 fs/super.c1282 vfs_get_tree+0x88/0x270 fs/super.c1489 do_new_mount+0x289/0xad0 fs/namespace.c3145 do_mount fs/namespace.c3488 [inline] __do_sys_mount fs/namespace.c3697 [inline] __se_sys_mount+0x2d3/0x3c0 fs/namespace.c3674 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x63/0xcd RIP 00330x7fa5406fd5ea RSP 002b00007ffc7232f968 EFLAGS 00000202 ORIG_RAX 00000000000000a5 RAX ffffffffffffffda RBX 0000000000000003 RCX 00007fa5406fd5ea RDX 0000000020000440 RSI 0000000020000000 RDI 00007ffc7232f970 RBP 00007ffc7232f970 R08 00007ffc7232f9b0 R09 0000000000000432 R10 0000000000804a03 R11 0000000000000202 R12 0000000000000004 R13 0000555556a7a2c0 R14 00007ffc7232f9b0 R15 0000000000000000 ================================================================== The problem is that the inode contains an xattr entry with ea_inum of 15 when cleaning up an orphan inode . When evict inode , the reference counting of the corresponding EA inode is decreased. When EA inode is found by find_inode_fast() in __ext4_iget(), it is found that the EA inode holds the I_FREEING flag and waits for the EA inode to complete deletion. As a result, when inode is being deleted, we wait for inode to complete the deletion, resulting in an infinite loop and triggering Hung Task. To solve this problem, we only need to check whether the ino of EA inode and parent is the same before getting EA inode.",
    "keyphrases": {
        "rootcause": "infinite loop",
        "weakness": "",
        "impact": "Hung Task",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "6.2.0-rc2-syzkaller-00024-g512dee0c00ad",
        "component": "ext4"
    }
}
