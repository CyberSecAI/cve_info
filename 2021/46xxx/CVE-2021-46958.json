{
    "cveId": "CVE-2021-46958",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedbtrfs fix race between transaction aborts and fsyncs leading to use-after-freeThere is a race between a task aborting a transaction during a commit,a task doing an fsync and the transaction kthread, which leads to anuse-after-free of the log root tree. When this happens, it results in astack trace like the following BTRFS info (device dm-0) forced readonly BTRFS warning (device dm-0) Skipping commit of aborted transaction. BTRFS error (device dm-0) in cleanup_transaction1958 errno=-5 IO failure BTRFS warning (device dm-0) lost page write due to IO error on /dev/mapper/error-test (-5) BTRFS warning (device dm-0) Skipping commit of aborted transaction. BTRFS warning (device dm-0) direct IO failed ino 261 rw 0,0 sector 0xa4e8 len 4096 err no 10 BTRFS error (device dm-0) error writing primary super block to device 1 BTRFS warning (device dm-0) direct IO failed ino 261 rw 0,0 sector 0x12e000 len 4096 err no 10 BTRFS warning (device dm-0) direct IO failed ino 261 rw 0,0 sector 0x12e008 len 4096 err no 10 BTRFS warning (device dm-0) direct IO failed ino 261 rw 0,0 sector 0x12e010 len 4096 err no 10 BTRFS error (device dm-0) in write_all_supers4110 errno=-5 IO failure (1 errors while writing supers) BTRFS error (device dm-0) in btrfs_sync_log3308 errno=-5 IO failure general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b68 0000",
    "keyphrases": {
        "rootcause": "Race condition between transaction abort, fsync and the transaction kthread",
        "weakness": "Use-after-free",
        "impact": "System crash due to general protection fault, file system corruption",
        "vector": "Local",
        "attacker": "Local user",
        "product": "Linux Kernel",
        "version": "Unspecified",
        "component": "btrfs"
    }
}
