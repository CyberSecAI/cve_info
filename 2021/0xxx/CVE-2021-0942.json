{
    "cveId": "CVE-2021-0942",
    "version": "1.0.0",
    "timestamp": "2024-12-15T20:24:27.876763+00:00",
    "description": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expressionsPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex])With the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.Product AndroidVersions Android SoCAndroid ID A-238904312",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "OOB read/write",
        "vector": "ioctl",
        "attacker": "untrusted app",
        "product": "Android",
        "version": "",
        "component": ""
    }
}
