{
    "cveId": "CVE-2021-41106",
    "version": "1.0.0",
    "timestamp": "2024-12-15T20:24:27.876763+00:00",
    "description": "JWT is a library to work with JSON Web Token and JSON Web Signature. Prior to versions 3.4.6, 4.0.4, and 4.1.5, users of HMAC-based algorithms (HS256, HS384, and HS512) combined with `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference` as key are having their tokens issued/validated using the file path as hashing key - instead of the contents. The HMAC hashing functions take any string as input and, since users can issue and validate tokens, users are lead to believe that everything works properly. Versions 3.4.6, 4.0.4, and 4.1.5 have been patched to always load the file contents, deprecated the `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference`, and suggest `Lcobucci\\JWT\\Signer\\Key\\InMemory` as the alternative. As a workaround, use `Lcobucci\\JWT\\Signer\\Key\\InMemory` instead of `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference` to create the instances of ones keys.",
    "keyphrases": {
        "rootcause": "using file path as hashing key instead of contents",
        "weakness": "",
        "impact": "tokens issued/validated using file path as hashing key",
        "vector": "",
        "attacker": "",
        "product": "JWT library",
        "version": "Prior to versions 3.4.6, 4.0.4, and 4.1.5",
        "component": "HMAC-based algorithms (HS256, HS384, and HS512) combined with Lcobucci\\JWT\\Signer\\Key\\LocalFileReference"
    }
}
