{
  "cveId": "CVE-2021-47428",
  "version": "1.0.0",
  "timestamp": "2024-12-19T22:22:49.126128+00:00",
  "description": "In the Linux kernel, the following vulnerability has been resolvedpowerpc/64s fix program check interrupt emergency stack pathEmergency stack path was jumping into a 3 label inside the__GEN_COMMON_BODY macro for the normal path after it had finished,rather than jumping over it. By a small miracle this is the correctplace to build up a new interrupt frame with the existing stackpointer, so things basically worked okay with an added weird looking700 trap frame on top (which had the wrong ->nip so it didnt decodebug messages either).Fix this by avoiding using numeric labels when jumping over non-trivialmacros.Before LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV Modules linked in CPU 0 PID 88 Comm sh Not tainted 5.15.0-rc2-00034-ge057cdade6e5 #2637 NIP 7265677368657265 LR c00000000006c0c8 CTR c0000000000097f0 REGS c0000000fffb3a50 TRAP 0700 Not tainted MSR 9000000000021031 CR 00000700 XER 20040000 CFAR c0000000000098b0 IRQMASK 0 GPR00 c00000000006c964 c0000000fffb3cf0 c000000001513800 0000000000000000 GPR04 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299 GPR08 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8 GPR12 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001 GPR16 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8 GPR20 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158 GPR24 0000000002000000 0000000002000000 0000000000000255 0000000000000300 GPR28 c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80 NIP [7265677368657265] 0x7265677368657265 LR [c00000000006c0c8] ___do_page_fault+0x3f8/0xb10 Call Trace [c0000000fffb3cf0] [c00000000000bdac] soft_nmi_common+0x13c/0x1d0 (unreliable) --- interrupt 700 at decrementer_common_virt+0xb8/0x230 NIP c0000000000098b8 LR c00000000006c0c8 CTR c0000000000097f0 REGS c0000000fffb3d60 TRAP 0700 Not tainted MSR 9000000000021031 CR 22424282 XER 20040000 CFAR c0000000000098b0 IRQMASK 0 GPR00 c00000000006c964 0000000000002400 c000000001513800 0000000000000000 GPR04 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299 GPR08 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8 GPR12 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001 GPR16 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8 GPR20 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158 GPR24 0000000002000000 0000000002000000 0000000000000255 0000000000000300 GPR28 c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80 NIP [c0000000000098b8] decrementer_common_virt+0xb8/0x230 LR [c00000000006c0c8] ___do_page_fault+0x3f8/0xb10 --- interrupt 700 Instruction dump XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX ---[ end trace 6d28218e0cc3c949 ]---After ------------[ cut here ]------------ kernel BUG at arch/powerpc/kernel/exceptions-64s.S491! Oops Exception in kernel mode, sig 5",
  "keyphrases": {
    "rootcause": [
      "The emergency stack path was jumping into a label inside the __GEN_COMMON_BODY macro for the normal path after it had finished",
      "rather than jumping over it. This resulted in a corrupted stack frame."
    ],
    "weakness": [
      "Improper control flow in macro usage",
      "specifically with numeric labels when jumping over non-trivial macros."
    ],
    "impact": [
      "Kernel crash due to a corrupted stack frame and incorrect interrupt handling.",
      "Oops",
      "kernel BUG"
    ],
    "vector": "The vulnerability is triggered by a program check interrupt leading to emergency stack usage on powerpc/64s architecture.",
    "attacker": [
      "Not applicable",
      "this is a bug in the kernel code."
    ],
    "product": "Linux Kernel",
    "version": "5.15.0-rc2",
    "component": "powerpc/64s architecture specific exception handling"
  },
  "mitreTechnicalImpacts": []
}