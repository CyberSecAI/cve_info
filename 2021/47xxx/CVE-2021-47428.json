{
    "cveId": "CVE-2021-47428",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved powerpc/64s fix program check interrupt emergency stack path Emergency stack path was jumping into a 3 label inside the __GEN_COMMON_BODY macro for the normal path after it had finished, rather than jumping over it. By a small miracle this is the correct place to build up a new interrupt frame with the existing stack pointer, so things basically worked okay with an added weird looking 700 trap frame on top (which had the wrong ->nip so it didnt decode bug messages either). Fix this by avoiding using numeric labels when jumping over non-trivial macros. Before LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV Modules linked in CPU 0 PID 88 Comm sh Not tainted 5.15.0-rc2-00034-ge057cdade6e5 #2637 NIP 7265677368657265 LR c00000000006c0c8 CTR c0000000000097f0 REGS c0000000fffb3a50 TRAP 0700 Not tainted MSR 9000000000021031 CR 00000700 XER 20040000 CFAR c0000000000098b0 IRQMASK 0 GPR00 c00000000006c964 c0000000fffb3cf0 c000000001513800 0000000000000000 GPR04 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299 GPR08 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8 GPR12 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001 GPR16 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8 GPR20 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158 GPR24 0000000002000000 0"
}
