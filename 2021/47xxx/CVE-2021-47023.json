{
    "cveId": "CVE-2021-47023",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net marvell prestera fix port event handling on init For some reason there might be a crash during ports creation if port events are handling at the same time because fw may send initial port event with down state. The crash points to cancel_delayed_work() which is called when port went is down. Currently I did not find out the real cause of the issue, so fixed it by cancel port stats work only if previous ports state was up & runnig. The following is the crash which can be triggered [ 28.311104] Unable to handle kernel paging request at virtual address 000071775f776600 [ 28.319097] Mem abort info [ 28.321914] ESR = 0x96000004 [ 28.324996] EC = 0x25 DABT (current EL), IL = 32 bits [ 28.330350] SET = 0, FnV = 0 [ 28.333430] EA = 0, S1PTW = 0 [ 28.336597] Data abort info [ 28.339499] ISV = 0, ISS = 0x00000004 [ 28.343362] CM = 0, WnR = 0 [ 28.346354] user pgtable 4k pages, 48-bit VAs, pgdp=0000000100bf7000 [ 28.352842] [000071775f776600] pgd=0000000000000000, p4d=0000000000000000 [ 28.359695] Internal error Oops 96000004 [#1] PREEMPT SMP [ 28.365310] Modules linked in prestera_pci(+) prestera uio_pdrv_genirq [ 28.372005] CPU 0 PID 1291 Comm kworker/01H Not tainted 5.11.0-rc4 #1 [ 28.378846] Hardware name DNI AmazonGo1 A7040 board (DT) [ 28.384283] Workqueue prestera_fw_wq prestera_fw_evt_work_fn [prestera_pci] [ 28.391413] pstate 60000085 (",
    "keyphrases": {
        "rootcause": "",
        "weakness": "crash during ports creation",
        "impact": "crash",
        "vector": "handling port events at the same time",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net marvell prestera fix port event handling on init"
    }
}
