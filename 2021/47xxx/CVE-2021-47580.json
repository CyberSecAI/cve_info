{
    "cveId": "CVE-2021-47580",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedscsi scsi_debug Fix type in min_t to avoid stack OOBChange min_t() to use type u32 instead of type int to avoid stack outof bounds. With min_t() type int the values get sign extended and thelarger value gets used causing stack out of bounds.BUG KASAN stack-out-of-bounds in memcpy include/linux/fortify-string.h191 [inline]BUG KASAN stack-out-of-bounds in sg_copy_buffer+0x1de/0x240 lib/scatterlist.c976Read of size 127 at addr ffff888072607128 by task syz-executor.7/18707CPU 1 PID 18707 Comm syz-executor.7 Not tainted 5.15.0-syzk #1Hardware name Red Hat KVM, BIOS 1.13.0-2Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x89/0xb5 lib/dump_stack.c106 print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c256 __kasan_report mm/kasan/report.c442 [inline] kasan_report.cold.14+0x7d/0x117 mm/kasan/report.c459 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0x1a3/0x210 mm/kasan/generic.c189 memcpy+0x23/0x60 mm/kasan/shadow.c65 memcpy include/linux/fortify-string.h191 [inline] sg_copy_buffer+0x1de/0x240 lib/scatterlist.c976 sg_copy_from_buffer+0x33/0x40 lib/scatterlist.c1000 fill_from_dev_buffer.part.34+0x82/0x130 drivers/scsi/scsi_debug.c1162 fill_from_dev_buffer drivers/scsi/scsi_debug.c1888 [inline] resp_readcap16+0x365/0x3b0 drivers/scsi/scsi_debug.c1887 schedule_resp+0x4d8/0x1a70 drivers/scsi/scsi_debug.c5478 scsi_debug_queuecommand+0x8c9/0x1ec0 drivers/scsi/scsi_debug.c7533 scsi_dispatch_cmd drivers/scsi/scsi_lib.c1520 [inline] scsi_queue_rq+0x16b0/0x2d40 drivers/scsi/scsi_lib.c1699 blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c1639 __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c325 blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c358 __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c1761 __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c1838 blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c1891 blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c474 blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c62 sg_common_write.isra.18+0xeb3/0x2000 drivers/scsi/sg.c836 sg_new_write.isra.19+0x570/0x8c0 drivers/scsi/sg.c774 sg_ioctl_common+0x14d6/0x2710 drivers/scsi/sg.c939 sg_ioctl+0xa2/0x180 drivers/scsi/sg.c1165 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c874 [inline] __se_sys_ioctl fs/ioctl.c860 [inline] __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c860 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x3a/0x80 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x44/0xae",
    "keyphrases": {
        "rootcause": "The min_t() macro was using type int, which could lead to sign extension issues causing out of bounds access when used in memory copy operations. The fix was to change min_t() to use type u32.",
        "weakness": "Incorrect type used in min_t() macro leading to sign extension and out-of-bounds access.",
        "impact": "Stack out-of-bounds read leading to kernel crash.",
        "vector": "Through a crafted ioctl call to the SCSI generic (sg) driver, which then triggers the vulnerable code path in scsi_debug.",
        "attacker": "A local attacker with the ability to make ioctl calls to a vulnerable device, or potentially a remote attacker if the device is exposed to the network.",
        "product": "Linux Kernel",
        "version": "5.15.0-syzk",
        "component": "scsi_debug"
    }
}
