{
    "cveId": "CVE-2021-47572",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net nexthop fix null pointer dereference when IPv6 is not enabled When we try to add an IPv6 nexthop and IPv6 is not enabled (!CONFIG_IPV6) well hit a NULL pointer dereference[1] in the error path of nh_create_ipv6() due to calling ipv6_stub->fib6_nh_release. The bug has been present since the beginning of IPv6 nexthop gateway support. Commit 1aefd3de7bc6 (ipv6 Add fib6_nh_init and release to stubs) tells us that only fib6_nh_init has a dummy stub because fib6_nh_release should not be called if fib6_nh_init returns an error, but the commit below added a call to ipv6_stub->fib6_nh_release in its error path. To fix it return the dummy stubs -EAFNOSUPPORT error directly without calling ipv6_stub->fib6_nh_release in nh_create_ipv6()s error path. [1] Output is a bit truncated, but it clearly shows the error. BUG kernel NULL pointer dereference, address 000000000000000000 #PF supervisor instruction fetch in kernel modede #PF error_code(0x0010) - not-present pagege PGD 0 P4D 0 Oops 0010 [#1] PREEMPT SMP NOPTI CPU 4 PID 638 Comm ip Kdump loaded Not tainted 5.16.0-rc1+ #446 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04/01/2014 RIP 00100x0 Code Unable to access opcode bytes at RIP 0xffffffffffffffd6. RSP 0018ffff888109f5b8f0 EFLAGS 00010286^Ac RAX 0000000000000000 RBX ffff888109f5ba28 RCX 0000000000000000 RDX 0000000000000000 RSI 000000000000000",
    "keyphrases": {
        "rootcause": "null pointer dereference",
        "weakness": "",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
