{
    "cveId": "CVE-2021-47531",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved drm/msm Fix mmap to include VM_IO and VM_DONTDUMP In commit 510410bfc034 (drm/msm Implement mmap as GEM object function) we switched to a new/cleaner method of doing things. Thats good, but we missed a little bit. Before that commit, we used to _first_ run through the drm_gem_mmap_obj() case where `obj->funcs->mmap()` was NULL. That meant that we ran vma->vm_flags |= VM_IO | VM_PFNMAP | VM_DONTEXPAND | VM_DONTDUMP vma->vm_page_prot = pgprot_writecombine(vm_get_page_prot(vma->vm_flags)) vma->vm_page_prot = pgprot_decrypted(vma->vm_page_prot) ...and _then_ we modified those mappings with our own. Now that `obj->funcs->mmap()` is no longer NULL we dont run the default code. It looks like the fact that the vm_flags got VM_IO / VM_DONTDUMP was important because were now getting crashes on Chromebooks that use ARC++ while logging out. Specifically a crash that looks like this (this is on a 5.10 kernel w/ relevant backports but also seen on a 5.15 kernel) Unable to handle kernel paging request at virtual address ffffffc008000000 Mem abort info ESR = 0x96000006 EC = 0x25 DABT (current EL), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 Data abort info ISV = 0, ISS = 0x00000006 CM = 0, WnR = 0 swapper pgtable 4k pages, 39-bit VAs, pgdp=000000008293d000 [ffffffc008000000] pgd=00000001002b3003, p4d=00000001002b3003, pud=00000001002b3003,",
    "keyphrases": {
        "rootcause": "regression in drm/msm mmap handling",
        "weakness": "",
        "impact": "crashes on Chromebooks that use ARC++ while logging out",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "5.10, 5.15",
        "component": "drm/msm"
    }
}
