{
    "cveId": "CVE-2021-47288",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved media ngene Fix out-of-bounds bug in ngene_command_config_free_buf() Fix an 11-year old bug in ngene_command_config_free_buf() while addressing the following warnings caught with -Warray-bounds arch/alpha/include/asm/string.h2216 warning __builtin_memcpy offset [12, 16] from the object at com is out of the bounds of referenced subobject config with type unsigned char at offset 10 [-Warray-bounds] arch/x86/include/asm/string_32.h18225 warning __builtin_memcpy offset [12, 16] from the object at com is out of the bounds of referenced subobject config with type unsigned char at offset 10 [-Warray-bounds] The problem is that the original code is trying to copy 6 bytes of data into a one-byte size member _config_ of the wrong structue FW_CONFIGURE_BUFFERS, in a single call to memcpy(). This causes a legitimate compiler warning because memcpy() overruns the length of &com.cmd.ConfigureBuffers.config. It seems that the right structure is FW_CONFIGURE_FREE_BUFFERS, instead, because it contains 6 more members apart from the header _hdr_. Also, the name of the function ngene_command_config_free_buf() suggests that the actual intention is to ConfigureFreeBuffers, instead of ConfigureBuffers (which takes place in the function ngene_command_config_buf(), above). Fix this by enclosing those 6 members of struct FW_CONFIGURE_FREE_BUFFERS into new struct config, and use &com.cmd.ConfigureFreeBuf",
    "keyphrases": {
        "rootcause": "memory corruption",
        "weakness": "out-of-bounds bug",
        "impact": "denial of service",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "ngene_command_config_free_buf()"
    }
}
