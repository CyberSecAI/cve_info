{
    "cveId": "CVE-2021-47169",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved serial rp2 use request_firmware instead of request_firmware_nowait In rp2_probe, the driver registers rp2_uart_interrupt then calls rp2_fw_cb through request_firmware_nowait. In rp2_fw_cb, if the firmware dont exists, function just return without initializing ports of rp2_card. But now the interrupt handler function has been registered, and when an interrupt comes, rp2_uart_interrupt may access those ports then causing NULL pointer dereference or other bugs. Because the driver does some initialization work in rp2_fw_cb, in order to make the driver ready to handle interrupts, request_firmware should be used instead of asynchronous request_firmware_nowait. This report reveals it INFO trying to register non-static key. the code is fine but needs lockdep annotation. turning off the locking correctness validator. CPU 2 PID 0 Comm swapper/2 Not tainted 4.19.177-gdba4159c14ef-dirty #45 Hardware name QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59- gc9ba5276e321-prebuilt.qemu.org 04/01/2014 Call Trace __dump_stack lib/dump_stack.c77 [inline] dump_stack+0xec/0x156 lib/dump_stack.c118 assign_lock_key kernel/locking/lockdep.c727 [inline] register_lock_class+0x14e5/0x1ba0 kernel/locking/lockdep.c753 __lock_acquire+0x187/0x3750 kernel/locking/lockdep.c3303 lock_acquire+0x124/0x340 kernel/locking/lockdep.c3907 __raw_spin_lock include/linux/spinlock_api_smp.",
    "keyphrases": {
        "rootcause": "",
        "weakness": "NULL pointer dereference",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "4.19.177-gdba4159c14ef-dirty",
        "component": "serial rp2 driver"
    }
}
