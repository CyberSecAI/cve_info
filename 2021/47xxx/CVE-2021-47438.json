{
    "cveId": "CVE-2021-47438",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net/mlx5e Fix memory leak in mlx5_core_destroy_cq() error path Prior to this patch in case mlx5_core_destroy_cq() failed it returns without completing all destroy operations and that leads to memory leak. Instead, complete the destroy flow before return error. Also move mlx5_debug_cq_remove() to the beginning of mlx5_core_destroy_cq() to be symmetrical with mlx5_core_create_cq(). kmemleak complains on unreferenced object 0xc000000038625100 (size 64) comm ethtool, pid 28301, jiffies 4298062946 (age 785.380s) hex dump (first 32 bytes) 60 01 48 94 00 00 00 c0 b8 05 34 c3 00 00 00 c0 `.H.......4..... 02 00 00 00 00 00 00 00 00 db 7d c1 00 00 00 c0 ..........}..... backtrace [] add_res_tree+0xd0/0x270 [mlx5_core] [] mlx5_debug_cq_add+0x5c/0xc0 [mlx5_core] [] mlx5_core_create_cq+0x1d0/0x2d0 [mlx5_core] [] mlx5e_create_cq+0x210/0x3f0 [mlx5_core] [] mlx5e_open_cq+0xb4/0x130 [mlx5_core] [] mlx5e_ptp_open+0x7f4/0xe10 [mlx5_core] [] mlx5e_open_channels+0x9cc/0x13e0 [mlx5_core] [] mlx5e_switch_priv_channels+0xa4/0x230 [mlx5_core] [] mlx5e_safe_switch_params+0x14c/0x300 [mlx5_core] [] set_pflag_tx_port_ts+0x9c/0x160 [mlx5_core] [] mlx5e_set_priv_flags+0xd0/",
    "keyphrases": {
        "rootcause": "",
        "weakness": "memory leak",
        "impact": "",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "net/mlx5e"
    }
}
