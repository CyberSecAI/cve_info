{
    "cveId": "CVE-2021-47578",
    "version": "1.0.0",
    "timestamp": "2024-12-19T22:22:49.126128+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolvedscsi scsi_debug Dont call kcalloc() if size arg is zeroIf the size arg to kcalloc() is zero, it returns ZERO_SIZE_PTR. Because ofthat, for a following NULL pointer check to work on the returned pointer,kcalloc() must not be called with the size arg equal to zero. Return earlywithout error before the kcalloc() call if size arg is zero.BUG KASAN null-ptr-deref in memcpy include/linux/fortify-string.h191 [inline]BUG KASAN null-ptr-deref in sg_copy_buffer+0x138/0x240 lib/scatterlist.c974Write of size 4 at addr 0000000000000010 by task syz-executor.1/22789CPU 1 PID 22789 Comm syz-executor.1 Not tainted 5.15.0-syzk #1Hardware name Red Hat KVM, BIOS 1.13.0-2Call Trace __dump_stack lib/dump_stack.c88 [inline] dump_stack_lvl+0x89/0xb5 lib/dump_stack.c106 __kasan_report mm/kasan/report.c446 [inline] kasan_report.cold.14+0x112/0x117 mm/kasan/report.c459 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0x1a3/0x210 mm/kasan/generic.c189 memcpy+0x3b/0x60 mm/kasan/shadow.c66 memcpy include/linux/fortify-string.h191 [inline] sg_copy_buffer+0x138/0x240 lib/scatterlist.c974 do_dout_fetch drivers/scsi/scsi_debug.c2954 [inline] do_dout_fetch drivers/scsi/scsi_debug.c2946 [inline] resp_verify+0x49e/0x930 drivers/scsi/scsi_debug.c4276 schedule_resp+0x4d8/0x1a70 drivers/scsi/scsi_debug.c5478 scsi_debug_queuecommand+0x8c9/0x1ec0 drivers/scsi/scsi_debug.c7533 scsi_dispatch_cmd drivers/scsi/scsi_lib.c1520 [inline] scsi_queue_rq+0x16b0/0x2d40 drivers/scsi/scsi_lib.c1699 blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c1639 __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c325 blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c358 __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c1761 __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c1838 blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c1891 blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c474 blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c62 blk_execute_rq+0xdb/0x360 block/blk-exec.c102 sg_scsi_ioctl drivers/scsi/scsi_ioctl.c621 [inline] scsi_ioctl+0x8bb/0x15c0 drivers/scsi/scsi_ioctl.c930 sg_ioctl_common+0x172d/0x2710 drivers/scsi/sg.c1112 sg_ioctl+0xa2/0x180 drivers/scsi/sg.c1165 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c874 [inline] __se_sys_ioctl fs/ioctl.c860 [inline] __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c860 do_syscall_x64 arch/x86/entry/common.c50 [inline] do_syscall_64+0x3a/0x80 arch/x86/entry/common.c80 entry_SYSCALL_64_after_hwframe+0x44/0xae",
    "keyphrases": {
        "rootcause": "The `kcalloc` function was called with a size argument of zero, which returns `ZERO_SIZE_PTR`. Subsequent dereferencing of this pointer leads to a null pointer dereference.",
        "weakness": "The code did not check for a zero-size argument before calling `kcalloc`, leading to a null pointer return value that was later dereferenced.",
        "impact": "A null pointer dereference leading to a kernel crash.",
        "vector": "The vulnerability can be triggered through the `scsi_debug` driver, specifically through the `sg_ioctl` interface which eventually calls `do_dout_fetch` with a size of 0, leading to the `kcalloc(size, 1, GFP_KERNEL)` with size=0",
        "attacker": "An attacker who can control the size argument passed to the vulnerable code path. In the case of the reported bug, this occurs via the `sg_ioctl` syscall, using a crafted SCSI command sent to a `scsi_debug` device",
        "product": "Linux Kernel",
        "version": "5.15.0-syzk",
        "component": "drivers/scsi/scsi_debug.c"
    }
}
