{
    "cveId": "CVE-2021-47444",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved drm/edid In connector_bad_edid() cap num_of_ext by num_blocks read In commit e11f5bd8228f (drm Add support for DP 1.4 Compliance edid corruption test) the function connector_bad_edid() started assuming that the memory for the EDID passed to it was big enough to hold `edid[0x7e] + 1` blocks of data (1 extra for the base block). It completely ignored the fact that the function was passed `num_blocks` which indicated how much memory had been allocated for the EDID. Lets fix this by adding a bounds check. This is important for handling the case where theres an error in the first block of the EDID. In that case we will call connector_bad_edid() without having re-allocated memory based on `edid[0x7e]`.",
    "keyphrases": {
        "rootcause": "off-by-one error",
        "weakness": "",
        "impact": "out-of-bounds read",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": "drm/edid"
    }
}
