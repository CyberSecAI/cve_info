{
    "cveId": "CVE-2021-47592",
    "version": "1.0.0",
    "timestamp": "2024-12-06T11:32:07.789868+00:00",
    "description": "In the Linux kernel, the following vulnerability has been resolved net stmmac fix tc flower deletion for VLAN priority Rx steering To replicate the issue- 1) Add 1 flower filter for VLAN Priority based frame steering- $ IFDEVNAME=eth0 $ tc qdisc add dev $IFDEVNAME ingress $ tc qdisc add dev $IFDEVNAME root mqprio num_tc 8 \\ map 0 1 2 3 4 5 6 7 0 0 0 0 0 0 0 0 \\ queues 1@0 1@1 1@2 1@3 1@4 1@5 1@6 1@7 hw 0 $ tc filter add dev $IFDEVNAME parent ffff protocol 802.1Q \\ flower vlan_prio 0 hw_tc 0 2) Get the pref id $ tc filter show dev $IFDEVNAME ingress 3) Delete a specific tc flower record (say pref 49151) $ tc filter del dev $IFDEVNAME parent ffff pref 49151 From dmesg, we will observe kernel NULL pointer ooops [ 197.170464] BUG kernel NULL pointer dereference, address 0000000000000000 [ 197.171367] #PF supervisor read access in kernel mode [ 197.171367] #PF error_code(0x0000) - not-present page [ 197.171367] PGD 0 P4D 0 [ 197.171367] Oops 0000 [#1] PREEMPT SMP NOPTI [ 197.171367] RIP 0010tc_setup_cls+0x20b/0x4a0 [stmmac] [ 197.171367] Call Trace [ 197.171367] [ 197.171367] ? __stmmac_disable_all_queues+0xa8/0xe0 [stmmac] [ 197.171367] stmmac_setup_tc_block_cb+0x70/0x110 [stmmac] [ 197.171367] tc_setup_cb_destroy+0xb3/0x180 [ 197.171367] fl_hw_destroy_filter+0x94/0xc0 [cls_flower] The above issue is due to previous incorrect implementation of tc_del_vlan_flow(), shown below, that uses flow_cls_offload_fl",
    "keyphrases": {
        "rootcause": "",
        "weakness": "",
        "impact": "kernel NULL pointer ooops",
        "vector": "",
        "attacker": "",
        "product": "Linux kernel",
        "version": "",
        "component": ""
    }
}
